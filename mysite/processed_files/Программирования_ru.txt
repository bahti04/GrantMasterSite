<q>Что такое язык программирования?
<va>Формальная знаковая система, предназначенная для описания команд и данных, обрабатываемых ЭВМ.
<v>Система команд для управления компьютерными операциями.
<v>Метод описания алгоритмов в понятной форме.
<v>Набор инструкций для взаимодействия с операционной системой.

<q>Как называется процесс формирования токенов в языках программирования?
<va>Лексический анализ.
<v>Синтаксический анализ.
<v>Парсинг.
<v>Компиляция.

<q>Что подразумевается под синтаксисом в языке программирования?
<va>Правила образования токенов и формирования их последовательностей.
<v>Общий стиль написания программного кода.
<v>Методы оптимизации программного кода.
<v>Набор стандартных функций языка.

<q>Какая особенность характерна для фразы в формальном языке, если она грамматически правильна?
<va>Она также семантически правильна.
<v>Она не обязательно семантически правильна.
<v>Она может быть непонятна для компьютера.
<v>Она обязательно содержит ошибки.

<q>Кто считается основоположником программирования?
<va>Чарльз Бэббидж
<v>Жозеф Мари Жаккар
<v>Алан Тьюринг
<v>Джон фон Нейман

<q>Какой механизм использовался в первой аналитической вычислительной машине, изобретенной Чарльзом Бэббиджем?
<va>Валики и шестерни
<v>Электрические схемы
<v>Пневматические трубы
<v>Квантовые биты

<q>Какая операция использовалась в аналитической вычислительной машине Чарльза Бэббиджа?
<va>Сложение
<v>Вычитание
<v>Умножение
<v>Деление

<q>Кто сделал следующий шаг в области программирования после Чарльза Бэббиджа?
<va>Жозеф Мари Жаккар
<v>Алан Тьюринг
<v>Ада Лавлейс
<v>Джон фон Нейман

<q>Для чего Жозеф Мари Жаккар использовал перфокарты?
<va>Для алгоритмизации действий ткацких станков
<v>Для хранения данных
<v>Для управления вычислительной машиной
<v>Для шифрования информации

<q>Какой период охватывают жизненные годы Чарльза Бэббиджа?
<va>1791-1871
<v>1752-1854
<v>1815-1852
<v>1890-1952

<q>В каком веке жил Жозеф Мари Жаккар?
<va>18-19 века
<v>17-18 века
<v>19-20 века
<v>16-17 века

<q>Кого мировое сообщество считает первым программистом в истории?
<va>Аду Лавлейс
<v>Чарльз Бэббидж
<v>Луиджи Манабреа
<v>Алан Тьюринг

<q>Для чего Ада Лавлейс составила первую программу?
<va>Для большой разностной вычислительной машины
<v>Для аналитической машины
<v>Для ранних компьютеров
<v>Для вычисления сложных математических уравнений

<q>Как назывался алгоритм, включенный в первую программу Ады Лавлейс?
<va>Алгоритм вычисления чисел Бернулли
<v>Алгоритм решения квадратных уравнений
<v>Алгоритм быстрого преобразования Фурье
<v>Алгоритм сортировки пузырьком

<q>Какие термины ввела Ада Лавлейс?
<va>«Рабочая ячейка» и «цикл»
<v>«Бит» и «байт»
<v>«Алгоритм» и «переменная»
<v>«Код» и «программа»

<q>Для чего использовались машинные коды в ранних вычислительных машинах?
<va>Для программирования машин
<v>Для шифрования данных
<v>Для исправления ошибок в машинах
<v>Для увеличения скорости обработки данных

<q>Как описывается процесс программирования на ранних вычислительных машинах?
<va>Очень сложным
<v>Достаточно простым
<v>Интуитивно понятным
<v>Автоматизированным

<q>Каким было количество специалистов, способных осуществить программирование ранних вычислительных машин?
<va>Невеликим
<v>Очень большим
<v>Средним
<v>Только один человек

<q>В каком десятилетии началось создание первых ЭВМ?
<va>В конце 1940-х гг.
<v>В начале 1940-х гг.
<v>В конце 1930-х гг.
<v>В начале 1950-х гг.

<q>Что представляли собой языки программирования первого поколения?
<va>Машинные инструкции-коды
<v>Сложные алгоритмические языки
<v>Программы на естественном языке
<v>Визуальное программирование

<q>Для чего программисту было необходимо знать уникальные коды каждой машины?
<va>Чтобы решить требуемую задачу
<v>Для оптимизации производительности ЭВМ
<v>Для устранения ошибок в программном обеспечении
<v>Для повышения безопасности программ

<q>К какому поколению ЭВМ относится язык Ассемблер?
<va>К третьему поколению
<v>К первому поколению
<v>Ко второму поколению
<v>К четвертому поколению

<q>На каком элементе базировались ЭВМ первого поколения?
<va>На базе электровакуумных ламп
<v>На базе транзисторов
<v>На базе интегральных схем
<v>На базе микропроцессоров

<q>Какое поколение ЭВМ было активно в период с 1950 по 1960 годы?
<va>Второе поколение
<v>Первое поколение
<v>Третье поколение
<v>Четвертое поколение

<q>Какой период развития компьютерной техники обозначен как "четвертое поколение"?
<va>1970-е гг. — настоящее время
<v>1960-е — 1970-е гг.
<v>начало — 1981 г.
<v>середина 1950-х гг.

<q>На каком языке программирования писали программы в бывшем СССР, когда не было персональных ЭВМ?
<va>Ассемблер A86
<v>Microsoft Macro Assembler (MASM)
<v>Borland Turbo Assembler (TASM)
<v>Watcom Assembler (WASM)

<q>Кто разработал систему кодирования машинных команд Short Code?
<va>Джон Моучли
<v>Грейс Хоппер
<v>Николас Вирт
<v>Джеймс Гослинг

<q>Что считается началом развития современных языков программирования, реализующих процедурную парадигму?
<va>Система Джона Моучли Short Code
<v>Компилятор Грейс Хоппер
<v>Язык Ассемблера
<v>Императивное программирование

<q>Кто создал первый компилятор для компьютера МАРК-I?
<va>Грейс Хоппер
<v>Джон Моучли
<v>Алан Тьюринг
<v>Тим Бернерс-Ли

<q>Какой стиль программирования стал предпочтительным с середины 1950-х годов?
<va>Императивное программирование
<v>Объектно-ориентированное программирование
<v>Функциональное программирование
<v>Декларативное программирование

<q>Какие особенности имеет императивное программирование?
<va>Команды выполняются последовательно, данные читаются из памяти
<v>Используется объектно-ориентированный подход
<v>Программирование с акцентом на математические функции
<v>Описание желаемого результата, а не способа его достижения

<q>Чем была особенна система Short Code, разработанная Джоном Моучли?
<va>Интерпретатор-переводчик с языка программирования на машинный код
<v>Первая программа для компьютера МАРК-I
<v>Система для программирования на Ассемблере
<v>Платформа для разработки программ на высоком уровне

<q>Какой язык программирования был создан в 1954 году программистами компании IBM?
<va>FORTRAN
<v>COBOL
<v>ALGOL
<v>BASIC

<q>Кто участвовал в разработке языка программирования COBOL?
<va>Грейс Хоппер
<v>Кен Томпсон
<v>Джеймс Гослинг
<v>Линус Торвальдс

<q>Какое полное название у языка Fortran?
<va>FORmula TRANslator
<v>FORMal TRANsmission
<v>FORmative TRANsition
<v>FORce TRANsfer

<q>В каком десятилетии появился язык программирования ALGOL-60?
<va>В конце 1950-х годов
<v>В начале 1960-х годов
<v>В середине 1970-х годов
<v>В конце 1980-х годов

<q>Чем является Algol-68 по отношению к Algol-60?
<va>Потомком
<v>Предшественником
<v>Прямым аналогом
<v>Независимой разработкой

<q>По какой причине разработка Algol-68 была приостановлена?
<va>Из-за появления первых персональных компьютеров
<v>Из-за недостатка финансирования
<v>Из-за смены направления компании-разработчика
<v>Из-за потери популярности языка

<q>Для какого языка не успели сделать полноценный компилятор?
<va>Algol-68
<v>COBOL
<v>FORTRAN
<v>BASIC

<q>Какое влияние оказал язык ALGOL на современное программирование?
<va>Значительное
<v>Незначительное
<v>Отрицательное
<v>Никакого влияния не оказал

<q>В каком году был создан язык программирования PL/1?
<va>1963
<v>1953
<v>1973
<v>1983

<q>Компания, стоящая за созданием языка PL/1, называется?
<va>IBM
<v>Microsoft
<v>Apple
<v>Google

<q>Какая основная причина, по которой PL/1 можно считать универсальным языком программирования?
<va>Зависимость от системы IBM 360/370
<v>Сложная синтаксис
<v>Низкая скорость выполнения
<v>Недостаточная функциональность

<q>Какая особенность PL/1 делает его почти неиспользуемым в современном программировании?
<va>Почти не употребляется
<v>Слишком распространен
<v>Недостаточно мощный
<v>Не поддерживается операционными системами

<q>Что означает аббревиатура BASIC?
<va>Beginners All-purpose Symbolic Instruction Code
<v>Basic All-source Silent Instruction Code
<v>Basic Array of Systematic Instructional Code
<v>Beginners Archival System Instruction Code

<q>Кто разработал язык программирования BASIC?
<va>Сотрудники Дартмутского колледжа
<v>Сотрудники Кембриджского университета
<v>Сотрудники Гарвардского университета
<v>Сотрудники Стэнфордского университета

<q>Для какой цели первоначально был создан язык программирования BASIC?
<va>Для обучения начинающих программистов
<v>Для разработки операционных систем
<v>Для программирования игр
<v>Для автоматизации офисных задач

<q>Какая компания разработала версию языка программирования Visual Basic?
<va>Microsoft
<v>IBM
<v>Apple
<v>Google

<q>На каких первых ПК был предустановлен BASIC-интерпретатор?
<va>IBM
<v>Apple
<v>Commodore
<v>Toshiba

<q>Какой был максимальный объем ОЗУ в ПК конца 1980-х - начала 1990-х годов?
<va>640 Кб
<v>256 Кб
<v>1 Мб
<v>512 Кб

<q>Где размещался интерпретатор BASIC в этих компьютерах?
<va>В зоне ROM
<v>На жестком диске
<v>На дискете
<v>В ОЗУ

<q>Как называется язык программирования, предназначенный для офисного программирования, основанный на Visual Basic?
<va>VBA (Visual Basic Application)
<v>Visual C++
<v>VBScript
<v>Visual Studio

<q>Какой подход к программированию лежит в основе Visual Basic?
<va>Объектно-ориентированный
<v>Процедурный
<v>Функциональный
<v>Декларативный

<q>В каком году был разработан язык программирования АПЛ?
<va>В 1970-е гг.
<v>В 1950-е гг.
<v>В 1980-е гг.
<v>В 1960-е гг.

<q>Для использования на каком устройстве был разработан АПЛ?
<va>Мини-ЭВМ «Январь»
<v>Персональный компьютер «Май»
<v>Суперкомпьютер «Декабрь»
<v>Сервер «Сентябрь»

<q>Какой из этих языков программирования не является императивным?
<va>LISP
<v>АПЛ
<v>LOGO
<v>PROLOG

<q>Какое основное преимущество имеют языки программирования, реализующие императивную парадигму?
<va>Быстрота математических вычислений
<v>Поддержка логического программирования
<v>Обработка списков
<v>Спецификация задачи

<q>Что подразумевается под декларативным программированием?
<va>Спецификация задачи, опирающаяся на функциональное и логическое программирование
<v>Исполнение команд на ассемблере
<v>Прямое управление памятью
<v>Последовательное выполнение инструкций

<q>Какой язык программирования был разработан Джоном Маккарти?
<va>LISP
<v>АПЛ
<v>LOGO
<v>PROLOG

<q>Что является элементом функционального программирования в LISP?
<va>Функциональное исчисление
<v>Логические операции
<v>Императивное управление памятью
<v>Последовательная обработка данных

<q>Какая из перечисленных концепций не относится к языку LISP?
<va>Императивное управление памятью
<v>Обработка списков
<v>Функции как аргументы других функций
<v>Рекурсивные функции

<q>Кто является создателем языка программирования LOGO?
<va>Сеймур Пейперт
<v>Гарри Стил
<v>Джеймс Гослинг
<v>Адель Голдберг

<q>Для какой цели предназначался язык LOGO?
<va>Для обучения школьников основам программирования
<v>Для создания систем искусственного интеллекта
<v>Для работы с символьными вычислениями
<v>Для функционального программирования

<q>Какая парадигма программирования лежит в основе LOGO?
<va>Логическое программирование
<v>Объектно-ориентированное программирование
<v>Функциональное программирование
<v>Императивное программирование

<q>Как называется объект в LOGO, который взаимодействует с условными объектами и перемещается по экрану, оставляя след?
<va>"Черепашка"
<v>"Следопыт"
<v>"Искатель"
<v>"Маркер"

<q>В каком году был разработан язык Scheme?
<va>1975
<v>1967
<v>1970
<v>1980

<q>Кем был разработан язык программирования Scheme?
<va>Гаем Стилом и Джеральдом Сассманом
<v>Сеймуром Пейпертом и Аделем Голдбергом
<v>Джеймсом Гослингом и Ричардом Столлманом
<v>Брайаном Керниганом и Деннисом Ритчием

<q>Кто является основным разработчиком семейства языков программирования ML?
<va>Робин Милнер
<v>Алан Кей
<v>Никлаус Вирт
<v>Эдсгер Дейкстра

<q>В каком году было представлено семейство языков программирования ML?
<va>1973 год
<v>1980 год
<v>1967 год
<v>1990 год

<q>Какой язык программирования относится к семейству ML и является строго типизированным функциональным языком?
<va>Haskell
<v>SmallTalk
<v>Simula67
<v>Pascal

<q>Какие четыре вида конструкций рекомендовались использовать в структурном программировании?
<va>Последовательность, ветвление, цикл, выбор из нескольких альтернатив
<v>Операторы, функции, классы, интерфейсы
<v>Объекты, массивы, указатели, перечисления
<v>Модули, пакеты, библиотеки, фреймворки

<q>Как назывался подход к программированию, использовавшийся до появления структурного программирования?
<va>Хаотическое программирование
<v>Линейное программирование
<v>Функциональное программирование
<v>Процедурное программирование

<q>Какой язык программирования был одним из первых, реализующих парадигму объектно-ориентированного программирования?
<va>Simula67
<v>SmallTalk
<v>Pascal
<v>Haskell

<q>Какая идея лежала в основе языка SmallTalk?
<va>Описание предметной области как совокупности объектов, взаимодействие между которыми осуществлялось через посылку сообщений
<v>Структурная разработка алгоритмов
<v>Функциональное программирование с строгой типизацией
<v>Программирование с использованием перфокарт

<q>Кто является создателем языка программирования Pascal?
<va>Никлаус Вирт
<v>Робин Милнер
<v>Алан Кей
<v>Эдсгер Дейкстра

<q>Как называется программа, приведённая в примере?
<va>Massive
<v>Array
<v>WinCrt
<v>Randomizer

<q>Для чего в данной программе используется ключевое слово "Randomize"?
<va>Для инициализации генератора случайных чисел
<v>Для создания массива
<v>Для очистки экрана
<v>Для выхода из программы

<q>Какой тип данных используется для массива A в этой программе?
<va>integer
<v>char
<v>string
<v>real

<q>Какое максимальное значение может принимать элементы массива A при вызове функции Random?
<va>98
<v>99
<v>10
<v>1

<q>Что делает процедура ClrScr?
<va>Очищает экран
<v>Заполняет массив случайными числами
<v>Выводит 'Конец программы'
<v>Инициализирует генератор случайных чисел

<q>Какой результат будет выведен на экран после выполнения программы?
<va>Случайные числа от 0 до 98
<v>Случайные числа от 1 до 99
<v>Одно случайное число от 0 до 98
<v>Одно случайное число от 1 до 99

<q>Как обозначается конец программы в языке Паскаль?
<va>End.
<v>Stop.
<v>Exit.
<v>Finish.

<q>Как называется процесс, когда компилятор преобразует программу в машинный код?
<va>Компиляция
<v>Интерпретация
<v>Экзекуция
<v>Трансляция

<q>В каком году появилась среда разработки Borland Delphi?
<va>1995 г.
<v>1985 г.
<v>2005 г.
<v>1990 г.

<q>На каком языке программирования была основана среда разработки Borland Delphi?
<va>Turbo Pascal, расширенный до Object Pascal
<v>Чистый Turbo Pascal
<v>C++
<v>Java

<q>Для работы в какой операционной системе была предназначена Borland Delphi?
<va>ОС Windows
<v>ОС Linux
<v>ОС macOS
<v>DOS

<q>Какое преимущество предоставляли case-средства в Borland Delphi?
<va>Генерация части кода, ускоряющая работу программиста
<v>Автоматическое тестирование написанного кода
<v>Интеграция с базами данных
<v>Поддержка многопоточности

<q>Что послужило причиной снижения популярности языка Delphi в последнее время?
<va>Потеря актуальности
<v>Сложность изучения
<v>Отсутствие поддержки ОС Windows
<v>Высокая стоимость лицензии

<q>Какое прозвище дали языку ADA, и кому оно было посвящено?
<va>Августа Ада Лавлейс
<v>Алан Тьюринг
<v>Джон фон Нейман
<v>Чарльз Бэббидж

<q>Какая компания участвовала в разработке языка ADA?
<va>Honeywell Bull
<v>IBM
<v>Microsoft
<v>Apple

<q>Для чего был организован конкурс на создание языка ADA в 1975 г.?
<va>Для создания универсального языка программирования с высокой надежностью и долгим сроком службы программ
<v>Для создания первого объектно-ориентированного языка программирования
<v>Для разработки языка программирования для образовательных целей
<v>Для создания языка программирования, оптимизированного для игровых приложений

<q>Кто является автором языка программирования Си?
<va>Деннис Ритчи
<v>Кен Томпсон
<v>Брайан Керниган
<v>Линус Торвальдс

<q>В каком десятилетии был создан язык Си?
<va>В начале 1970-х годов
<v>В конце 1960-х годов
<v>В середине 1980-х годов
<v>В начале 1990-х годов

<q>Для какой цели был разработан язык Си?
<va>Для реализации операционной системы Unix
<v>Для веб-разработки
<v>Для разработки игр
<v>Для научных расчетов

<q>Каковы были преимущества языка Си?
<va>Компактность и объектный подход
<v>Простота синтаксиса и быстродействие
<v>Поддержка многопоточности и масштабируемость
<v>Наличие большого количества библиотек и фреймворков

<q>С какими трудностями сталкивались программисты, начинавшие с Pascal, при изучении языка Си?
<va>Сложность синтаксиса
<v>Отсутствие поддержки объектно-ориентированного программирования
<v>Недостаток учебных материалов
<v>Нехватка инструментов для отладки

<q>Каковы особенности программирования на языке Си?
<va>Требует хорошей подготовки и сложно разбираться с чужим кодом
<v>Ориентировано на начинающих программистов
<v>Основано на использовании визуальных сред разработки
<v>Подразумевает активное использование функционального программирования

<q>В каком классе языков программирования находится язык Си?
<va>Процедурный
<v>Объектно-ориентированный
<v>Функциональный
<v>Декларативный

<q>Чем вызвано «непонимание» языка Си среди программистов, работавших под ОС Windows и начинавших с Pascal?
<va>Сложностью синтаксиса
<v>Отсутствием графического интерфейса
<v>Несовместимостью с Windows
<v>Отличиями в подходах к программированию

<q>Какой язык программирования стал «потомком» языка С и предназначен для разработки на платформах .NET?
<va>C#
<v>Python
<v>Java
<v>C++

<q>Кто входил в группу ученых, работавших над созданием языка C# в 1998-2001 годах?
<va>Андерс Хейлсберг
<v>Бьерн Страуструп
<v>Джеймс Гослинг
<v>Гвидо ван Россум

<q>Как называется промежуточный машинно-независимый язык, используемый на платформе .NET?
<va>CIL (Common Intermediate Language)
<v>Java Bytecode
<v>Python Intermediate Language
<v>Assembly

<q>Какая была основная цель ученых при разработке языка C#?
<va>Разработка для платформ .NET
<v>Улучшение мобильной разработки
<v>Создание языка для научных вычислений
<v>Разработка языка с открытым исходным кодом

<q>Какая основная идея лежит в основе платформы .NET?
<va>Использование машинно-независимого языка
<v>Создание универсального языка программирования
<v>Обеспечение высокой производительности кода
<v>Поддержка только языка C#

<q>Какой язык стал "читаться" лучше по сравнению с языком С?
<va>C++
<v>Java
<v>Python
<v>Ruby

<q>Какие задачи выполняет платформа .NET?
<va>Управление выполнением программ Microsoft, обеспечение безопасности кода
<v>Только компиляция и исполнение кода на C#
<v>Разработка игр и графических приложений
<v>Анализ и обработка больших данных

<q>Как называется процесс, при котором высокоуровневые языки программирования адаптированные под .NET переводятся на язык CIL?
<va>Компиляция
<v>Интерпретация
<v>Трансляция
<v>Энкодирование

<q>Для каких целей был разработан язык HTML?
<va>Для обмена информацией различного типа между людьми
<v>Для создания операционных систем
<v>Для программирования встроенных систем
<v>Для разработки игр

<q>Кто является разработчиком языка HTML?
<va>Тим Бернерс-Ли
<v>Билл Гейтс
<v>Линус Торвальдс
<v>Марк Андриссен

<q>В каком году началась разработка языка HTML?
<va>1986
<v>1975
<v>1990
<v>1980

<q>Где разрабатывался язык HTML?
<va>В ЦЕРН, Женева, Швейцария
<v>В Массачусетском технологическом институте, США
<v>В Университете Стэнфорда, США
<v>В Кембриджском университете, Великобритания

<q>Как называется язык, на который переводятся высокоуровневые языки программирования адаптированные под .NET перед JIT компиляцией?
<va>CIL (Common Intermediate Language)
<v>Java Bytecode
<v>Assembly
<v>Python Bytecode

<q>Какова основная цель технологии JIT в .NET?
<va>Компиляция машинного кода "по мере надобности"
<v>Повышение производительности приложений
<v>Уменьшение размера исполняемых файлов
<v>Автоматическое обновление программного обеспечения

<q>Какая кодировка указана в примере XML документа?
<va>windows-1251
<v>UTF-8
<v>ISO-8859-1
<v>UTF-16

<q>Какой язык программирования был разработан компанией Sun Microsystems?
<va>Java
<v>PHP
<v>C++
<v>Python

<q>Какая компания стала впоследствии владельцем Java?
<va>Oracle
<v>Microsoft
<v>IBM
<v>Apple

<q>Какое событие произошло 23 мая 1995 года?
<va>Официальная дата создания языка Java
<v>Запуск первой версии PHP
<v>Основание компании Sun Microsystems
<v>Покупка Sun Microsystems компанией Oracle

<q>Для чего предназначен фрагмент кода на языке Java, представленный в документе?
<va>Для создания и инициализации двух массивов случайными числами
<v>Для демонстрации концепции классов и объектов
<v>Для расчета математических функций
<v>Для соединения с базой данных

<q>Как называется метод, который служит точкой входа в программу на Java?
<va>main
<v>start
<v>run
<v>init

<q>Чему равны значения переменных l1 и l2 в представленном коде?
<va>11
<v>10
<v>1
<v>2

<q>Какая функция в коде используется для подключения к базе данных MySQL?
<va>mysql_connect
<v>mysql_query
<v>mysql_select_db
<v>mysql_set_charset

<q>Какая команда PHP используется для выбора базы данных?
<va>mysql_select_db
<v>mysql_query
<v>mysql_connect
<v>db_select

<q>Для чего в коде используется функция mysql_query?
<va>Для выполнения запроса к базе данных
<v>Для подключения к базе данных
<v>Для выбора базы данных
<v>Для установки кодировки соединения

<q>Какую цель преследует строка "or die" в коде?
<va>Остановить выполнение скрипта, если подключение не удалось
<v>Удалить базу данных, если подключение не удалось
<v>Выбрать другую базу данных
<v>Вернуть предыдущее состояние базы данных

<q>Какая кодировка устанавливается в этом фрагменте кода для работы с базой данных?
<va>cp1251
<v>utf8
<v>ascii
<v>latin1

<q>Что делает функция isset в данном коде?
<va>Проверяет, установлена ли переменная $_GET['id_im']
<v>Устанавливает значение переменной
<v>Проверяет, существует ли функция в коде
<v>Создает новую переменную в коде

<q>В каком году был представлен язык Haskell?
<va>1990
<v>1973
<v>1967
<v>1970

<q>Как называется первый язык программирования, поддерживающий семантику современных объектно-ориентированных языков?
<va>Simula67
<v>SmallTalk
<v>Pascal
<v>Algol

<q>Кто является создателем языка программирования Pascal?
<va>Никлаус Вирт
<v>Робин Милнер
<v>Эдсгер Дейкстра
<v>Чарльз Хоаэр

<q>Какой принцип в архитектуре фон Неймана упрощает арифметические и логические операции?
<va>Использование двоичной системы счисления
<v>Программное управление ЭВМ
<v>Использование десятичной системы счисления
<v>Отдельное хранение данных и программ

<q>Что представляют собой императивные языки программирования?
<va>Программа включает последовательность операторов или команд
<v>Программа состоит из функций
<v>Программа основана на объектах и классах
<v>Программа использует правила логического вывода

<q>Какой принцип фон Неймана описывает использование памяти компьютера как для хранения данных, так и для программ?
<va>Память компьютера используется и для программ, и для данных
<v>Программное управление ЭВМ
<v>Использование двоичной системы счисления
<v>Последовательное выполнение команд

<q>Как классифицируют языки программирования по близости к естественным языкам?
<va>Низкоуровневые и высокоуровневые языки программирования
<v>Императивные и функциональные языки программирования
<v>Структурные и объектно-ориентированные языки программирования
<v>Статически и динамически типизированные языки программирования

<q>Как называется принцип, согласно которому в любой момент можно обратиться к любой ячейке памяти ЭВМ по ее адресу?
<va>Принцип адресуемости памяти
<v>Принцип последовательного доступа
<v>Принцип стековой организации
<v>Принцип очереди

<q>Какой тип языков программирования считается неэффективным для использования на ЭВМ с архитектурой фон Неймана?
<va>Функциональные языки программирования
<v>Процедурные языки программирования
<v>Логические языки программирования
<v>Объектно-ориентированные языки программирования

<q>Какой язык программирования является типичным представителем функциональных языков программирования?
<va>LISP
<v>Prolog
<v>Java
<v>Python

<q>Что представляют собой процедурные языки программирования?
<va>Блоки или подпрограммы решения задачи или ее части
<v>Набор фактов и правил
<v>Описание объектов в виде классов
<v>Последовательности функций

<q>В каком году был предложен язык программирования Prolog?
<va>1973 год
<v>1980 год
<v>1965 год
<v>1991 год

<q>Как называется язык программирования, предложенный Аланом Кольмероэ?
<va>Prolog
<v>Haskell
<v>Scheme
<v>Ada

<q>Чем характеризуются объектно-ориентированные языки программирования?
<va>Описанием объектов в виде классов с методами и атрибутами
<v>Последовательным выполнением команд
<v>Использованием блоков и подпрограмм
<v>Набором фактов и правил

<q>Какой язык программирования совмещает в себе объектно-ориентированный подход и обычный алгоритмический подход?
<va>Python
<v>Delphi
<v>Java
<v>Ada

<q>Какие языки программирования относятся к процедурному программированию согласно классификации?
<va>Assembler, Fortran, Basic, C
<v>Smalltalk, C++, Delphi
<v>Prolog, LISP
<v>Modula, Pascal

<q>К какой категории относится язык программирования Prolog?
<va>Логическое программирование
<v>Структурное программирование
<v>Объектное программирование
<v>Операционное программирование

<q>Какой язык является представителем декларативного программирования?
<va>LISP
<v>Pascal
<v>Basic
<v>Fortran

<q>Какой из нижеперечисленных языков относится к объектному программированию?
<va>Smalltalk
<v>Assembler
<v>Fortran
<v>Pascal

<q>Что включает в себя критерий "мобильность" при выборе языка программирования?
<va>Возможность переноса программы с одного компьютера на другие вычислительные средства
<v>Способность программы работать на мобильных устройствах
<v>Легкость обучения языка программирования
<v>Низкая затратность ресурсов компьютера

<q>Какой критерий подразумевает возможность описания предметной области на близком к ней языке?
<va>Естественность
<v>Производительность
<v>Масштабируемость
<v>Портируемость

<q>Какой фактор выбора языка программирования постепенно теряет свою значимость из-за наличия множества бесплатных языковых средств?
<va>Стоимость
<v>Скорость выполнения
<v>Сложность синтаксиса
<v>Поддержка сообществом

<q>Что определяет синтаксис в языках программирования?
<va>Правила образования токенов и правила формирования последовательностей токенов
<v>Формальное содержание (смысл) последовательности токенов
<v>Методы оптимизации кода
<v>Структуру и организацию данных

<q>Что описывает семантика в языках программирования?
<va>Формальное содержание (смысл) последовательности токенов
<v>Правила образования токенов и последовательностей токенов
<v>Способы обработки исключений
<v>Типы данных и операции над ними

<q>Что определяется в левой части метаформулы?
<va>Определяемое понятие
<v>Множество допустимых конструкций языка
<v>Список исключений
<v>Функциональные зависимости

<q>Какой метасимвол в метаформулах имеет смысл "по определению есть"?
<va>::=
<v>=
<v>|
<v><>

<q>Что означает знак "|" в метаформулах?
<va>"Или"
<v>"И"
<v>"Затем"
<v>"Также как"

<q>Что определяет следующая метаформула: <двоичная цифра>::= 0 | 1?
<va>Что <двоичная цифра> является либо 0, либо 1
<v>Что <двоичная цифра> является любым числом от 0 до 1
<v>Что <двоичная цифра> является любым натуральным числом
<v>Что <двоичная цифра> является любым десятичным числом

<q>Какие элементы лежат в основе большинства алфавитов языков программирования?
<va>Буквы латинского алфавита, арабские цифры и специальные символы
<v>Иероглифы, арабские цифры и специальные символы
<v>Буквы кириллицы, римские цифры и специальные символы
<v>Буквы латинского алфавита, арабские цифры и эмотиконы

<q>Как обозначается "двоичная цифра" в синтаксисе языков программирования?
<va>"<цифра> ::= 0 | 1"
<v>"<цифра> ::= A | B"
<v>"<цифра> ::= true | false"
<v>"<цифра> ::= yes | no"

<q>Какие символы включает в себя элемент "<знак арифметической операции>"?
<va>:+ | - | * | /
<v>:< | > | = | %
<v>:$ | & | ? | #
<v>:@ | ! | ^ | ~

<q>Какой элемент обозначает комментарий в языках программирования?
<va>"<комментарий> ::= {любая последовательность символов}"
<v>"<переменная> ::= {любая последовательность символов}"
<v>"<цифра> ::= {любая последовательность символов}"
<v>"<специальный символ> ::= {любая последовательность символов}"

<q>Что означает элемент "<основной символ>"?
<va>Основные символы языка
<v>Комментарий
<v>Специальное слово
<v>Знак операции

<q>Как обозначается операция присваивания в языке Delphi?
<va>:=
<v>=
<v>==
<v><-

<q>Чем является компилятор?
<va>Программой для перевода высокоуровневого языка в машинный код
<v>Средой для написания программного кода
<v>Инструментом для отладки программ
<v>Системой управления базами данных

<q>Как называется процесс перевода программы на язык, близкий к машинному?
<va>Компиляция
<v>Интерпретация
<v>Транскомпиляция
<v>Ассемблирование

<q>Что делает интерпретатор?
<va>Построчно анализирует и выполняет исходную программу
<v>Переводит исходный код в машинный язык
<v>Оптимизирует исходный код для ускорения его выполнения
<v>Создаёт графический интерфейс для программы

<q>Какие языки программирования относятся к смешанному типу?
<va>Java и C#
<v>Python и Ruby
<v>JavaScript и PHP
<v>C++ и Rust

<q>На что компилируется программа на языке Java?
<va>В байт-код для виртуальной машины Java
<v>Напрямую в машинный код
<v>В исходный код другого языка программирования
<v>В универсальный исполняемый файл

<q>Как называется технология компиляции, используемая в Java и C#?
<va>JIT (Just-in-time compilation)
<v>АОТ (Ahead-of-time compilation)
<v>Постоянная компиляция
<v>Кросс-компиляция

<q>Какой формулы придерживался Никлаус Вирт для понимания сущности программы?
<va>Программа = алгоритм + данные
<v>Программа = данные + пользовательский интерфейс
<v>Программа = алгоритм + компьютерная сеть
<v>Программа = алгоритм + оборудование

<q>Что является первым этапом в проектировании программы?
<va>Постановка задачи
<v>Разработка алгоритма
<v>Создание программы
<v>Отладка программы

<q>Какой этап в проектировании программы включает в себя формальную запись каждого этапа вычислительного процесса?
<va>Разработка алгоритма
<v>Постановка задачи
<v>Создание документации на программу
<v>Анализ и обработка результатов

<q>Какой общий метод используется для устранения ошибок при отладке программы?
<va>Прослеживание хода выполнения программы
<v>Автоматическое тестирование
<v>Использование системы контроля версий
<v>Проведение код-ревью

<q>Какая цель у метода проектирования программы «снизу вверх»?
<va>Создание базовых элементов для построения более сложных структур
<v>Сначала создание структуры программы, а затем детализация каждого элемента
<v>Ускорение процесса разработки за счет параллельной работы
<v>Упрощение процесса тестирования и отладки программы

<q>Что включает в себя метод проектирования «сверху вниз»?
<va>Сначала создается структура программы, а затем детально прорабатывается каждый элемент
<v>Сначала разрабатываются отдельные модули, затем они интегрируются
<v>Сначала проектируются интерфейсы, затем логика программы
<v>Сначала создается алгоритм, а затем данные

<q>Какой из перечисленных этапов не является частью проектирования программы?
<va>Создание графического пользовательского интерфейса
<v>Постановка задачи
<v>Разработка алгоритма
<v>Отладка программы

<q>На каком сайте находится пользователь, судя по URL в адресной строке браузера?
<va>python.org
<v>python.com
<v>pythonsource.org
<v>pythonrelease.com

<q>Что делает Python одним из лучших языков программирования по мнению автора?
<va>Простота и универсальность.
<v>Скорость выполнения кода.
<v>Мощные функции визуализации.
<v>Большое количество библиотек.

<q>Что необходимо для установки Python согласно данной инструкции?
<va>Скачать его с официального сайта и выбрать соответствующую версию.
<v>Купить лицензию на использование.
<v>Скачать с любого сайта с программным обеспечением.
<v>Зарегистрироваться на специализированном портале.

<q>На каком сайте предлагается скачать Python?
<va>www.python.org
<v>www.python.com
<v>www.pythondownload.com
<v>www.opensource.org

<q>На каком языке программирования написана представленная программа?
<va>Pascal
<v>Python
<v>C++
<v>Java

<q>Какой синтаксис используется для вывода данных на экран в данном языке программирования?
<va>writeln
<v>print
<v>console.log
<v>echo

<q>Какая команда используется для ввода данных от пользователя в данной программе?
<va>Readln
<v>Input
<v>Scanf
<v>Get

<q>Как обозначается операция возведения в степень в этом языке программирования?
<va>**
<v>^
<v>pow
<v>exp

<q>Для чего в данном фрагменте кода используется функция sqrt?
<va>Для извлечения квадратного корня
<v>Для возведения числа в квадрат
<v>Для вычисления синуса числа
<v>Для определения максимального значения

<q>Каков результат работы программы, если x=4?
<va>y = 18
<v>y = 16
<v>y = 20
<v>y = 22

<q>Какой тип переменных объявлен в начале программы?
<va>real
<v>integer
<v>string
<v>boolean

<q>Для чего в программе используется функция Readln?
<va>Для чтения введенных пользователем данных
<v>Для вывода данных на экран
<v>Для чтения данных из файла
<v>Для записи данных в файл

<q>Какое арифметическое действие выполняется с переменной x в данной программе?
<va>Возводится в квадрат и умножается на 2
<v>Складывается с двумя
<v>Делится на 2
<v>Вычитается из квадратного корня

<q>Какой символ используется для возведения в степень в данном языке программирования?
<va>**
<v>^
<v>pow
<v>**

<q>Для чего в программе используется функция sqrt?
<va>Для вычисления квадратного корня
<v>Для возведения числа в квадрат
<v>Для вычисления
<v>Для округления числа до ближайшего целого

<q>Что показано в окне программы под кодом?
<va>Результат выполнения программы.
<v>Код другой программы.
<v>Сообщение об ошибке.
<v>Инструкцию по установке Python.

<q>Сколько бит памяти отводится под один знак целого числа в компьютере, как указано в справке?
<va>8 бит.
<v>16 бит.
<v>32 бит.
<v>64 бит.

<q>Что такое числовой литерал?
<va>Числовая запись в программе или интерпретаторе
<v>Имя переменной, которой присвоено числовое значение
<v>Команда для выполнения математических операций
<v>Функция для работы с числами в Python

<q>Как обычно используются числовые литералы в программировании?
<va>Значение присваивается переменной
<v>Используются как комментарии
<v>Используются для названия переменных
<v>Применяются для импорта библиотек

<q>В каком случае использование простых числовых литералов в Python имеет смысл?
<va>Когда Python используется как калькулятор
<v>При создании массивов
<v>При написании условных операторов
<v>Для определения длины строки

<q>Как называются числовые литералы в некоторых других языках программирования?
<va>Константы
<v>Переменные
<v>Идентификаторы
<v>Модули

<q>Какие виды числовых литералов существуют?
<va>Целые, дробные, представленные в различных системах счисления
<v>Только целые и дробные
<v>Только в десятичной системе счисления
<v>Только числа с плавающей точкой

<q>Как еще можно назвать числовой литерал?
<va>Числовая запись
<v>Числовая функция
<v>Числовой метод
<v>Числовой оператор

<q>Какой метод используется в Python для форматирования чисел в строке?
<va>format()
<v>stringify()
<v>formatString()
<v>numberFormat()

<q>Какой символ в инструкции format() в Python используется для обозначения обязательного вывода знака числа?
<va>"+"
<v>"#"
<v>"*"
<v>"-"

<q>Для вывода числа в экспоненциальном формате в Python, какой символ следует использовать в инструкции format()?
<va>"е"
<v>"x"
<v>"f"
<v>"g"

<q>Как обозначается двоичная система счисления в инструкции format() в Python?
<va>"b"
<v>"d"
<v>"o"
<v>"x"

<q>Какой формат в инструкции format() используется для представления числа с фиксированным количеством знаков после запятой?
<va>"X.Xf"
<v>"X.Xd"
<v>"X.Xg"
<v>"X.Xe"

<q>Что делает добавление символа "#" в инструкции format() в Python при работе с системами счисления?
<va>Указывает тип системы счисления
<v>Делает число положительным
<v>Добавляет дополнительный ноль
<v>Центрирует число на экране

<q>В каком случае используется "{:*=12}" в инструкции format() в Python?
<va>Для вывода числа с заполнителем "*" и общим количеством разрядов 12
<v>Для вывода числа с 12 знаками после запятой
<v>Для вывода числа в 12-ричной системе счисления
<v>Для центрирования числа с 12 пробелами с каждой стороны

<q>Что делает функция math.ldexp(X, I)?
<va>Вычисляет $X \times 2^I$.
<v>Возвращает логарифм X по основанию I.
<v>Вычисляет квадратный корень из X.
<v>Возвращает X в степени I.

<q>Для чего используется функция math.fsum в Python?
<va>Для вычисления суммы всех членов последовательности.
<v>Для нахождения максимального значения в последовательности.
<v>Для вычисления произведения элементов последовательности.
<v>Для сортировки чисел в последовательности.

<q>Какое значение возвращает функция math.isinf(X)?
<va>True, если X является бесконечностью.
<v>True, если X не является числом.
<v>Значение X, округлённое до ближайшего целого.
<v>Противоположное X значение.

<q>Какую функцию стоит использовать для более точного вычисления естественного логарифма (1+X), особенно если X стремится к 0?
<va>math.log1p(X).
<v>math.log(X, [base]).
<v>math.exp(X).
<v>math.expm1(X).

<q>Что вычисляет функция math.sqrt(X)?
<va>Квадратный корень из X.
<v>Кубический корень из X.
<v>X в квадрате.
<v>1/X.

<q>Чему равно значение функции math.atan2(Y, X), если точка (X, Y) находится в первой четверти координатной плоскости?
<va>Арктангенсу Y/X в радианах.
<v>Арксинусу Y в радианах.
<v>Арккосинусу X в радианах.
<v>Арктангенсу X/Y в радианах.

<q>Какой функцией можно преобразовать радианы в градусы?
<va>math.degrees(X).
<v>math.radians(X).
<v>math.fsum(X).
<v>math.hypot(X, Y).

<q>Какая функция используется для вычисления обратного гиперболического косинуса?
<va>math.acosh(X).
<v>math.asinh(X).
<v>math.atanh(X).
<v>math.sinh(X).

<q>К какому типу относится функция int(x)?
<va>Преобразование к целому
<v>Преобразование к числу с плавающей точкой
<v>Преобразование к комплексному числу
<v>Сопряжение комплексного числа

<q>Для чего используется функция float.is_integer()?
<va>Проверка, является ли число целым
<v>Преобразование к целому числу
<v>Преобразование к числу с плавающей точкой
<v>Преобразование к комплексному числу

<q>Какой тип числа возвращается функцией complex(x, y)?
<va>Комплексное число
<v>Целое число
<v>Число с плавающей точкой
<v>Пара целых чисел

<q>Что делает функция hex(x)?
<va>Преобразование целого числа в 16-ричную строку
<v>Преобразование целого числа в 8-ричную строку
<v>Преобразование целого числа в двоичную строку
<v>Преобразование числа с плавающей точкой в целое число

<q>Какое действие выполняет функция bin(x)?
<va>Преобразование целого числа в двоичную строку
<v>Преобразование целого числа в 16-ричную строку
<v>Преобразование целого числа в 8-ричную строку
<v>Сопряжение комплексного числа

<q>Для чего служит функция oct(x)?
<va>Преобразование целого числа в 8-ричную строку
<v>Преобразование целого числа в 16-ричную строку
<v>Преобразование целого числа в двоичную строку
<v>Преобразование числа с плавающей точкой в 16-ричную строку

<q>Что возвращает функция float.hex()?
<va>Число с плавающей точкой в 16-ричной строке
<v>Целое число в 16-ричной строке
<v>Целое число в двоичной строке
<v>Целое число в 8-ричной строке

<q>Чем является результат выполнения функции float.as_integer_ratio()?
<va>Парой целых чисел
<v>Целым числом
<v>Числом с плавающей точкой
<v>Комплексным числом

<q>Как можно записать литералы строк в Python?
<va>В апострофах, кавычках или тройных кавычках
<v>Только в кавычках
<v>Только в апострофах
<v>Только в тройных кавычках

<q>Какой тип последовательности в Python является неизменяемым?
<va>Кортеж (tuple)
<v>Список (list)
<v>Множество (set)
<v>Словарь (dict)

<q>Что произойдет при попытке изменения строки в Python?
<va>Будет создана новая строка
<v>Строка изменится
<v>Программа завершится с ошибкой
<v>Изменения будут игнорироваться

<q>Какой специальный символ в Python позволяет вставить апостроф или кавычку в строку без вызова ошибки синтаксиса?
<va>Левый слэш ($
<v>Правый слэш (/)
<v>Точка (.)
<v>Звездочка (*)

<q>Какой символ в Python используется для подавления экранирования в строках?
<va>r
<v>n
<v>\\
<v>/

<q>Как называется операция, при которой две или более строк объединяются в одну?
<va>Конкатенация
<v>Интерполяция
<v>Компиляция
<v>Декомпозиция

<q>Какой символ используется для повторения строк в Python?
<va>*
<v>+
<v>&
<v>%

<q>Что будет результатом следующего выражения в Python: 'много '*3?
<va>много много много
<v>многомногомногомногомногомногомного
<v>много3
<v>много много

<q>Как в Python получить доступ к отдельному символу в строке?
<va>Использование индекса в квадратных скобках
<v>Использование метода .get()
<v>Использование скобок {}
<v>Использование метода .charAt()

<q>Какой индекс у третьего символа в строке в Python?
<va>2
<v>3
<v>1
<v>0

<q>Что будет результатом выполнения следующего кода в Python: print('hello'+'beautiful'+' world')?
<va>hello beautiful world
<v>hellobeautifulworld
<v>hellobeautiful world
<v>hello beautifulworld

<q>Какая инструкция в Python позволяет пользователю вводить данные?
<va>input()
<v>print()
<v>int()
<v>find()

<q>Какая инструкция в Python используется для преобразования строки в число?
<va>int()
<v>input()
<v>str()
<v>float()

<q>Каким образом в Python можно совместить ввод данных и их преобразование в число?
<va>Используя int(input())
<v>Используя input(int())
<v>Используя str(input())
<v>Используя float(input())

<q>Для чего в Python используется конструкция st[i: j: step]?
<va>Для получения подстроки из строки st
<v>Для добавления подстроки в строку st
<v>Для замены подстроки в строке st
<v>Для сравнения подстрок в строке st

<q>Что означают параметры i, j и step в конструкции среза строки?
<va>i — индекс начала, j — индекс конца, step — шаг выборки
<v>i — длина строки, j — шаг выборки, step — индекс начала
<v>i — индекс начала, j — длина среза, step — шаг выборки
<v>i — шаг выборки, j — индекс начала, step — индекс конца

<q>Какая инструкция в Python используется для проверки вхождения подстроки в строку?
<va>find()
<v>input()
<v>int()
<v>slice()

<q>Что указывают параметры [start] и [end] в инструкции find() в Python?
<va>[start] — индекс начала поиска, [end] — индекс конца поиска
<v>[start] — длина искомой подстроки, [end] — шаг поиска
<v>[start] — шаг поиска, [end] — длина искомой подстроки
<v>[start] — индекс начала среза, [end] — индекс конца среза

<q>Какой метод в Python используется для поиска первого вхождения подстроки в строку?
<va>find
<v>rfind
<v>index
<v>rindex

<q>Что возвращает метод find в Python, если подстрока не найдена в строке?
<va>-1
<v>0
<v>Пустую строку
<v>ValueError

<q>Какой метод в Python используется для замены одной подстроки на другую в строке?
<va>replace
<v>change
<v>substitute
<v>swap

<q>Какой метод в Python используется для поиска последнего вхождения подстроки в строку?
<va>rfind
<v>find
<v>lastindex
<v>endindex

<q>Что возвращает метод index в Python, если подстрока не найдена в строке?
<va>ValueError
<v>-1
<v>0
<v>None

<q>Какая функция в Python используется для определения длины строки?
<va>len
<v>length
<v>size
<v>count

<q>Что представляет собой метод в Python?
<va>Функция, применяемая к созданному объекту
<v>Простая функция
<v>Команда для изменения значения переменной
<v>Циклическая структура

<q>Какой метод в Python возвращает номер последнего вхождения подстроки, если их несколько?
<va>rfind
<v>find
<v>lastfind
<v>multiindex

<q>Какой метод создает строку, дополняя ее справа заданным символом до указанной длины?
<va>ljust(width, Ш1сЬаг='символ')
<v>rjust(width, Ш1сЬаг='символ')
<v>format()
<v>%d

<q>Какой метод создает строку, дополняя ее слева заданным символом до указанной длины?
<va>rjust(width, Ш1сЬаг='символ')
<v>ljust(width, Ш1сЬаг='символ')
<v>format()
<v>%s

<q>Какой оператор используется для форматирования строк, когда нужно добавить в строку элементы, которые изменяются в процессе выполнения программы?
<va>%
<v>rjust()
<v>ljust()
<v>format()

<q>Какой спецификатор используется в операторе форматирования строк для подстановки строки?
<va>%s
<v>%d
<v>%f
<v>%%

<q>Какой спецификатор используется в операторе форматирования строк для подстановки десятичного числа?
<va>%d
<v>%s
<v>%f
<v>%%

<q>Какой спецификатор используется для вывода числа с плавающей точкой в операторе форматирования строк?
<va>%f
<v>%d
<v>%s
<v>%%

<q>Какой спецификатор используется для вывода числа в восьмеричной системе в операторе форматирования строк?
<va>%o
<v>%x
<v>%d
<v>%f

<q>Для чего используется спецификатор %% в операторе форматирования строк?
<va>Для вывода символа процента
<v>Для подстановки строки
<v>Для подстановки десятичного числа
<v>Для вывода числа с плавающей точкой

<q>Какой символ в простейших случаях используют программисты для операций форматирования?
<va>%
<v>.format()
<v>+
<v>@

<q>Как называется специальный модуль в Python для работы с регулярными выражениями?
<va>re
<v>regex
<v>string
<v>math

<q>Какова функция метода re.match в модуле re?
<va>Проверяет, соответствует ли начало строки регулярному выражению
<v>Ищет все соответствия регулярному выражению в строке
<v>Заменяет подстроку в строке, соответствующую регулярному выражению
<v>Разбивает строку по регулярному выражению

<q>Какое правило используется при работе с регулярными выражениями?
<va>Правило конкатенации
<v>Правило логического ИЛИ
<v>Правило ветвления
<v>Правило повторения

<q>Какие элементы содержатся в регулярных выражениях?
<va>Обычные символы (буквы и цифры) и специальные символы
<v>Только буквы
<v>Только цифры
<v>Только специальные символы

<q>Какая операция осуществляется с помощью регулярных выражений?
<va>Манипуляция с элементами строк
<v>Выполнение математических расчетов
<v>Создание графических интерфейсов
<v>Управление базами данных

<q>Какой метод используется для добавления элемента в конец списка в Python?
<va>s.append(x)
<v>s.insert(x)
<v>s.extend(x)
<v>s.add(x)

<q>Какой метод в Python используется для удаления первого встреченного элемента из списка?
<va>s.remove(x)
<v>s.delete(x)
<v>s.pop(x)
<v>s.erase(x)

<q>Какой метод используется для полного очищения списка в Python?
<va>s.clear()
<v>s.empty()
<v>s.removeall()
<v>s.deleteall()

<q>Как в Python называется метод для сортировки элементов списка по убыванию?
<va>s.sort(reverse=1)
<v>s.reverse(sort)
<v>s.sort(descending)
<v>s.order(reverse)

<q>Как в Python осуществляется доступ к элементу списка по индексу?
<va>Имя списка и индекс в квадратных скобках
<v>Имя списка и индекс в круглых скобках
<v>Имя списка и индекс в фигурных скобках
<v>Имя списка и индекс без скобок

<q>С какого номера начинается индексация элементов списка в Python?
<va>С нуля
<v>С единицы
<v>С двойки
<v>С тройки

<q>Какой метод в Python используется для расширения списка за счет другого списка?
<va>s.extend(x)
<v>s.append(x)
<v>s.insert(x)
<v>s.concatenate(x)

<q>Какой метод в Python применяется для изменения порядка элементов списка на обратный?
<va>s.reverse()
<v>s.invert()
<v>s.backwards()
<v>s.flip()

<q>Что такое кортеж?
<va>Это список, элементы которого нельзя менять.
<v>Это функция для создания списков.
<v>Это метод для изменения строк.
<v>Это цикл в программировании.

<q>В каких скобках заключается кортеж?
<va>В круглые скобки ().
<v>В фигурные скобки {}.
<v>В квадратные скобки [].
<v>Без скобок.

<q>Может ли кортеж быть многоуровневым?
<va>Да.
<v>Нет.
<v>Только если он пустой.
<v>Только если он содержит строки.

<q>Какой литерал используется для создания кортежа?
<va>(1, 2, 3, 'Python').
<v>[1, 2, 3, 'Python'].
<v>{1, 2, 3, 'Python'}.
<v>"1, 2, 3, 'Python'".

<q>Какая функция используется для создания кортежа?
<va>tuple().
<v>list().
<v>dict().
<v>set().

<q>Какой результат выполнения кода print(tuple('tuple'))?
<va>('t', 'u', 'p', 'l', 'e').
<v>('tuple').
<v>('tuple', 'tuple').
<v>(('t', 'u', 'p', 'l', 'e'),).

<q>Какой результат выполнения кода print(s) если s=(1, 2, 3, 'Python', 5, (2, 'a'))?
<va>(1, 2, 3, 'Python', 5, (2, 'a')).
<v>(1, 2, 3, 5, (2, 'a')).
<v>Ошибка, так как кортежи не могут быть вложенными.
<v>(1, 2, 3, 'Python', 5, 2, 'a').

<q>Какие операции и методы, применяемые к строкам, также доступны для работы с кортежами?
<va>конкатенация, повторение
<v>изменение элементов
<v>удаление элементов
<v>добавление новых элементов

<q>Чему равно значение d[1] в примере создания словаря?
<va>'Google'
<v>'Mail'
<v>'Yandex'
<v>'Yahoo'

<q>Как называется структура данных, представляющая собой отображение между ключами и значениями?
<va>Словарь
<v>Список
<v>Кортеж
<v>Массив

<q>Какая особенность у ключей в словаре?
<va>Не могут быть два одинаковых ключа
<v>Могут быть любых типов данных
<v>Могут повторяться
<v>Не имеют ограничений

<q>Каким способом чаще всего создается словарь?
<va>С помощью литерала или функции dict()
<v>С помощью списков
<v>С помощью кортежей
<v>С помощью класса Dictionary

<q>Какой тип данных представляет собой "кортеж"?
<va>Неизменяемый упорядоченный набор элементов
<v>Изменяемый упорядоченный набор элементов
<v>Неизменяемый неупорядоченный набор элементов
<v>Изменяемый неупорядоченный набор элементов

<q>В каких языках программирования словари могут называться хэшами или ассоциативными массивами?
<va>В других языках программирования
<v>Только в Python
<v>Только в Java
<v>Только в C++

<q>Какой метод позволяет создать словарь в Python?
<va>dict()
<v>list()
<v>tuple()
<v>set()

<q>Какой метод в Python позволяет получить значение ключа из словаря, предоставляя возможность вернуть значение по умолчанию, если ключ отсутствует?
<va>get
<v>pop
<v>items
<v>keys

<q>Какой цикл используется для перебора элементов словаря в предоставленном примере кода?
<va>for
<v>while
<v>do-while
<v>loop

<q>Какой ключ связан со значением 'Yahoo' в словаре d?
<va>4
<v>3
<v>2
<v>1

<q>Каковы идентификаторы пользователей в предоставленном сложном словаре log?
<va>'Ivanov', 'Sidorov'
<v>'123', 'ivanov@mail.ru', 'sidorov@yandex.ru'
<v>'Ivanov Petr Petrovich', 'Sidorov Ivan Ivanovich'
<v>'1', '2'

<q>Какой индекс у пользователя с идентификатором 'Sidorov' в словаре log?
<va>2
<v>1
<v>3
<v>4

<q>Какие два метода позволяют организовать работу со словарями, были рассмотрены в предыдущих параграфах?
<va>clear() и update()
<v>get() и pop()
<v>items() и keys()
<v>append() и remove()

<q>Какие данные пользователя содержатся в каждом элементе списка log?
<va>Логин, пароль, ФИО и e-mail
<v>Только логин и пароль
<v>Только ФИО и e-mail
<v>Только e-mail

<q>Какой метод используется для получения значения по ключу из словаря в Python?
<va>d.get(key)
<v>d.obtain(key)
<v>d.retrieve(key)
<v>d.fetch(key)

<q>Какой метод возвращает все ключи из словаря в Python?
<va>keys()
<v>values()
<v>items()
<v>all_keys()

<q>Что произойдет, если вызвать метод pop() со словарем в Python, используя ключ, которого нет?
<va>Будет выброшено исключение KeyError.
<v>Будет возвращено значение None.
<v>Будет создан новый ключ.
<v>Ничего не произойдет.

<q>Что делает метод pop() со словарем в Python?
<va>Удаляет и возвращает элемент по ключу.
<v>Добавляет элемент в словарь.
<v>Изменяет значение элемента.
<v>Сортирует словарь.

<q>Что будет выведено на экран при выполнении команды print(d.get(4))?
<va>Ничего, ключ 4 отсутствует.
<v>'Иванов'
<v>'Петров'
<v>'Сидоров'

<q>Какой результат работы команды print(d.keys())?
<va>dict_keys([1, 2, 3, 4])
<v>dict_values([1, 2, 3, 4])
<v>[1, 'Иванов', 2, 'Петров', 3, 'Сидоров', 4, 'Жуков']
<v>dict_items([(1, 'Иванов'), (2, 'Петров'), (3, 'Сидоров'), (4, 'Жуков')])

<q>Какое исключение возникнет при вызове d.popitem() в пустом словаре?
<va>KeyError.
<v>ValueError.
<v>IndexError.
<v>TypeError.

<q>Какая функция в Python используется для возвращения значения ключа в словаре по умолчанию, если ключ не найден?
<va>setdefault
<v>getkey
<v>defaultkey
<v>getdefault

<q>Какой результат будет выведен после выполнения кода `print(d.setdefault(2))` при d = {1:'Иванов', 2:'Петров', 3:'Сидоров', 4:'Жуков'}?
<va>Петров
<v>Иванов
<v>Сидоров
<v>Жуков

<q>Какой тип данных Python представлен следующим образом: {1, 3, 4}?
<va>Множество
<v>Словарь
<v>Список
<v>Кортеж

<q>Как создать множество в Python?
<va>Используя функцию set() или литерал {}
<v>С помощью квадратных скобок []
<v>С помощью функции list()
<v>С помощью двойных круглых скобок (())

<q>Каким образом можно добавить элементы в множество?
<va>Используя метод add() или update()
<v>С помощью метода append()
<v>Используя оператор +=
<v>С помощью метода insert()

<q>Что делает метод setdefault() в Python?
<va>Возвращает значение ключа, если он существует, иначе устанавливает и возвращает значение по умолчанию
<v>Устанавливает значение ключа, если он существует
<v>Удаляет ключ и его значение из словаря
<v>Ищет значение по умолчанию для ключа

<q>Возможно ли преобразовать словарь в список в Python?
<va>Да
<v>Нет, это невозможно
<v>Только если словарь пустой
<v>Только если словарь содержит один элемент

<q>Какой метод используется для добавления элемента в множество?
<va>add()
<v>append()
<v>insert()
<v>extend()

<q>Какой метод применяется для удаления элемента из множества, если он существует?
<va>remove()
<v>discard()
<v>pop()
<v>delete()

<q>Как отличается метод remove() от метода discard() при удалении элемента из множества?
<va>remove() выдает ошибку KeyError, если элемента нет
<v>discard() выдает ошибку KeyError, если элемента нет
<v>remove() удаляет все элементы
<v>discard() удаляет первый элемент

<q>Какой метод удаляет первый элемент множества?
<va>pop()
<v>remove()
<v>discard()
<v>clear()

<q>Какой метод используется для удаления всех элементов из множества?
<va>clear()
<v>removeAll()
<v>discardAll()
<v>popAll()

<q>Правда ли, что элементы множества упорядочены?
<va>Нет, элементы множества не упорядочены
<v>Да, элементы множества упорядочены
<v>Только в некоторых случаях
<v>Зависит от типа множества

<q>Что произойдет, если использовать метод remove() для удаления несуществующего элемента из множества?
<va>Будет выведена ошибка KeyError
<v>Элемент будет игнорирован
<v>Множество останется без изменений
<v>Будет удален другой случайный элемент

<q>Какой метод лучше использовать для безопасного удаления элемента из множества, чтобы избежать ошибок?
<va>discard()
<v>remove()
<v>pop()
<v>clear()

<q>Какой результат выведется при попытке проверить наличие элемента '4' в множестве s1?
<va>True
<v>False
<v>Error
<v>None

<q>Какую операцию можно использовать, чтобы проверить, что элемент не принадлежит множеству?
<va>not in
<v>in
<v>!=
<v>==

<q>Какой результат выведется при сравнении множеств s1 и s2?
<va>True False False
<v>False False False
<v>True True False
<v>False True False

<q>Какая операция сравнения множеств покажет, что одно множество является подмножеством другого?
<va><=
<v>>=
<v>==
<v>!=

<q>Какая операция позволяет объединить два множества?
<va>union()
<v>intersection()
<v>difference()
<v>symmetric_difference()

<q>Какой метод возвращает пересечение двух множеств?
<va>intersection()
<v>union()
<v>difference()
<v>symmetric_difference()

<q>Что делает метод difference() при работе с множествами?
<va>Возвращает разность между двумя множествами
<v>Проверяет, есть ли различие между множествами
<v>Создаёт новое множество без различий
<v>Объединяет множества без общих элементов

<q>Как называется операция, которая возвращает множество всех элементов, которые есть только в одном из двух множеств?
<va>symmetric_difference()
<v>union()
<v>intersection()
<v>difference()

<q>Что будет результатом выполнения кода s = {i for i in range(11)} print(s)?
<va>{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
<v>{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
<v>{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
<v>{0, 2, 4, 6, 8, 10}

<q>Какой тип данных используется для создания множества s=set(('1','2','Здравствуй','мир'))?
<va>Кортеж
<v>Список
<v>Строка
<v>Словарь

<q>Как создается множество через литерал в Python?
<va>s = {1,2,3}
<v>s = [1,2,3]
<v>s = (1,2,3)
<v>s = {'1':'2','3':None}

<q>Какое ключевое слово используется для генератора множества в Python?
<va>for
<v>in
<v>set
<v>gen

<q>Как в Python создается множество из строки "Здравствуй, мир"?
<va>s=set('Здравствуй, мир')
<v>s={'Здравствуй, мир'}
<v>s=["Здравствуй, мир"]
<v>s=("Здравствуй, мир")

<q>Что делает функция set() в Python?
<va>Преобразует итерируемый объект в множество
<v>Создает пустой словарь
<v>Определяет переменную типа "множество"
<v>Сортирует элементы итерируемого объекта

<q>Для чего в Python можно использовать множество?
<va>Для удаления повторяющихся элементов
<v>Для упорядочивания элементов
<v>Для выполнения математических операций
<v>Для замены элементов в строке

<q>Что будет результатом выполнения кода s = ['Иванов', 'Петров', 'Петров'] print(set(s))?
<va>{'Петров', 'Иванов'}
<v>{'Иванов', 'Петров', 'Петров'}
<v>['Иванов', 'Петров']
<v>('Иванов', 'Петров')

<q>Какие баллы ЕГЭ по математике у первой группы начинаются с 79?
<va>79, 86, 88, 95, 94, 86, 89, 92, 78, 78
<v>55, 56, 58, 67, 76, 65, 67, 67, 63, 60
<v>74, 75, 74, 70, 69, 82, 82, 78
<v>92, 63, 74, 75, 74, 70, 69, 82, 82, 78

<q>Сколько уникальных значений баллов ЕГЭ по математике имеется у второй группы?
<va>десять
<v>одиннадцать
<v>девять
<v>восемь

<q>Сколько баллов ЕГЭ по математике у третьей группы начинаются с 55?
<va>55, 56, 58, 67, 76, 65, 67, 67, 63, 60
<v>74, 75, 74, 70, 69, 82, 82, 78
<v>79, 86, 88, 95, 94, 86, 89, 92, 78, 78
<v>92, 63, 74, 75, 74, 70, 69, 82, 82, 78

<q>Сколько общих баллов ЕГЭ по математике у первой и второй группы?
<va>один
<v>два
<v>три
<v>четыре

<q>Какие баллы ЕГЭ по математике у второй группы не совпадают с баллами первой группы?
<va>92, 63, 74, 75, 70, 69
<v>86, 88, 95, 94, 89
<v>55, 56, 58, 67, 76, 65, 67, 63, 60
<v>82, 82, 78

<q>Баллы какой группы полностью уникальны и не совпадают с баллами других групп?
<va>третьей
<v>первой
<v>второй
<v>никакой из групп

<q>Есть ли баллы, совпадающие у всех трех групп?
<va>нет
<v>да, один
<v>да, два
<v>да, три

<q>Какие баллы ЕГЭ по математике одинаковы у первой и третьей группы?
<va>нет одинаковых
<v>69, 70
<v>88, 95, 94
<v>55, 58

<q>Какой метод используется для получения текущей даты в Python?
<va>today()
<v>now()
<v>current()
<v>date()

<q>К какому классу принадлежит метод today()?
<va>date
<v>time
<v>datetime
<v>timedelta

<q>Из какого модуля импортируется класс date в Python?
<va>datetime
<v>time
<v>timedate
<v>dateutil

<q>Какой метод используется для получения текущего времени в Python?
<va>time()
<v>current_time()
<v>get_time()
<v>now()

<q>К какому классу принадлежит метод now()?
<va>datetime
<v>date
<v>time
<v>today

<q>Для чего используется метод now() в Python?
<va>Для получения текущей даты и времени
<v>Для получения текущего времени
<v>Для получения текущей даты
<v>Для установки текущей даты и времени

<q>Как в Python можно получить текущее время без даты?
<va>datetime.now().time()
<v>datetime.time.now()
<v>datetime.now().date()
<v>time.now()

<q>Что делает метод now() если вызвать его без указания формата?
<va>Возвращает текущие дату и время
<v>Возвращает только текущую дату
<v>Возвращает только текущее время
<v>Возвращает дату и время в формате UTC

<q>Какой метод используется для форматирования даты и времени в приведенном примере?
<va>format()
<v>strftime()
<v>strptime()
<v>timestamp()

<q>Какой формат даты и времени используется в первом примере?
<va>день.месяц.год час:минута
<v>месяц/день/год час:минута
<v>год-месяц-день час:минута
<v>день-месяц-год час/минута

<q>Какие значения можно использовать в строке формата для метода strptime?
<va>%d, %m, %Y, %H, %M, %S, %A, %B
<v>%a, %b, %c, %D, %e, %F, %G, %H
<v>%i, %j, %k, %l, %M, %N, %o, %p
<v>%q, %r, %s, %t, %u, %v, %w, %x

<q>Какой формат времени используется во втором примере?
<va>%d/%m/%Y %H:%M
<v>%m/%d/%Y %H:%M
<v>%Y/%m/%d %M:%H
<v>%d-%m-%Y %H-%M

<q>Какой тип данных возвращается функцией datetime.strptime?
<va>Объект datetime
<v>Строка
<v>Целое число
<v>Список

<q>Какой метод применяется для преобразования строки в дату и время?
<va>strptime()
<v>strftime()
<v>strfdate()
<v>strptimeformat()

<q>Какая библиотека используется для работы с датой и временем в приведенных примерах?
<va>datetime
<v>time
<v>dateutil
<v>timedelta

<q>Какой метод в Python используется для преобразования даты в строку?
<va>strftime()
<v>strptime()
<v>timedelta()
<v>time()

<q>Что делает функция datetime.strptime() в Python?
<va>Преобразует строку в объект datetime
<v>Преобразует объект datetime в строку
<v>Возвращает текущую дату и время
<v>Вычисляет разницу между двумя датами

<q>Какой модуль в Python является основным для работы с датами и временем?
<va>datetime
<v>time
<v>calendar
<v>dateutil

<q>Что извлекается с помощью метода now() модуля datetime в Python?
<va>Текущая дата и время
<v>Разница между двумя датами
<v>Строка в определенном формате даты
<v>Объект времени без даты

<q>Какой символ форматирования используется в Python для отображения полного названия месяца?
<va>%B
<v>%b
<v>%m
<v>%d

<q>Какой результат выдаст строка кода "datetime.datetime.now().strftime('%H-%M-%S-%d-%m-%Y')" в Python?
<va>Текущее время и дату в формате чч-мм-сс-дд-мм-гггг
<v>Текущую дату в формате гггг-мм-дд
<v>Текущее время в формате чч-мм-сс
<v>Текущую дату и время в формате дд.мм.гг чч:мм:сс

<q>Для чего в Python используется символ форматирования %A?
<va>Для отображения полного названия дня недели
<v>Для отображения сокращенного названия дня недели
<v>Для отображения полного названия месяца
<v>Для отображения года в четырехзначном формате

<q>К какому классу методов из модуля datetime относится метод `date`?
<va>date
<v>time
<v>datetime
<v>timedelta

<q>Что возвращает метод `date` из модуля datetime?
<va>Дата с тремя параметрами (год, месяц, день)
<v>Только текущий год
<v>Текущее время
<v>Текущую дату и время

<q>Какой метод из модуля datetime выводит время?
<va>time
<v>date
<v>datetime
<v>timedelta

<q>Какой метод позволяет задать формат представления времени в модуле datetime?
<va>time
<v>date
<v>datetime
<v>timedelta

<q>Что возвращает метод `datetime` из модуля datetime?
<va>Дата и время
<v>Только время
<v>Только дату
<v>День недели

<q>Какой метод возвращает день недели от 0 до 6 в модуле datetime?
<va>weekday()
<v>isoweekday()
<v>isocalendar()
<v>date()

<q>Какой метод возвращает день недели от 1 до 7 в модуле datetime?
<va>isoweekday()
<v>weekday()
<v>isocalendar()
<v>date()

<q>Какой метод возвращает дату в формате ISO 8601 в модуле datetime?
<va>isocalendar()
<v>isoweekday()
<v>weekday()
<v>date()

<q>Какие правила именования переменных существуют в Python?
<va>Переменные должны начинаться с буквы или символа нижнего подчеркивания
<v>Переменные должны начинаться только с буквы
<v>Переменные должны начинаться с цифры
<v>Нет специальных правил для именования переменных

<q>Что означает переменная, начинающаяся с нижнего подчеркивания в Python?
<va>Используется внутри локального модуля
<v>Является глобальной переменной
<v>Представляет специальное ключевое слово
<v>Обозначает стандартную библиотеку

<q>Какие виды пространств имен переменных существуют в Python?
<va>Глобальные, локальные и встраиваемые
<v>Публичные, приватные и защищенные
<v>Статические, динамические и константные
<v>Временные, постоянные и виртуальные

<q>Что представляют собой локальные переменные в Python?
<va>Переменные, видимые только в функции, где они определены
<v>Переменные, доступные во всей программе
<v>Переменные, хранящие временные значения
<v>Переменные, используемые для ввода данных

<q>Как называется процесс присваивания переменной различных значений в процессе выполнения кода?
<va>Изменение значения переменной
<v>Инициализация переменной
<v>Декларирование переменной
<v>Удаление переменной

<q>Какую функцию следует использовать для просмотра списка ключевых слов в Python?
<va>kwlist
<v>keylist
<v>keywords
<v>listkeys

<q>Из какого модуля нужно импортировать функцию для получения списка ключевых слов?
<va>keyword
<v>key
<v>keywords
<v>wordkey

<q>Какая функция используется для получения полного списка встроенных идентификаторов в Python?
<va>dir()
<v>list()
<v>help()
<v>vars()

<q>Из какого модуля импортируются встроенные идентификаторы для получения их списка?
<va>builtins
<v>internals
<v>builtin
<v>buildins

<q>Какой оператор используется в Python для присваивания значения переменной?
<va>=
<v>==
<v>:=
<v><-

<q>Что выведет следующий код Python: print('P', 'y', 't', 'h', 'o', 'n', sep='')?
<va>Python
<v>P y t h o n
<v>'P' 'y' 't' 'h' 'o' 'n'
<v>P,y,t,h,o,n

<q>Какой результат выполнения этого кода: print([i**2 for i in range(1, 6)])?
<va>[1, 4, 9, 16, 25]
<v>[1, 2, 3, 4, 5]
<v>[2, 4, 6, 8, 10]
<v>[1, 8, 27, 64, 125]

<q>Какое ключевое слово используется для объявления переменных в языках, производных от Pascal?
<va>var
<v>let
<v>def
<v>const

<q>Какая технология реализована в языке программирования Python, позволяющая переменным изменять свой тип?
<va>Динамическая типизация
<v>Статическая типизация
<v>Строгая типизация
<v>Автоматическая типизация

<q>Что произойдет в языках с строгой типизацией, таких как C++, при использовании переменных разных типов в одном выражении?
<va>Ошибка типа
<v>Преобразование типов
<v>Предупреждение компилятора
<v>Автоматическая типизация

<q>Что отличает Python от многих других языков программирования?
<va>Не требуется заранее объявлять тип переменных
<v>Требуется строгое объявление типов
<v>Используется только статическая типизация
<v>Поддерживает только целочисленные типы данных

<q>Как в Python определяется тип переменной?
<va>Тип определяется "движком" языка
<v>Тип определяется на этапе компиляции
<v>Тип должен быть явно указан программистом
<v>Тип всегда остается неизменным

<q>Какие типы данных Python поддерживает среди приведенных в упражнении?
<va>Словарь, кортеж, множество
<v>Только числовые типы
<v>Только строковые типы
<v>Только булевы типы

<q>Как изменяется тип объекта в Python при изменении ссылки, на которую он указывает?
<va>Изменяет свой тип
<v>Остается неизменным
<v>Удаляется
<v>Преобразуется в другой объект

<q>Что происходит, когда Python-объекту присваивается новая ссылка?
<va>Счетчик ссылок этого объекта увеличивается на единицу
<v>Счетчик ссылок этого объекта уменьшается на единицу
<v>Создается новый объект
<v>Происходит удаление старого объекта

<q>Как называется механизм в Python, который очищает память от неиспользуемых объектов?
<va>Сборка мусора (garbage collection)
<v>Деструкция
<v>Рефакторинг
<v>Перераспределение памяти

<q>Как изменится счетчик ссылок объекта, если на него перестанут ссылаться?
<va>Уменьшится на единицу
<v>Увеличится на единицу
<v>Обнулится
<v>Удвоится

<q>Какое значение имеет счетчик ссылок на объект Python, когда объект считается неиспользуемым?
<va>0
<v>1
<v>-1
<v>Неопределено

<q>Что происходит с объектом Python, когда его счетчик ссылок становится равным нулю?
<va>Объект удаляется и освобождается память
<v>Объект сохраняется в памяти
<v>Объект копируется
<v>Счетчик автоматически увеличивается

<q>Какое поле структуры объекта в Python содержит информацию о типе данных?
<va>Первое поле
<v>Второе поле
<v>Третье поле
<v>Четвертое поле

<q>Что происходит с памятью, выделенной для объекта Python, когда его счетчик ссылок уменьшается до нуля?
<va>Память освобождается
<v>Память перераспределяется
<v>Память сохраняется
<v>Память утечки возникает

<q>Какая функция в Python используется для проверки соответствия переменной определенному типу данных?
<va>isinstance
<v>type
<v>print
<v>int

<q>Какая функция в Python преобразует строку в целое число?
<va>int()
<v>str()
<v>float()
<v>bool()

<q>Что делает функция type() в сочетании с инструкцией print()?
<va>Выводит тип переменной на экран
<v>Преобразует тип переменной
<v>Создает новую переменную
<v>Удаляет переменную

<q>Какой результат выдаст следующий код: isinstance(a, list), если a = [1,2,3]?
<va>True
<v>False
<v>Ошибка
<v>None

<q>Что делает функция print(isinstance(a, int)), если a = 1?
<va>Выводит True
<v>Выводит False
<v>Выводит None
<v>Выводит 1

<q>Какой результат выдаст следующий код: isinstance(a, int), если a = '1'?
<va>False
<v>True
<v>Ошибка
<v>None

<q>Какое действие выполняет следующий код: a = str(a)?
<va>Преобразует переменную a в строку
<v>Преобразует строку в переменную a
<v>Удаляет переменную a
<v>Печатает тип переменной a

<q>Какой результат выдаст следующий код: print(type(a)), если a = input(question)?
<va><class 'str'>
<v><class 'int'>
<v><class 'float'>
<v><class 'list'>

<q>Какой тип данных будет у переменной a после выполнения операции a=tuple(a)?
<va>tuple
<v>list
<v>set
<v>dict

<q>Какой метод позволяет преобразовать строку в список байтов?
<va>bytes()
<v>bytearray()
<v>str()
<v>list()

<q>Какой метод используется для преобразования целого числа в соответствующий символ?
<va>chr()
<v>ord()
<v>str()
<v>int()

<q>Какой тип данных возвращается функцией type() при вызове type(a), если a = set(a)?
<va>set
<v>list
<v>tuple
<v>dict

<q>Какая функция возвращает числовое значение байта соответствующего символу?
<va>ord()
<v>chr()
<v>hex()
<v>bin()

<q>Какой оператор используется для удаления переменной в Python?
<va>del
<v>remove
<v>delete
<v>clear

<q>Какой тип данных имеет переменная al после выполнения al=float(input('Первое число: '))?
<va>float
<v>int
<v>str
<v>list

<q>Что делает метод bytearray()?
<va>Создаёт массив байтов
<v>Преобразует строку в список
<v>Конвертирует число в байты
<v>Создаёт пустой массив

<q>Какую ошибку выдаст интерпретатор Python при попытке использовать переменные `a`, `dl` и `d2` после их удаления?
<va>NameError: name 'a' is not defined
<v>SyntaxError: invalid syntax
<v>TypeError: 'NoneType' object is not callable
<v>IndexError: list index out of range

<q>Какой метод используется в Python для преобразования строки в список?
<va>split()
<v>join()
<v>convert()
<v>list()

<q>Какой тип данных получится, если преобразовать список в Python сначала в кортеж, а затем в множество?
<va>Множество (set)
<v>Список (list)
<v>Словарь (dict)
<v>Кортеж (tuple)

<q>Что получится, если пользователь введет целое число в командной строке, а программа прибавит к этому числу 3 и выведет результат?
<va>Сумма введенного числа и 3
<v>Произведение введенного числа и 3
<v>Частное введенного числа и 3
<v>Разность введенного числа и 3

<q>Как называется процесс передачи программы, написанной на Python, интерпретатору через файл с расширением *.py?
<va>Файловый ввод
<v>Интерактивное исполнение
<v>Стандартный ввод
<v>Компиляция

<q>Какую команду обычно используют в IDLE Python для запуска программы из файла?
<va>F5
<v>F1
<v>Ctrl + R
<v>Shift + Enter

<q>Что особенно важно в структуре программы на Python?
<va>Комментарии, блоки и правила оформления отступов
<v>Скорость выполнения и эффективность использования памяти
<v>Использование сложных алгоритмов
<v>Минимализм в коде

<q>Какие функции используются для ввода выражений в интерактивном режиме Python?
<va>eval() и input()
<v>input() и print()
<v>eval() и exec()
<v>exec() и print()

<q>Что является основой структуры программы в Python?
<va>Объекты
<v>Функции
<v>Модули
<v>Классы

<q>Как называется минимальный элемент программы на Python в соответствии с принятым алфавитом?
<va>Символ
<v>Слово
<v>Строка
<v>Байт

<q>Из чего формируется физическая строка в Python?
<va>Совокупность символов
<v>Несколько логических строк
<v>Группа функций
<v>Набор инструкций

<q>Что составляет логическую строку в Python?
<va>Несколько физических строк
<v>Набор символов
<v>Коллекция модулей
<v>Группа переменных

<q>Как называется оператор в Python, используемый для переноса части кода на другую физическую строку?
<va>«\»
<v>«:»
<v>«//»
<v>«#»

<q>Какой символ используется в Python для переноса строки?
<va>\n
<v>\t
<v>\\
<v>\r

<q>Для чего в Python используются комментарии?
<va>Для лучшего понимания кода программы
<v>Для добавления новых строк
<v>Для умножения значений
<v>Для соединения строк

<q>Что произойдет после выполнения кода del a в Python?
<va>Удалится переменная a
<v>Удалится значение переменной a
<v>Создастся переменная a
<v>Переименуется переменная a

<q>Что делает символ # в Python?
<va>Обозначает начало комментария
<v>Обозначает начало строки
<v>Обозначает конец строки
<v>Обозначает начало блока кода

<q>Какой результат работы программы, если пользователь введет число 2?
<va>Выводит число 2 на экран
<v>Удаляет число 2
<v>Выводит сообщение об ошибке
<v>Сохраняет число 2 в переменной

<q>Что означает del d1, d2 в Python?
<va>Удаляет переменные d1 и d2
<v>Объявляет переменные d1 и d2
<v>Сохраняет значения в переменных d1 и d2
<v>Складывает значения переменных d1 и d2

<q>Что является блоком в Python?
<va>Функции, условные операторы, циклы
<v>Переменные
<v>Строки кода без отступов
<v>Комментарии

<q>Какой элемент является обязательным перед блоком команд в Python?
<va>«:»
<v>«;»
<v>«()»
<v>«{}»

<q>Как называется блок в других языках программирования, который в Python может выражаться через функции, условные операторы и циклы?
<va>Подпрограмма
<v>Процедура
<v>Класс
<v>Метод

<q>Что делает условный оператор if в Python?
<va>Определяет выполнение определенного блока кода в зависимости от условия
<v>Циклически выполняет блок кода
<v>Определяет функцию
<v>Запрашивает ввод данных от пользователя

<q>Какой отступ считается стандартным при написании кода на Python?
<va>Четыре пробела
<v>Восемь пробелов
<v>Два пробела
<v>Табуляция

<q>Что произойдет, если отступы в коде Python не будут соответствовать принятому стандарту?
<va>Интерпретатор выдаст сообщение об ошибке
<v>Код выполнится без предупреждений
<v>Отступы будут автоматически исправлены
<v>Код будет выполнен, но с предупреждением

<q>Чем отличается организация блоков кода в Python от таковой в Delphi?
<va>Использованием отступов вместо ключевых слов begin...end
<v>Использованием фигурных скобок
<v>Использованием ключевых слов If...End If
<v>Отсутствием необходимости в организации блоков

<q>Как в Python обозначается блок кода, принадлежащий определенной структуре управления?
<va>Отступами
<v>Ключевыми словами begin...end
<v>Фигурными скобками
<v>Ключевыми словами If...End If

<q>Что из перечисленного не является преимуществом использования отступов в Python?
<va>Автоматическое исправление синтаксических ошибок
<v>Сокращение кода
<v>Наглядность представления
<v>Упрощение восприятия программы

<q>Какие средства используются в других языках программирования для организации блоков кода, в отличие от Python?
<va>Ключевые слова и фигурные скобки
<v>Только отступы
<v>Только фигурные скобки
<v>Только ключевые слова

<q>Какой оператор используется в Python для присваивания значения переменной?
<va>=
<v>==
<v>:=
<v>+=

<q>Что произойдет, если попытаться обновить переменную в Python до её инициализации?
<va>Интерпретатор выведет сообщение об ошибке
<v>Переменная будет автоматически инициализирована нулём
<v>Произойдет автоматическое присваивание пустой строки
<v>Ничего, код выполнится без ошибок

<q>Что такое инструкция присваивания в языках программирования?
<va>Команда, создающая ссылку на объект или обновляющая уже существующую переменную
<v>Операция, сравнивающая две переменные
<v>Метод, удаляющий переменную из памяти
<v>Команда, выполняющая арифметическую операцию

<q>Как называется процесс создания переменной с присвоением ей начального значения?
<va>Инициализация
<v>Объявление
<v>Присваивание
<v>Определение

<q>Какая инструкция в Python позволяет присвоить одинаковое или разное значение нескольким переменным одновременно?
<va>Групповое присваивание
<v>Множественное объявление
<v>Параллельное присваивание
<v>Комбинированное присваивание

<q>Какой результат выполнения следующего кода на Python: a='1'; a=int(a) + 2; print(a)?
<va>3
<v>1
<v>'12'
<v>Ошибка выполнения

<q>Что делает комбинированное присваивание в Python?
<va>Сочетает групповое присваивание и обновление значений переменных
<v>Позволяет присваивать значение переменной во время её объявления
<v>Присваивает одно значение нескольким переменным
<v>Создаёт новую переменную и присваивает ей значение другой переменной

<q>Какой тип инструкции в Python затрагивается при обсуждении присваивания, ввода и вывода данных, а также арифметических операций?
<va>Основные инструкции
<v>Управляющие инструкции
<v>Функциональные инструкции
<v>Модульные инструкции

<q>Какая конструкция используется для присваивания значения переменной в Python?
<va>a=b=число (строка)
<v>a==b==число (строка)
<v>a<=b<=число (строка)
<v>a!=b!=число (строка)

<q>Какой результат будет на экране после выполнения кода: a=2; print(a, ' ', b)?
<va>2 2
<v>2 b
<v>Ошибка выполнения
<v>2 ' ' b

<q>Какая строка будет выведена последней при выполнении данного блока кода: a, b, c=1,2,'Иванов'; print(a, ' ', b, c)?
<va>1 2 Иванов
<v>1 ' ' 2 ' ' Иванов
<v>Иванов
<v>a b Иванов

<q>Какое слово будет напечатано перед "Студент" при выполнении кода: c='Студент'; print(c, ' ', d)?
<va>Аспирант
<v>Слово "Студент"
<v>c
<v>d

<q>Какой оператор используется для присваивания значения в Python?
<va>=
<v>==
<v>=<
<v>=!

<q>Что делает оператор += в Python?
<va>Складывает значение левого и правого операнда
<v>Умножает левый операнд на правый
<v>Вычитает правый операнд из левого
<v>Делит левый операнд на правый

<q>Какой оператор выполняет целочисленное деление?
<va>//
<v>/
<v>%
<v>*

<q>Какой оператор в Python используется для возведения в степень?
<va>**
<v>^
<v>**
<v>*~

<q>Какая функция в Python используется для ввода данных от пользователя?
<va>input()
<v>print()
<v>scanf()
<v>echo()

<q>Что происходит после нажатия клавиши Enter при использовании функции input() в Python?
<va>Интерпретатор обрабатывает полученные данные
<v>Программа завершает работу
<v>Данные удаляются
<v>Ничего не происходит

<q>Как в Python присваивается значение, введенное пользователем, переменной?
<va>Значение, введенное пользователем, присваивается переменной после использования input()
<v>Значение автоматически сохраняется без использования переменных
<v>Используется функция assign()
<v>Значение вводится непосредственно в коде программы

<q>Для чего в Python используется функция print()?
<va>Для вывода данных на экран
<v>Для ввода данных от пользователя
<v>Для вычисления арифметических операций
<v>Для сохранения данных в файл

<q>Как в Python можно преобразовать строку, введенную пользователем, в целое число?
<va>Использование выражения int(input())
<v>Просто input()
<v>Использование выражения str(input())
<v>Использование выражения float(input())

<q>Для чего используется функция print() в Python?
<va>Для вывода данных на экран или в файл
<v>Для ввода данных от пользователя
<v>Для обработки и преобразования данных
<v>Для сохранения данных в базе данных

<q>Что означает параметр 'end' в функции print()?
<va>Определяет, чем будет заканчиваться строка вывода
<v>Указывает на конец файла
<v>Определяет конечное значение цикла
<v>Закрывает поток вывода

<q>Какое значение по умолчанию у параметра 'sep' в функции print()?
<va>Пробел
<v>Запятая
<v>Точка с запятой
<v>Нет значения по умолчанию

<q>Что произойдет, если в функции print() установить параметр 'end' как '!\\n'?
<va>Порядок вывода не будет важен
<v>Строка будет заканчиваться восклицательным знаком
<v>Вывод будет без переноса на новую строку
<v>Вывод будет перенаправлен в файл

<q>Какой параметр функции print() определяет поток вывода?
<va>file
<v>sep
<v>end
<v>stream

<q>Какое значение по умолчанию у параметра 'end' в функции print()?
<va>'\\n' - перевод каретки на новую строку
<v>' ' - пробел
<v>'\\t' - табуляция
<v>';' - точка с запятой

<q>Какой оператор сравнения в Python означает "точно равно"?
<va>==
<v>=
<v>===
<v><>

<q>Какой оператор сравнения используется для проверки "меньше чем"?
<va><
<v><=
<v><>
<v>!=

<q>Что означает оператор сравнения "!=" в Python?
<va>Не равно
<v>Равно
<v>Меньше или равно
<v>Больше или равно

<q>Какой оператор сравнения означает "больше или равно"?
<va>>=
<v>>
<v><=
<v>==

<q>Что означает оператор ">" в Python?
<va>Больше чем
<v>Больше или равно
<v>Меньше чем
<v>Меньше или равно

<q>Как называется оператор "and" в русской документации Python?
<va>И
<v>Ор
<v>Но
<v>Также

<q>Какой логический оператор Python обозначает логическое "ИЛИ"?
<va>or
<v>and
<v>not
<v>xor

<q>Какой логический оператор используется для отрицания в Python?
<va>not
<v>nand
<v>nor
<v>none

<q>Что будет выведено после выполнения кода: print(c>3, end=' ')?
<va>True
<v>False
<v>Ошибка выполнения
<v>Ничего

<q>Какое значение имеет переменная c после выполнения кода: print(a==3 and b>=4, end=' ')?
<va>True
<v>False
<v>Ошибка выполнения
<v>4

<q>Что будет результатом выполнения выражения: print(a==3 or b>=4, end=' ')?
<va>True
<v>False
<v>Ошибка выполнения
<v>Ничего

<q>Какой результат будет выведен в конце кода: print(a==3 and not b>=4, end=' ')?
<va>False
<v>True
<v>Ошибка выполнения
<v>None

<q>Что будет выведено на экран после выполнения данного кода: print(a['Преподаватель прав']); print(a['Преподаватель неправ'])?
<va>Истина Ложь
<v>Ложь Истина
<v>True False
<v>Ошибка выполнения

<q>Что будет выведено на экран после выполнения следующих команд: print(a.items()); print(a.keys())?
<va>dict_items([('Преподаватель прав', 'Истина'), ('Преподаватель неправ', 'Ложь')]) dict_keys(['Преподаватель прав', 'Преподаватель неправ'])
<v>dict_items(['Преподаватель прав', 'Истина', 'Преподаватель неправ', 'Ложь']) dict_keys(['Преподаватель прав', 'Истина', 'Преподаватель неправ', 'Ложь'])
<v>Список значений Список ключей
<v>Ошибка выполнения

<q>Каким будет результат выполнения выражения: print(a['Преподаватель прав'] == 'Истина' and a['Преподаватель неправ'] == 'Ложь')?
<va>True
<v>False
<v>Ошибка выполнения
<v>Ничего не будет выведено

<q>Какой синтаксис правильный для создания блока условия if...elif в Python?
<va>if условие: инструкция 1 elif условие: инструкция n
<v>if условие then инструкция 1 elseif условие then инструкция n
<v>if условие do инструкция 1 elif условие do инструкция n
<v>if (условие) { инструкция 1 } else if (условие) { инструкция n }

<q>Какое значение будет присвоено переменной a после выполнения данного фрагмента кода?
<va>2
<v>3
<v>4
<v>5

<q>Сколько раз в коде встречается ключевое слово "else"?
<va>2
<v>1
<v>3
<v>0

<q>Какое значение будет присвоено переменной b, если первое условие if не выполнится?
<va>4
<v>2
<v>3
<v>1

<q>Какое ключевое слово используется для множественного выбора в данном коде?
<va>elif
<v>else
<v>then
<v>case

<q>Что будет выведено, если в первом условии переменная a будет равна 1?
<va>"a is not more than 2"
<v>"a снова2"
<v>"a2"
<v>"a"

<q>В каком случае в консоль будет выведено "b=4"?
<va>Если переменная b изначально не равна 4 и первое условие if не выполнено.
<v>Если переменная a равна 3.
<v>Если первое условие if выполнено.
<v>Если переменная a больше 2.

<q>Как называется цикл в Python, который выполняется до тех пор, пока заданное условие истинно?
<va>Цикл while
<v>Цикл for
<v>Цикл do-while
<v>Цикл if

<q>Какое минимальное число больше 200 и делится без остатка на 17?
<va>204
<v>217
<v>221
<v>238

<q>Какое количество инвестиций по 100 рублей необходимо для получения чистой прибыли в 1000 рублей, если одна инвестиция приносит 10 рублей прибыли?
<va>100
<v>10
<v>1000
<v>110

<q>Как называется цикл в Python, используемый для выполнения определенного количества итераций?
<va>Цикл for
<v>Цикл while
<v>Цикл do-while
<v>Цикл if

<q>Какой результат даст код for i in range(1, 6, 2): print(i, end=' ')?
<va>1 3 5
<v>1 2 3 4 5
<v>2 4 6
<v>1 4

<q>Что будет результатом выполнения кода for i in '1 2 3': print(i*2, end='')?
<va>112233
<v>123123
<v>246
<v>123

<q>Что делает функция range в цикле for в Python?
<va>Задает последовательность чисел для итераций цикла
<v>Считает количество выполненных итераций
<v>Определяет тип данных для переменных в цикле
<v>Задает условие окончания цикла

<q>Какая функция используется для немедленного прерывания текущего цикла в Python?
<va>break
<v>continue
<v>exit
<v>stop

<q>Какова цель использования цикла while True в Python?
<va>Создать бесконечный цикл, который будет прерван только при выполнении определенного условия
<v>Выполнить цикл определенное количество раз
<v>Выполнить цикл, пока переменная не достигнет определенного значения
<v>Создать цикл, который никогда не завершится

<q>Какую инструкцию использует Python для формирования логики программы без выполнения каких-либо действий?
<va>pass
<v>continue
<v>break
<v>yield

<q>Что должна вывести программа в случае отрицательного дискриминанта квадратного уравнения?
<va>Сообщение «Корней нет»
<v>Нулевые корни
<v>Мнимые корни
<v>Абсолютные значения корней

<q>Какой результат должен быть выведен, если объект проходит сквозь квадратное отверстие?
<va>«Пройдет»
<v>«Не пройдет»
<v>«Слишком большой»
<v>«Слишком маленький»

<q>Какое действие выполняет программа, возвращающая в квадрат введенные пользователем числа до тех пор, пока не будет введено слово "Выход"?
<va>Возведение в квадрат
<v>Возведение в куб
<v>Извлечение квадратного корня
<v>Деление на два

<q>Как называется функция в Python для вычисления биномиального коэффициента?
<va>factorial
<v>binom
<v>combinations
<v>permute

<q>Каким образом программа определяет, что вводимые числа являются последовательными числами 1\*2\*...*\n?
<va>Пользователь вводит каждое число
<v>Числа генерируются программой автоматически
<v>Числа вводятся через пробел
<v>Числа вводятся в случайном порядке

<q>Какой код программы вычисляет для игрового автомата удвоенную ставку и выдает ее при сериях из 10, 100 и 1000 игр?
<va>Код, который умножает введенную сумму на 450% и проверяет серии
<v>Код, который делит введенную сумму на 2 и проверяет серии
<v>Код, который умножает введенную сумму на 200% и проверяет серии
<v>Код, который умножает введенную сумму на 100% и проверяет серии

<q>С помощью какой функции можно генерировать случайные числа в Python?
<va>randint
<v>random
<v>randrange
<v>shuffle

<q>Что возвращают чистые функции в Python?
<va>Однозначный результат по известным входным параметрам
<v>Результат работы встроенных функций Python
<v>Пользовательские данные
<v>Различные типы ошибок

<q>Что такое встроенные функции Python?
<va>Стандартные функции, возвращающие результат
<v>Функции, созданные пользователем
<v>Функции без возвращаемого результата
<v>Функции, работающие только с числами

<q>Какие функции создаются разработчиком программы в соответствии с поставленными задачами?
<va>Пользовательские функции
<v>Чистые функции
<v>Встроенные функции
<v>Функции без возвращаемого результата

<q>Какая инструкция используется для создания функции в Python?
<va>def
<v>return
<v>import
<v>set

<q>Что может передавать функция в Python?
<va>Числа, строки, списки и другие функции
<v>Только числа
<v>Только списки
<v>Только строки

<q>Какой элемент является необязательным при создании функции в Python?
<va>return возвращаемый результат
<v>def
<v>имя_функции
<v>тело функции

<q>Какой результат будет выведен на экран при вызове функции funl(3, 4)?
<va>12
<v>7
<v>3
<v>4

<q>Какое значение будет присвоено переменной z в функции funl, если а = 4 и b = 3?
<va>12
<v>7
<v>1
<v>0

<q>Какой тип данных будет у возвращаемого значения функции spis?
<va>Кортеж (tuple)
<v>Список (list)
<v>Строка (string)
<v>Число (int)

<q>Что делает функция spis?
<va>Печатает список и возвращает кортеж
<v>Печатает кортеж и возвращает список
<v>Возвращает список и кортеж
<v>Печатает и возвращает список

<q>Какой результат будет выведен на экран в конце выполнения кода с функцией spis?
<va>('K', 'o', 'p', 'T', 'e', 'ж')
<v>['c', 'n', 'и', 'c', 'o', 'к']
<v>('c', 'n', 'и', 'c', 'o', 'к')
<v>['K', 'o', 'p', 'T', 'e', 'ж']

<q>Что необходимо сделать, если функция возвращает значение?
<va>Передать это значение переменной
<v>Напечатать это значение
<v>Изменить это значение
<v>Удалить это значение

<q>Для чего используется команда return в функции?
<va>Для возврата значения из функции
<v>Для вывода значения на экран
<v>Для прерывания выполнения функции
<v>Для перехода к следующей строке кода

<q>Что произойдет, если вызвать функцию, которая не возвращает значение, и не передать ее вывод ни одной переменной?
<va>Функция выполнится, но ее значение не будет сохранено
<v>Функция не выполнится
<v>Произойдет ошибка в коде
<v>Значение функции автоматически сохранится в переменной

<q>Что делает функция print в Python?
<va>Выводит заданные значения на экран.
<v>Удаляет значения.
<v>Сохраняет значения в файл.
<v>Читает значения из файла.

<q>Какое ключевое слово используется для указания глобальной переменной в Python?
<va>global
<v>public
<v>nonlocal
<v>private

<q>Что произойдет после вызова функции gl_glob()?
<va>Значение переменной f станет [12, 13, 14, 15, 16].
<v>Значение переменной f станет [1, 2, 3, 4, 5].
<v>Функция вернет ошибку.
<v>Значение переменной f не изменится.

<q>Как изменится значение переменной Студент после обработки функции?
<va>Увеличится на 1, если это возможно согласно условиям.
<v>Уменьшится на 1.
<v>Удвоится.
<v>Изменится на произвольное число.

<q>Какое максимальное значение может иметь переменная Студент для уровня бакалавра?
<va>4
<v>5
<v>3
<v>6

<q>Что представляют собой анонимные функции в Python?
<va>Функции, которые могут содержать только одно выражение и часто используются для создания лямбда-функций.
<v>Функции без имени, которые автоматически вызываются при запуске программы.
<v>Функции, вызываемые без указания их имени.
<v>Функции, которые нельзя вызвать напрямую.

<q>Какое ключевое слово используется для создания генератора в приведенном коде?
<va>yield
<v>return
<v>generate
<v>yielding

<q>Какая функция позволяет получить следующий элемент генератора?
<va>next
<v>__next__
<v>getNext
<v>iterator

<q>С какими начальными значениями инициализируются переменные x1 и x2 в функции fib()?
<va>x1=0, x2=1
<v>x1=1, x2=1
<v>x1=0, x2=0
<v>x1=1, x2=2

<q>Какой результат работы функции будет, если ввести число 5?
<va>1 1 2 3 5
<v>1 2 3 5 8
<v>2 3 5 8 13
<v>0 1 1 2 3

<q>Как называется метод, который обновляет состояние итератора при получении новых значений?
<va>__next__
<v>__iter__
<v>__yield__
<v>__update__

<q>Что будет выведено на экран, если в функцию fib() будет передано число 0?
<va>Ничего не будет выведено
<v>0
<v>1
<v>Ошибка выполнения

<q>Какой тип данных в Python представлен переменной fib1 после выполнения кода fib1=fib()?
<va>generator
<v>list
<v>int
<v>str

<q>Как называется функция, которая рассчитывается в примере?
<va>fib
<v>Функция Фибоначчи
<v>fibonacci_sequence
<v>generate_fib

<q>Какой результат работы программы будет, если пользователь введет фамилию "Иванов"?
<va>Иванов фамилия Иванов успешно зарегистрирована
<v>Иванов успешно зарегистрирована фамилия Иванов
<v>фамилия Иванов успешно зарегистрирована Иванов
<v>Программа выведет ошибку

<q>Какую роль играет функция def в Python?
<va>Определение новой функции
<v>Вызов функции
<v>Вывод значения функции
<v>Удаление функции

<q>Как называется функция, которую "оборачивает" декоратор?
<va>Обернутая (декорируемая) функция
<v>Декорирующая функция
<v>Внутренняя функция
<v>Глобальная функция

<q>Каким будет вывод программы, если в функцию dec передать функцию, возвращающую строку "Иванов"?
<va>фамилия Иванов успешно зарегистрирована
<v>фамилия успешно зарегистрирована Иванов
<v>успешно зарегистрирована фамилия Иванов
<v>Иванов фамилия успешно зарегистрирована

<q>Что произойдет, если вместо def использовать ключевое слово del для определения функции?
<va>Произойдет синтаксическая ошибка
<v>Функция будет удалена
<v>Функция будет определена без ошибок
<v>Произойдет ошибка времени выполнения

<q>Какая функция в Python используется для запроса ввода данных у пользователя?
<va>input()
<v>print()
<v>def()
<v>del()

<q>Какое ключевое слово используется для определения глобальной переменной внутри функции?
<va>global
<v>nonlocal
<v>public
<v>extern

<q>Что произойдет, если при вызове функции `a=int(input(...))` будет введено число 0?
<va>Будет запрошена фамилия
<v>Будет запрошено имя
<v>Будет запрошено отчество
<v>Ничего не произойдет

<q>Какое слово будет добавлено в вывод функции `fam()`, если перед этим было выбрано "отчество"?
<va>"зарегистрировано"
<v>"успешно"
<v>"фамилия:"
<v>"имя:"

<q>Что означает декоратор `@dec` в данном коде?
<va>Обозначение декоратора для функции
<v>Ошибка синтаксиса
<v>Комментарий
<v>Специальная команда для печати

<q>Что делает функция `act(x)` внутри функции `def1(z)`?
<va>Вычисляет конечную сумму с учетом выбранной услуги
<v>Принимает решение о выводе сообщения об ошибке
<v>Возвращает значение, введенное пользователем
<v>Печатает ожидаемую сумму

<q>Как называется функция, которая возвращает саму себя?
<va>Рекурсивная функция
<v>Циклическая функция
<v>Линейная функция
<v>Нестатическая функция

<q>Что такое модули в Python?
<va>Программы, содержащие объекты, функции, методы, классы для повторного использования
<v>Набор инструкций для управления циклами
<v>Способ управления памятью в Python
<v>Инструмент для создания пользовательских интерфейсов

<q>Какой синтаксис используется для полного подключения модуля в Python?
<va>import модуль
<v>include модуль
<v>module модуль
<v>use модуль

<q>Что произойдет, если в Python использовать синтаксис "import math as m"?
<va>Модулю math будет присвоен псевдоним m
<v>Будет создан новый модуль с именем m
<v>Модуль math будет удален из программы
<v>Будет проверено наличие модуля math

<q>Какой синтаксис в Python используется для импорта конкретных атрибутов модуля?
<va>from модуль import атрибут
<v>include модуль:атрибут
<v>use модуль -> атрибут
<v>import атрибут from модуль

<q>Что означает синтаксис "from модуль import *" в Python?
<va>Импортируются все атрибуты модуля
<v>Импортируется только основная функция модуля
<v>Модуль импортируется, но без атрибутов
<v>Импортируется только первый атрибут модуля

<q>Какой результат даст следующий код в Python: l=2*math.pi*r, если r=5?
<va>Длина окружности при радиусе 5
<v>Площадь круга при радиусе 5
<v>Объем шара при радиусе 5
<v>Диаметр окружности при радиусе 5

<q>Что произойдет при импорте модуля с использованием его полного имени, если в основной программе уже есть переменные с такими же именами?
<va>Могут возникнуть конфликты из-за перезаписи переменных
<v>Переменные в основной программе будут удалены
<v>Модуль не будет импортирован
<v>Переменные в модуле будут переименованы

<q>Для чего используется присваивание псевдонима при импорте модуля в Python?
<va>Для упрощения обращения к атрибутам модуля
<v>Для увеличения скорости выполнения программы
<v>Для защиты модуля от изменений
<v>Для обозначения, что модуль является частным

<q>Что будет результатом работы функции fun1(x, y) при x=3 и y=5?
<va>12
<v>15
<v>8
<v>20

<q>Какое значение примет переменная s после выполнения функции fun2(x, y) при x=1 и y=3?
<va>6
<v>12
<v>24
<v>10

<q>Что делает функция fun1(x, y)?
<va>Вычисляет сумму чисел от x до y
<v>Вычисляет произведение чисел от x до y
<v>Возводит число x в степень y
<v>Вычисляет разность чисел x и y

<q>Для чего нужно использовать ключевое слово return в функции?
<va>Чтобы вернуть значение из функции
<v>Чтобы прекратить выполнение функции
<v>Чтобы присвоить значение переменной
<v>Чтобы проверить выполнение условия

<q>Какой синтаксис Python используется для создания собственного модуля?
<va>Создать обычный файл с функциями и импортировать его
<v>Использовать специальную команду create module
<v>Объявить класс с названием модуля
<v>Использовать директиву #module

<q>Каким образом в коде используется переменная x после строки x=int(input('Введите первое число: '))?
<va>Как аргумент в функции fun1 и fun2
<v>Как глобальная переменная
<v>Для вывода результата
<v>Как счётчик цикла for

<q>Какой модуль в Python предоставляет атрибуты для работы с операционной системой?
<va>os
<v>sys
<v>shutil
<v>glob

<q>Для чего используется команда os.system('dir *.txt')?
<va>выполнить указанную команду ОС
<v>вывести путь к текущему каталогу
<v>менять текущий каталог
<v>вывести список всех атрибутов модуля

<q>Какая команда выводит список всех атрибутов модуля?
<va>dir(os)
<v>help(os)
<v>os.getcwd()
<v>os.system('dir *.txt')

<q>Какой модуль выводит список файлов на основе заданного шаблона?
<va>glob
<v>os
<v>sys
<v>shutil

<q>Что делает модуль sys.stderr.write в Python?
<va>Заменяет стандартное сообщение Python на пользовательское.
<v>Отправляет данные на стандартный вывод ошибок.
<v>Считывает данные из стандартного ввода.
<v>Останавливает выполнение программы с ошибкой.

<q>Для работы с какими протоколами и сервисами Интернет чаще всего используются модули urllib.request и smtplib в Python?
<va>Для работы с получаемыми данными по URL и для работы с сообщениями.
<v>Для парсинга HTML и CSS.
<v>Для создания графического интерфейса пользователя.
<v>Для обработки дат и времени.

<q>Какой модуль в Python предназначен для тестирования кода программ, записанного в документации?
<va>doctest.
<v>unittest.
<v>pytest.
<v>coverage.

<q>Какой из модулей предназначен для сжатия данных в Python?
<va>zlib.
<v>compress.
<v>archive.
<v>pack.

<q>Какой модуль позволяет работать с регулярными выражениями в Python?
<va>re.
<v>regex.
<v>string.
<v>pattern.

<q>Что делает модуль unittest в Python?
<va>Проверяет набор тестов
<v>Обрабатывает XML-файлы
<v>Отправляет почтовые сообщения
<v>Хранит данные в базах данных

<q>Для чего используются модули xmlrpc.client и xmlrpc.server?
<va>Для работы с XML-файлами на стороне клиента и сервера
<v>Для тестирования программ
<v>Для передачи почтовых сообщений
<v>Для интернационализации данных

<q>Какие функциональности объединяет модуль email в Python?
<va>Прием и отправка почтовых сообщений
<v>Чтение и запись в файлы
<v>Тестирование кода
<v>Работа с базами данных

<q>Что позволяет сделать использование отдельных файлов для хранения данных в информационных системах?
<va>Хранение информации в файлах и их обработка программой
<v>Автоматическое тестирование программ
<v>Передача почтовых сообщений
<v>Работа с XML-файлами

<q>Что делает функция open() в Python?
<va>Открывает файл с заданными правами доступа
<v>Отправляет почтовое сообщение
<v>Производит тестирование кода
<v>Обрабатывает XML-файлы

<q>Что обозначает последний аргумент в функции open('имя файла', 'режим', [encoding]) в Python?
<va>Кодировку данных файла
<v>Путь к файлу
<v>Режим работы с файлом
<v>Размер файла

<q>Какой режим открытия файла задан по умолчанию?
<va>r
<v>w
<v>x
<v>a

<q>Для чего используется режим "w" при открытии файла?
<va>Для записи, при этом содержимое удаляется, а при отсутствии файла создается новый
<v>Только для чтения
<v>Для записи в конец файла
<v>Для чтения и записи без удаления содержимого

<q>Что произойдет, если попытаться открыть файл в режиме "x" и файл существует?
<va>Интерпретатор выдаст ошибку
<v>Файл откроется для чтения
<v>Файл откроется для записи и удалит содержимое
<v>Файл откроется в двоичном режиме

<q>Что делает режим "a" при открытии файла?
<va>Открывает файл для записи и добавляет данные в конец файла
<v>Открывает файл только для чтения
<v>Открывает файл для записи и удаляет содержимое
<v>Открывает файл в двоичном режиме

<q>Какой режим открытия файла позволяет одновременно читать и записывать?
<va>+
<v>r
<v>w
<v>x

<q>Какая функция необходима для закрытия файла и освобождения ресурсов?
<va>close()
<v>open()
<v>read()
<v>write()

<q>Какое исключение возникает при делении на ноль в Python?
<va>Zero Division Error
<v>Value Error
<v>Type Error
<v>Index Error

<q>Какое исключение возникает, если обратиться к несуществующему атрибуту объекта?
<va>Attribute Error
<v>Import Error
<v>Key Error
<v>Name Error

<q>Как называется базовое исключение в Python, на котором строятся все остальные?
<va>Exception
<v>BaseError
<v>RootException
<v>CoreException

<q>Какая ошибка возникает, когда операция или функция применяется к объекту несоответствующего типа?
<va>Type Error
<v>Value Error
<v>Syntax Error
<v>Import Error

<q>Какое исключение возникает при попытке доступа к элементу последовательности, индекс которого выходит за пределы допустимых значений?
<va>Index Error
<v>Key Error
<v>Range Error
<v>Boundary Error

<q>Какое исключение возникает при попытке обратиться к переменной, которая не была определена?
<va>Name Error
<v>UndefinedVariable Error
<v>Declaration Error
<v>NonExistent Error

<q>Какая ошибка произойдет, если попытаться импортировать несуществующий модуль?
<va>Import Error
<v>ModuleNotFound Error
<v>Package Error
<v>Importation Error

<q>Что позволяет сделать обработка исключений в программировании?
<va>Заменить стандартный вывод ошибки своим сообщением
<v>Полностью избежать ошибок в программе
<v>Увеличить скорость выполнения программы
<v>Автоматически исправлять все ошибки в коде

<q>Какая инструкция используется для обработки исключений в Python?
<va>try...except
<v>if...else
<v>while...else
<v>for...in

<q>Что делает блок finally в конструкции try...except?
<va>Выполняется в любом случае, независимо от наличия исключения
<v>Выполняется только если не было никаких исключений
<v>Определяет дополнительные исключения
<v>Игнорирует все исключения, позволяя программе продолжить работу

<q>Как указать в обработке исключений, что необходимо перехватить любое исключение?
<va>Использовать Exception после except
<v>Использовать Error после except
<v>Использовать Any после except
<v>Использовать All после except

<q>Что произойдет, если в блоке try произойдет исключение, для которого нет соответствующего блока except?
<va>Программа выведет стандартное сообщение об ошибке
<v>Блок finally будет пропущен
<v>Программа завершит выполнение без сообщений об ошибках
<v>Исключение будет автоматически обработано как предупреждение

<q>Может ли конструкция try...except содержать несколько блоков except?
<va>Да, для обработки разных типов исключений
<v>Нет, разрешен только один блок except
<v>Да, но только если они обрабатывают один и тот же тип исключения
<v>Нет, дополнительные исключения должны обрабатываться в блоке finally

<q>Какой блок кода будет выполнен, если в конструкции try...except произойдет исключение, но его тип не соответствует указанному в блоке except?
<va>Блок except с Exception, если он присутствует, или стандартный вывод ошибки
<v>Блок else
<v>Блок finally, минуя все блоки except
<v>Ни один блок кода не будет выполнен, программа немедленно завершится

<q>Что произойдет при выполнении кода, где попытка вычислить синус от строки обернута в обработчик исключений с блоками try, except TypeError и finally?
<va>Будет выведено сообщение об ошибке типа и сообщение из блока finally
<v>Программа завершится с ошибкой, не выведя ничего
<v>Будет попытка исправить ошибку и повторить операцию
<v>Будет выведено только сообщение из блока finally

<q>Какое исключение будет сгенерировано, если в первом упражнении ввести 0?
<va>Исключение, связанное с делением на ноль.
<v>Исключение, связанное с вводом некорректного типа данных.
<v>Исключение, связанное с вводом отрицательного числа.
<v>Никакое исключение сгенерировано не будет.

<q>Какой метод используется для создания собственного исключения?
<va>raise
<v>throw
<v>try
<v>except

<q>Какая ошибка будет выведена, если во втором упражнении ввести число меньше 0?
<va>Вы ввели число меньше 0.
<v>Вы ввели не число.
<v>Ошибка деления на ноль.
<v>Никакая ошибка не будет выведена.

<q>Что требуется для создания собственного исключения?
<va>Создать класс исключений.
<v>Использовать готовые классы исключений.
<v>Написать функцию для обработки исключений.
<v>Применить оператор return в блоке try.

<q>Как обрабатывается исключение в Python?
<va>Используя блоки try и except.
<v>Используя блоки if и else.
<v>Используя функцию handleError.
<v>Используя оператор switch.

<q>Как называется оператор, который позволяет Python выдавать информацию об исключении в блоке except?
<va>as
<v>is
<v>in
<v>for

<q>Как называется процесс придания объекту уникальных характеристик в объектно-ориентированном программировании?
<va>Абстракция
<v>Инкапсуляция
<v>Наследование
<v>Полиморфизм

<q>Какой принцип ООП позволяет создавать новые классы на основе существующих?
<va>Наследование
<v>Инкапсуляция
<v>Полиморфизм
<v>Абстракция

<q>Какой принцип ООП позволяет одному и тому же интерфейсу иметь различное поведение?
<va>Полиморфизм
<v>Инкапсуляция
<v>Наследование
<v>Абстракция

<q>Какой принцип ООП позволяет создать новый класс на базе существующего?
<va>Наследование
<v>Инкапсуляция
<v>Полиморфизм
<v>Абстракция

<q>Что является характеристикой абстрактного класса?
<va>На его основе нельзя создать объекты, но можно создавать классы-потомки
<v>Можно создать объекты, но нельзя создавать классы-потомки
<v>Нельзя создать ни объекты, ни классы-потомки
<v>Можно создать объекты и классы-потомки без ограничений

<q>Какие свойства у объекта "студент" не должны изменяться извне?
<va>Свойства, защищенные через специальное объявление
<v>Любые свойства, включая изменяемые
<v>Только свойства, доступные для изменения
<v>Свойства, доступные только для чтения

<q>Как называется принцип ООП, при котором объект защищает свои данные и методы от внешнего доступа?
<va>Инкапсуляция
<v>Абстракция
<v>Наследование
<v>Полиморфизм

<q>Какой класс является примером абстрактного класса в примере с университетом?
<va>Сотрудник университета
<v>Научные работники
<v>Профессорско-преподавательский состав
<v>Административные работники

<q>Как называется иерархия классов в ООП, где используется принцип наследования?
<va>Двухуровневая вложенность
<v>Линейная иерархия
<v>Многоуровневая иерархия
<v>Параллельная иерархия

<q>Какой принцип ООП позволяет объектам одного класса иметь различные реализации одних и тех же методов?
<va>Полиморфизм
<v>Инкапсуляция
<v>Наследование
<v>Абстракция

<q>Какое ключевое слово используется для создания класса в Python?
<va>class
<v>def
<v>struct
<v>create

<q>Что представляет собой класс в Python?
<va>Абстрактную структуру, включающую атрибуты и методы
<v>Функцию для обработки данных
<v>Тип данных для хранения числовых значений
<v>Интерфейс для взаимодействия с пользователем

<q>Что такое экземпляр класса в Python?
<va>Объект, созданный на основе класса
<v>Функция внутри класса
<v>Переменная, хранящая данные
<v>Команда для запуска программы

<q>Как в Python обозначается конструктор класса?
<va>__init__
<v>__new__
<v>__class__
<v>__constructor__

<q>Для чего в методах класса Python используется 'self'?
<va>Для ссылки на экземпляр класса, который вызывает метод
<v>Для создания нового объекта класса
<v>Для указания статического метода
<v>Для инициализации переменной в классе

<q>Как называется переменная, которая определяет свойства в классе Python?
<va>Атрибут
<v>Параметр
<v>Элемент
<v>Дескриптор

<q>Что делает ключевое слово 'def' в классе Python?
<va>Определяет метод класса
<v>Создает новый класс
<v>Задает свойство класса
<v>Запускает метод класса

<q>Каким образом создаются экземпляры класса в Python?
<va>Присваиванием переменной имени класса
<v>Используя ключевое слово 'new'
<v>Путем вызова специальной функции создания класса
<v>Используя директиву 'create'

<q>Как можно изменить атрибут экземпляра класса?
<va>Присвоив ему новое значение
<v>Используя специальный метод класса
<v>Изменив класс, которому принадлежит экземпляр
<v>Атрибут экземпляра класса изменить невозможно

<q>Что представляют собой атрибуты класса?
<va>Свойства объектов
<v>Специальные функции класса
<v>Отдельные классы
<v>Константы

<q>Какой синтаксис используется для доступа к атрибуту экземпляра класса?
<va>имя_экземпляра_класса.переменная
<v>имя_класса.переменная
<v>имя_экземпляра_класса->переменная
<v>переменная:имя_экземпляра_класса

<q>Какое ключевое слово используется в Python для создания методов класса?
<va>def
<v>class
<v>method
<v>func

<q>Что обязательно должно присутствовать в определении метода класса в Python?
<va>self
<v>public
<v>static
<v>private

<q>Для чего используется ключевое слово "self" в методах класса Python?
<va>Для передачи экземпляра класса в метод
<v>Для обозначения статического метода
<v>Для обозначения приватного метода
<v>Для создания нового объекта класса

<q>Какая конструкция используется для вызова метода класса в Python?
<va>имя_объекта.имя_метода()
<v>имя_класса.имя_метода()
<v>имя_метода(имя_объекта)
<v>имя_объекта->имя_метода()

<q>Какой метод в Python позволяет создать экземпляр класса с заданными свойствами?
<va>__init__
<v>__new__
<v>__create__
<v>__start__

<q>Что делает метод out() в представленном примере?
<va>Выводит цвет объекта с восклицательным знаком
<v>Создает новый объект
<v>Изменяет цвет объекта
<v>Удаляет объект

<q>Чем методы класса в Python отличаются от обычных функций?
<va>Наличием 'self' в аргументах
<v>Требованием возвращать значение
<v>Отсутствием возвращаемого значения
<v>Использованием ключевого слова 'method'

<q>Какое ключевое слово используется для создания объекта класса в Python?
<va>new
<v>create
<v>build
<v>make

<q>Что делает конструктор класса __init__() в Python?
<va>Автоматически создает атрибуты экземпляра класса при его создании.
<v>Определяет имя класса.
<v>Задает начальное значение переменных.
<v>Выполняет математические операции при создании экземпляра класса.

<q>Какой синтаксис используется для определения конструктора класса в Python?
<va>def __init__(self [, список передаваемых аргументов]): self.имя_аргумента = передаваемый аргумент(значение)
<v>def __init__(): self.имя_аргумента = передаваемый аргумент(значение)
<v>def __init__(self [, список передаваемых аргументов]): return передаваемый аргумент(значение)
<v>def __start__(self [, список передаваемых аргументов]): self.имя_аргумента = передаваемый аргумент(значение)

<q>В чем отличие конструктора класса __init__() от обычного метода класса?
<va>Конструктор вызывается автоматически при создании экземпляра класса.
<v>Конструктор не может принимать аргументы.
<v>Конструктор используется для выполнения математических операций.
<v>Конструктор не может изменять атрибуты класса.

<q>Можно ли задать аргументы по умолчанию в конструкторе класса __init__()?
<va>Да, можно задать аргументы по умолчанию.
<v>Нет, это невозможно в конструкторе.
<v>Только если класс не содержит других методов.
<v>Только для строковых и числовых аргументов.

<q>Каким образом задаются атрибуты в конструкторе класса __init__()?
<va>Через self.имя_аргумента = передаваемый аргумент(значение)
<v>Путем прямого присваивания значения атрибутам класса.
<v>Через глобальные переменные.
<v>Используя внешние функции для присваивания значений.

<q>Какое количество подчеркиваний используется в обозначении конструктора класса __init__() в Python?
<va>Два нижних подчеркивания с обеих сторон.
<v>Одно нижнее подчеркивание с обеих сторон.
<v>Нет подчеркиваний.
<v>Три нижних подчеркивания с обеих сторон.

<q>Что произойдет, если при создании экземпляра класса не передать значение для аргумента, заданного по умолчанию в __init__()?
<va>Будет использовано значение по умолчанию для этого аргумента.
<v>Будет возникнуть ошибка.
<v>Класс не будет создан.
<v>Значение аргумента будет равно None.

<q>Какой этап создания экземпляра класса уменьшается при использовании конструктора __init__() вместо обычного метода?
<va>Не требуется отдельно вызывать метод для задания атрибутов.
<v>Не требуется объявлять класс.
<v>Не требуется присваивать класс переменной.
<v>Не требуется импортировать класс.

<q>Как называется конструктор класса в данном примере?
<va>__init__
<v>__construct__
<v>__new__
<v>__class__

<q>Что делает метод mwhere() в описанном классе?
<va>Определяет, где должен находиться товар
<v>Вычисляет стоимость товара
<v>Выводит название товара
<v>Проверяет наличие товара

<q>Сколько экземпляров класса «товар» создано в примере?
<va>Три
<v>Два
<v>Четыре
<v>Один

<q>Какие методы позволяют изменять количество товара?
<va>plus(), minus()
<v>add(), subtract()
<v>increase(), decrease()
<v>up(), down()

<q>Какой атрибут у экземпляра класса "ружье охотничье" задан по умолчанию?
<va>0 шт.
<v>10 шт.
<v>200 шт.
<v>1 шт.

<q>Как изменяется значение переменной п, отвечающей за количество товара?
<va>При помощи методов plus() и minus()
<v>Автоматически
<v>С помощью метода update()
<v>Изменение происходит вручную

<q>Для чего в данном примере можно использовать созданный класс «товар»?
<va>Для имитации процесса изменения объема товаров организации и формирования их учета
<v>Для расчета прибыли от продажи товаров
<v>Для отслеживания доставки товаров
<v>Для управления персоналом магазина

<q>Какой атрибут имеет экземпляр класса «кукла пластиковая»?
<va>10 шт.
<v>200 шт.
<v>0 шт.
<v>5 шт.

<q>Можно ли создать новый экземпляр класса, просто присвоив его уже существующему экземпляру?
<va>Нет, это лишь создаст ссылку на тот же объект.
<v>Да, таким образом создается новый экземпляр.
<v>Да, но только если класс не содержит конструктор.
<v>Да, если в классе определен метод clone.

<q>Что произойдет с переменной student2 после выполнения строки student2=student1?
<va>Она будет ссылаться на тот же объект, что и переменная student1.
<v>Она станет независимым экземпляром с теми же данными.
<v>Произойдет ошибка из-за невозможности копирования экземпляра.
<v>student2 станет новым объектом класса.

<q>Какой результат выполнения программы после изменения курса на 3 у student1?
<va>Значения курса изменятся у обеих переменных, student1 и student2.
<v>Значения курса изменится только у student1.
<v>Программа выдаст ошибку.
<v>Значения курса изменится только у student2.

<q>Какой идентификатор будет у student2 после строки student2.id=id1?
<va>Тот же, что и у student1 до изменения.
<v>Это будет новый уникальный идентификатор.
<v>Идентификатор будет сброшен в None.
<v>Произойдет ошибка, потому что id - это встроенная функция.

<q>Какой курс будет у student1 после выполнения строки student1.kurs=kurs?
<va>Курс, введенный пользователем в последний раз.
<v>Курс не изменится и останется первоначальным.
<v>Курс будет автоматически установлен в 1.
<v>Произойдет ошибка из-за несоответствия типов.

<q>Как в Python создается новый экземпляр класса?
<va>С помощью вызова конструктора класса.
<v>Присвоением экземпляра другому экземпляру.
<v>Используя ключевое слово new.
<v>С помощью функции copy().

<q>Как в Python правильно скопировать объект, чтобы изменения в копии не влияли на оригинал?
<va>Использовать метод deepcopy из модуля copy.
<v>Простое присваивание экземпляра другому.
<v>Использовать оператор == для копирования.
<v>Использовать метод clone().

<q>Какое из следующих утверждений о ссылках в Python верно?
<va>Переменные в Python содержат ссылки на объекты, а не сами объекты.
<v>Переменные в Python всегда содержат копии объектов.
<v>В Python нет ссылок, только значения.
<v>Ссылки в Python используются только для чисел и строк.

<q>Какой метод в Python является конструктором класса?
<va>__init__()
<v>__del__()
<v>__call__()
<v>__new__()

<q>Как называется метод, который автоматически вызывается при удалении объекта в Python?
<va>__del__()
<v>__remove__()
<v>__destroy__()
<v>__finalize__()

<q>Какие методы в Python начинаются и заканчиваются двумя нижними подчеркиваниями?
<va>Специальные методы
<v>Приватные методы
<v>Защищённые методы
<v>Публичные методы

<q>Что происходит, когда метод класса в Python начинается с двух нижних подчеркиваний?
<va>Метод становится закрытым
<v>Метод становится защищённым
<v>Метод становится публичным
<v>Метод становится статическим

<q>Какие методы в Python не могут быть вызваны непосредственно?
<va>Закрытые методы
<v>Защищённые методы
<v>Публичные методы
<v>Статические методы

<q>Как обозначается защищенный метод в Python?
<va>Одно нижнее подчеркивание перед именем
<v>Два нижних подчеркивания перед именем
<v>Одно верхнее подчеркивание перед именем
<v>Два верхних подчеркивания перед именем

<q>Какой метод в классе 'student' позволяет перевести студента на следующий курс?
<va>_perevod
<v>__init__
<v>__del__
<v>nextCourse

<q>Что происходит, если в коде Python вызвать метод с двумя нижними подчеркиваниями перед именем?
<va>Происходит инициализация специального метода
<v>Метод становится публичным
<v>Код вызовет ошибку
<v>Ничего не происходит

<q>Какой метод используется для вывода строки документации класса или объекта?
<va>__doc__()
<v>__dir__()
<v>__name__()
<v>__bases__()

<q>Какая функция используется для получения списка имен в текущей локальной области видимости?
<va>dir()
<v>doc()
<v>list()
<v>names()

<q>Какой метод позволяет получить значение атрибута класса, который не доступен при обычном вызове?
<va>__getattr__()
<v>__setattr__()
<v>__delattr__()
<v>__dir__()

<q>Какой метод вызывается при любой операции сравнения?
<va>__cmp__()
<v>__eq__()
<v>__str__()
<v>__hash__()

<q>Какой метод всегда вызывается при обращении к классу как к функции?
<va>__call__()
<v>__init__()
<v>__new__()
<v>__class__()

<q>Какой специальный метод выводит словарь атрибутов класса?
<va>__dict__
<v>__dir__()
<v>__members__()
<v>__attributes__()

<q>Какой метод позволяет присваивать значение недоступному атрибуту?
<va>__setattr__()
<v>__getattr__()
<v>__delattr__()
<v>__setitem__()

<q>Какой метод используется для удаления атрибута?
<va>__delattr__()
<v>__delete__()
<v>__removeattr__()
<v>__unsetattr__()

<q>Какой метод в классе Newclass отвечает за перегрузку оператора сложения?
<va>__add__
<v>__sum__
<v>__plus__
<v>__concat__

<q>Для чего в классе Newclass используется метод __str__?
<va>Для строкового представления объекта класса.
<v>Для сложения объектов класса.
<v>Для вызова объекта класса как функции.
<v>Для сохранения объекта класса в файл.

<q>Какой цвет был изначально установлен для объекта canvas в примере с перегрузкой операторов?
<va>green
<v>red
<v>blue
<v>yellow

<q>Какой метод в классе Changeable позволяет объекту класса изменять свой цвет?
<va>__call__
<v>__change__
<v>__init__
<v>__modify__

<q>Какой цвет был установлен для объекта frame после изменения его цвета на "yellow"?
<va>yellow
<v>blue
<v>green
<v>red

<q>Какое строковое представление возвращается для объекта класса Changeable?
<va>"# + self.color"
<v>"color: + self.color"
<v>"Color is + self.color"
<v>"The color is + self.color"

<q>Какой цвет будет выведен на печать, если вызвать print(canvas, frame) после указанных изменений в примере?
<va>red yellow
<v>green blue
<v>red blue
<v>green yellow

<q>Что такое обработка исключений в программировании?
<va>Механизм замены стандартного вывода ошибки своим сообщением для предотвращения аварийного завершения программы
<v>Функция возврата ошибок в программе
<v>Система логирования ошибок
<v>Метод оптимизации кода

<q>Как начинается инструкция обработки исключений в Python?
<va>try:
<v>catch:
<v>error:
<v>exception:

<q>Для чего используется блок except в инструкции обработки исключений Python?
<va>Для указания кода, который должен выполняться при возникновении ошибки
<v>Для определения типа исключения, которое было поймано
<v>Для выполнения кода после успешного выполнения try без ошибок
<v>Для инициализации переменных перед выполнением try

<q>Что делает блок finally в инструкции обработки исключений Python?
<va>Выполняется в любом случае, независимо от того, произошло исключение или нет
<v>Определяет финальное исключение, которое может быть обработано
<v>Завершает выполнение программы после обработки исключения
<v>Служит для финализации ресурсов и закрытия файлов

<q>Какой тип исключения указывается в блоке except, если неизвестно, какая ошибка может произойти?
<va>Exception
<v>Error
<v>AnyError
<v>AllExceptions

<q>Что позволяет делать наследование в объектно-ориентированном программировании?
<va>Использование свойств и методов родительского класса в классе-наследнике
<v>Переопределение функциональности операционной системы
<v>Создание полностью независимых классов без свойств
<v>Изменение синтаксиса языка программирования

<q>Как называется процесс добавления нового свойства экземпляру существующего класса?
<va>Простое наследование
<v>Множественное наследование
<v>Полиморфизм
<v>Инкапсуляция

<q>Что делает метод __str__ в классе Python?
<va>Позволяет вывести результат работы метода в виде строкового выражения
<v>Изменяет значение атрибута объекта
<v>Выполняет сложные математические вычисления
<v>Создает новый экземпляр класса

<q>Для чего используют абстрактные методы?
<va>Для обязательного переопределения в классах-наследниках.
<v>Для создания конечных методов, которые нельзя переопределять.
<v>Для объявления статических методов, доступных без создания экземпляра класса.
<v>Для определения приватных методов, недоступных вне класса.

<q>Что реализует подход использования абстрактных методов?
<va>Полиморфизм.
<v>Инкапсуляцию.
<v>Наследование.
<v>Композицию.

<q>Где создается абстрактный метод?
<va>В базовом родительском классе.
<v>В классах-наследниках.
<v>В интерфейсах.
<v>В модулях Python.

<q>Что происходит с абстрактным методом в классах-наследниках?
<va>Переопределяется.
<v>Удаляется.
<v>Остается без изменений.
<v>Становится статическим.

<q>Какой декоратор используется для объявления абстрактного метода?
<va>@abstractmethod
<v>@abstractclass
<v>@staticmethod
<v>@classmethod

<q>Что обеспечивает использование абстрактных методов в базовом классе?
<va>Один метод — множество реализаций в наследниках.
<v>Ограничение доступа к методу извне класса.
<v>Статический доступ к методу без экземпляра класса.
<v>Невозможность изменения метода в наследниках.

<q>Какое ключевое преимущество абстрактных методов в объектно-ориентированном программировании?
<va>Гарантия переопределения метода в каждом классе-наследнике.
<v>Упрощение процесса тестирования программы.
<v>Повышение скорости выполнения программы.
<v>Сокращение объема памяти, необходимой для выполнения программы.

<q>Что является следствием непереопределения абстрактного метода в классе-наследнике?
<va>Ошибка при попытке создания экземпляра такого класса.
<v>Успешное создание экземпляра класса, но с ограниченной функциональностью.
<v>Ничего, метод будет работать с реализацией по умолчанию.
<v>Автоматическое создание реализации метода компилятором.

<q>Что понимается под событийно-ориентированным программированием?
<va>Организация диалога с пользователем или приложением, запускающая код в ответ на их действия
<v>Разработка программного обеспечения, основанного исключительно на графическом интерфейсе
<v>Программирование, ориентированное на обработку данных в режиме реального времени
<v>Создание программ, которые автоматически адаптируются к поведению пользователя

<q>Что вызывается в событийно-ориентированной программе при наступлении события?
<va>Обработчик события
<v>Основной цикл приложения
<v>Системный монитор
<v>Функция сохранения состояния программы

<q>Какой эффект имеет событие в событийно-ориентированной программе?
<va>Запуск подпрограммы или блока программы для его обработки
<v>Автоматическое закрытие программы
<v>Уведомление пользователя о внутренней ошибке
<v>Изменение настроек пользовательского интерфейса

<q>Что такое цикл обработки событий?
<va>Последовательность действий программы, предназначенная для обработки событий.
<v>Способ организации файлов в программе.
<v>Метод защиты данных в приложении.
<v>Алгоритм шифрования информации.

<q>Как называется объект, у которого изменяется состояние и который вызывает события?
<va>Источник события.
<v>Приемник события.
<v>Обработчик события.
<v>Цель события.

<q>Что происходит при возникновении события?
<va>Событие порождает изменение в источнике события.
<v>Событие останавливает программу.
<v>Событие инициализирует компьютер.
<v>Событие вызывает ошибку в программе.

<q>Кто ожидает сообщения о том, что событие произошло?
<va>Цель события.
<v>Источник события.
<v>Обработчик события.
<v>Пользователь программы.

<q>Что создается при совершении события и содержит информацию о событии?
<va>Объект события.
<v>Метод события.
<v>Цикл события.
<v>Функция события.

<q>Что является завершающим этапом в цикле обработки событий?
<va>Завершение.
<v>Инициализация.
<v>Подготовка события.
<v>Обработка события.

<q>Что такое графический интерфейс пользователя (GUI)?
<va>Представление, обеспечивающее наглядное и интуитивно понятное взаимодействие пользователя с программой.
<v>Программное обеспечение для управления компьютерными сетями.
<v>Устройство вывода информации на экран.
<v>Система управления базами данных.

<q>Какой модуль в Python используется для создания графического интерфейса пользователя?
<va>tkinter.
<v>PyQt5.
<v>Django.
<v>Flask.

<q>Какой первый шаг при создании базового окна в tkinter?
<va>Импорт библиотеки
<v>Создание объекта Tk
<v>Идентификация событий
<v>Создание виджетов и настройка их свойств

<q>Каким образом в tkinter осуществляется идентификация событий пользователя?
<va>С помощью событийного шаблона
<v>Используя специальные функции библиотеки
<v>Через методы объекта Tk
<v>С помощью встроенных в Python механизмов

<q>Какая команда используется для установки названия окна в tkinter?
<va>title()
<v>setName()
<v>createTitle()
<v>windowTitle()

<q>Для чего в tkinter используется метод geometry()?
<va>Для установки размера окна
<v>Для размещения виджетов
<v>Для изменения геометрической формы виджетов
<v>Для создания геометрических фигур

<q>Что описывает событие "ButtonPress" в библиотеке Tkinter?
<va>Нажатие кнопки мыши
<v>Прокрутка колеса мыши
<v>Движение мыши в пределах области виджета
<v>Получение фокуса

<q>Какое событие происходит при "KeyPress"?
<va>Нажатие кнопки на клавиатуре
<v>Отжатие кнопки мыши
<v>Потеря фокуса
<v>Активация выбранного окна

<q>Каким событием описывается "FocusOut"?
<va>Потеря фокуса
<v>Активация выбранного окна
<v>Прокрутка колеса мыши
<v>Закрытие окна

<q>Что происходит при событии "Destroy"?
<va>Закрытие окна
<v>Получение фокуса
<v>Отжатие соответствующей кнопки мыши
<v>Движение мыши в пределах области виджета

<q>Для чего служит событие "Enter"?
<va>Событие входа курсора в область залпного виджета
<v>Изменение окна-родителя
<v>Движение мыши в пределах области виджета
<v>Прокрутка колеса мыши

<q>Какой термин соответствует "MouseWheel"?
<va>Прокрутка колеса мыши
<v>Получение фокуса
<v>Нажатие кнопки мыши
<v>Деактивация активного окна

<q>Событие "Visible" относится к:
<va>Изменению видимости окна
<v>Закрытию окна
<v>Активации выбранного окна
<v>Движению мыши в пределах области виджета

<q>Что делает событие "Leave"?
<va>Выход курсора мыши за виджет
<v>Изменение окна-родителя
<v>Отжатие соответствующей кнопки мыши
<v>Нажатие кнопки на клавиатуре

<q>Для чего используется объектная переменная в создании и конфигурировании виджета?
<va>Для создания ссылки на виджет с определенными свойствами.
<v>Для назначения функций виджету.
<v>Для определения размера виджета.
<v>Для определения цвета фона виджета.

<q>Какой синтаксис используется для создания и конфигурирования виджета?
<va>переменная=имя_виджета(родительское_окно [, свойство1=значение1 [, свойство2=значение2 [...]]])
<v>переменная=имя_виджета[свойство1=значение1, свойство2=значение2]
<v>имя_виджета(переменная [, свойство1=значение1 [, свойство2=значение2 [...]]])
<v>переменная=новый_виджет(родительское_окно [, свойство1, свойство2])

<q>Какой метод используется для упаковки виджета в окно?
<va>pack()
<v>place()
<v>attach()
<v>insert()

<q>Какой подход используется при работе с виджетами?
<va>Объектно-ориентированный подход.
<v>Процедурный подход.
<v>Функциональный подход.
<v>Декларативный подход.

<q>Что делает метод place()?
<va>Размещает виджет в окне, используя абсолютные или относительные координаты.
<v>Упаковывает виджет в окно.
<v>Скрывает виджет в окне.
<v>Изменяет размер виджета.

<q>Можно ли разместить виджет в окне без использования метода pack()?
<va>Да, используя метод place() или при автоматическом размещении в некоторых случаях.
<v>Нет, это невозможно.
<v>Только если виджет является кнопкой.
<v>Только при использовании специальной библиотеки.

<q>Какой язык программирования используется в приведенном примере для создания и конфигурирования виджета?
<va>Python.
<v>JavaScript.
<v>C++.
<v>Java.

<q>Какая опция виджета Button задает надпись на кнопке?
<va>text
<v>label
<v>title
<v>caption

<q>Какие параметры можно задать для виджета Button с помощью опции font?
<va>Тип, Размер, стиль
<v>Цвет, высота, ширина
<v>Положение, отступ, фон
<v>Размер, положение, цвет

<q>Какой виджет используется для информирования пользователя о чем-либо?
<va>Label
<v>Button
<v>Entry
<v>Text

<q>Какая опция виджета Label задает цвет фона?
<va>background или bg
<v>color или clr
<v>bgcolor или background-color
<v>foundation или fd

<q>Как можно задать цвет надписи в виджете Button?
<va>С помощью опции foreground или fg
<v>С помощью опции textcolor или tc
<v>С помощью опции fontcolor или fc
<v>С помощью опции color или col

<q>Что делают опции padx и pady в виджете Button?
<va>Задают расстояние между содержимым и границами виджета
<v>Задают размеры виджета
<v>Задают положение виджета на экране
<v>Задают стиль и размер шрифта в виджете

<q>Какой метод используется для размещения виджетов в окне?
<va>pack()
<v>place()
<v>grid()
<v>insert()

<q>Какой виджет в Tkinter позволяет сделать множественный выбор?
<va>Checkbutton (Флажок)
<v>Radiobutton (Переключатель)
<v>Listbox (Список)
<v>Frame (Рамки)

<q>Для чего используется виджет Listbox в Tkinter?
<va>Для выбора варианта из представленных записей
<v>Для создания флажков с множественным выбором
<v>Для создания переключателей с единственным выбором
<v>Для группировки других виджетов

<q>Какой виджет в Tkinter используется для группировки других виджетов?
<va>Frame (Рамки)
<v>Checkbutton (Флажок)
<v>Radiobutton (Переключатель)
<v>Listbox (Список)

<q>Какой метод устанавливает начальное значение переменной в Radiobutton?
<va>rv.set()
<v>c1.set()
<v>c2.set()
<v>c3.set()

<q>Что произойдет, если в методах c1.set(), c2.set(), c3.set() для Checkbutton в Tkinter вместо 0 использовать 1?
<va>Будет установлено значение "включено" для соответствующих флажков
<v>Будет установлено значение "выключено" для соответствующих флажков
<v>Программа выдаст ошибку
<v>Изменений не произойдет

<q>Какое свойство в виджете Frame Tkinter задает расстояние от границы рамки до размещенного в ней виджета?
<va>bd (borderwidth)
<v>justify
<v>variable
<v>onvalue

<q>Для чего в данном коде используется функция quit?
<va>Для завершения работы приложения
<v>Для открытия нового окна
<v>Для сохранения результата
<v>Для перезагрузки приложения

<q>Какой цвет будет у линии, созданной с помощью canvas.create_line(points, fill="blue", smooth=1)?
<va>Синий
<v>Черный
<v>Красный
<v>Зеленый

<q>Как называется кнопка, созданная в этом коде?
<va>button
<v>canvas
<v>tk
<v>points

<q>Какой формат записи используется в данном коде для указания кодировки файла?
<va>utf-8
<v>utf-16
<v>ascii
<v>unicode

<q>Что позволяют задать параметры `from_` и `to` в графическом интерфейсе?
<va>Начальное и конечное значение шкалы
<v>Размеры окна от минимального до максимального
<v>Временной интервал анимации
<v>Диапазон доступных значений для ввода

<q>Как можно задать первоначальный размер окна в графическом интерфейсе?
<va>Используя `prog.minsize(500,500)` или `prog.geometry('500x500')`
<v>С помощью функции `window.resize(500,500)`
<v>Через настройки дисплея в операционной системе
<v>Изменением параметров монитора

<q>Для чего используется параметр `bd=10` в настройках фрейма графического интерфейса?
<va>Для добавления границы фрейма
<v>Для установки яркости экрана
<v>Для изменения размера шрифта
<v>Для настройки задержки отклика

<q>Как называется метод в данном примере кода, который используется для создания нового окна?
<va>new_win()
<v>close_win()
<v>about()
<v>_open()

<q>Какая функция отвечает за закрытие приложения?
<va>close_win()
<v>new_win()
<v>about()
<v>_save()

<q>Для чего предназначена функция about()?
<va>Для отображения информации о программе.
<v>Для открытия файла.
<v>Для сохранения файла.
<v>Для закрытия программы.

<q>Какая команда привязана к пункту меню "Открыть"?
<va>_open()
<v>new_win()
<v>_save()
<v>close_win()

<q>Какая функция используется для сохранения файла?
<va>_save()
<v>_open()
<v>new_win()
<v>close_win()

<q>Что делает метод pr.title() в данном коде?
<va>Устанавливает название окна приложения.
<v>Создает новое окно.
<v>Закрывает приложение.
<v>Открывает файл.

<q>Что делает метод add_command() в данном фрагменте кода?
<va>Добавляет команды в меню.
<v>Удаляет команды из меню.
<v>Создает новое окно.
<v>Изменяет размер окна.

<q>Для чего в данном коде используется метод mainloop()?
<va>Для запуска основного цикла обработки событий Tkinter.
<v>Для создания нового меню.
<v>Для сохранения файла.
<v>Для выхода из приложения.

<q>Как называется метод, который позволяет выполнять каскадное добавление команд в меню?
<va>add_cascade.
<v>add_command.
<v>add_separator.
<v>add_checkbutton.

<q>Какой метод используется для обработки событий от пользователя в данном фрагменте?
<va>Метод bind.
<v>Метод pack.
<v>Метод mainloop.
<v>Метод add_command.

<q>Какой метод используется в данном коде для привязки событий к функциям-обработчикам?
<va>bind
<v>pack
<v>place
<v>grid

<q>Какое событие обрабатывается функцией b1?
<va>Нажатие левой кнопки мыши
<v>Нажатие правой кнопки мыши
<v>Движение мыши
<v>Двойное нажатие кнопки мыши

<q>Какая функция устанавливает минимальный размер окна в данном коде?
<va>minsize
<v>maxsize
<v>resize
<v>setsize

<q>Какие аргументы используются в методе minsize для установки размеров окна?
<va>width = 400, height = 100
<v>width = 100, height = 400
<v>width = 300, height = 100
<v>width = 400, height = 400

<q>Как изменяется название окна при событии, обрабатываемом функцией b3?
<va>"Правая кнопка мыши"
<v>"Левая кнопка мыши"
<v>"Движение мыши"
<v>"Двойное нажатие кнопки мыши"

<q>Какой виджет используется в данной программе?
<va>Tk
<v>Frame
<v>Button
<v>Label

<q>Что происходит при двойном нажатии левой кнопки мыши в данной программе?
<va>Ничего, так как нет привязанного события
<v>Изменение названия окна на "Левая кнопка мыши"
<v>Изменение цвета фона окна
<v>Закрытие окна

<q>С помощью какой функции изменяется название окна?
<va>title
<v>label
<v>name
<v>rename

<q>Какая библиотека используется в приведённом коде?
<va>tkinter
<v>string
<v>sys
<v>math

<q>Какой метод используется для изменения цвета фрейма при нажатии клавиши Return?
<va>color
<v>outgo
<v>bind
<v>mainloop

<q>Какая функция вызывается при нажатии кнопки мыши на кнопке "Вход"?
<va>outgo
<v>color
<v>bind
<v>destroy

<q>Что делает метод pack() в данном коде?
<va>Упаковывает виджет в родительский контейнер
<v>Привязывает функцию к событию
<v>Изменяет цвет виджета
<v>Закрывает приложение

<q>Какое событие связано с функцией color в данном коде?
<va>Нажатие клавиши Return
<v>Нажатие кнопки мыши
<v>Изменение видимости окна
<v>Закрытие окна

