<q>Что такое перегрузка функций?
<va>Это определение нескольких функций с одинаковым именем, но с разными параметрами.
<v>Это использование одной функции для выполнения нескольких задач.
<v>Это вызов функции внутри другой функции.
<v>Это передача параметров по ссылке.

<q>Каким образом можно отличить перегруженные функции?
<va>По типу и количеству параметров.
<v>По имени функции.
<v>По возвращаемому значению.
<v>По расположению в коде.

<q>Что произойдет, если передать в функцию параметр по ссылке?
<va>Функция будет работать с оригинальной переменной.
<v>Будет создана копия переменной.
<v>Будет создан указатель на переменную.
<v>Ничего не произойдет.

<q>Что такое функция-член класса?
<va>Это функция, определенная внутри класса и имеющая доступ к его членам.
<v>Это глобальная функция, имеющая доступ к членам класса.
<v>Это функция, определенная снаружи класса.
<v>Это функция, вызываемая при создании объекта.

<q>Как объявить константный метод класса?
<va>Добавить ключевое слово const в конце объявления метода.
<v>Добавить ключевое слово const перед объявлением метода.
<v>Добавить ключевое слово const внутри тела метода.
<v>Константные методы в классе объявлять нельзя.

<q>Какое ключевое слово используется для объявления функции, которая не может быть переопределена в производном классе?
<va>final
<v>override
<v>static
<v>const

<q>Что такое виртуальная функция?
<va>Это функция, которая может быть переопределена в производном классе.
<v>Это функция, которая не может быть переопределена.
<v>Это функция, которая вызывается автоматически при создании объекта.
<v>Это функция, которая вызывается при уничтожении объекта.

<q>Какое ключевое слово используется для объявления виртуальной функции?
<va>virtual
<v>override
<v>static
<v>const

<q>Что такое чисто виртуальная функция?
<va>Это виртуальная функция, которая не имеет определения и должна быть переопределена в производном классе.
<v>Это виртуальная функция с пустым телом.
<v>Это виртуальная функция, которая может быть переопределена в производном классе.
<v>Это функция, которая не может быть переопределена в производном классе.

<q>Как объявить чисто виртуальную функцию?
<va>Присвоить ей значение 0 в объявлении.
<v>Добавить ключевое слово pure перед объявлением функции.
<v>Добавить ключевое слово abstract перед объявлением функции.
<v>Добавить ключевое слово final перед объявлением функции.

<q>Что такое функция обратного вызова (callback)?
<va>Это функция, переданная в другую функцию в качестве аргумента и вызываемая из этой функции.
<v>Это функция, которая вызывает саму себя.
<v>Это функция, которая возвращает указатель на другую функцию.
<v>Это функция, вызываемая при завершении программы.

<q>Как объявить указатель на функцию?
<va>Использовать синтаксис: тип_возвращаемого_значения (*имя_указателя)(параметры).
<v>Использовать синтаксис: тип_возвращаемого_значения &имя_указателя(параметры).
<v>Использовать синтаксис: тип_возвращаемого_значения имя_указателя(параметры).
<v>Использовать синтаксис: тип_возвращаемого_значения **имя_указателя(параметры).

<q>Что такое перегрузка операторов?
<va>Это определение новых значений для операторов в классе.
<v>Это выполнение нескольких операций одновременно.
<v>Это вызов нескольких функций подряд.
<v>Это выполнение одной функции с разными параметрами.

<q>Какие операторы нельзя перегружать в C++?
<va>::, .*, ., ?:
<v>+, -, *, /
<v>==, !=, <, >
<v>++, --

<q>Что такое замыкание (closure) в C++?
<va>Это лямбда-функция, которая захватывает переменные из своей области видимости.
<v>Это функция, вызываемая при завершении программы.
<v>Это функция, которая вызывает саму себя.
<v>Это функция, которая возвращает другую функцию.

<q>Как объявить лямбда-функцию в C++?
<va>Использовать синтаксис: [захват](параметры) { тело функции }.
<v>Использовать синтаксис: (параметры) -> { тело функции }.
<v>Использовать синтаксис: { тело функции }[захват](параметры).
<v>Использовать синтаксис: { тело функции }(параметры)[захват].

<q>Что такое функция с переменным числом аргументов?
<va>Это функция, которая может принимать разное количество аргументов.
<v>Это функция, принимающая указатель на массив.
<v>Это функция, возвращающая массив.
<v>Это функция, вызывающая другую функцию.

<q>Как объявить функцию с переменным числом аргументов в C++?
<va>Использовать многоточие ... в списке параметров функции.
<v>Использовать ключевое слово varargs в списке параметров функции.
<v>Использовать ключевое слово variable в списке параметров функции.
<v>Использовать ключевое слово args в списке параметров функции.

<q>Как получить доступ к аргументам функции с переменным числом аргументов?
<va>Использовать макросы va_start, va_arg и va_end из заголовочного файла cstdarg.
<v>Использовать макросы args_start, args_next и args_end.
<v>Использовать макросы var_start, var_next и var_end.
<v>Использовать макросы varargs_start, varargs_next и varargs_end.

<q>Как объявить шаблон функции в C++?
<va>Использовать ключевое слово template перед объявлением функции.
<v>Использовать ключевое слово typename перед объявлением функции.
<v>Использовать ключевое слово generic перед объявлением функции.
<v>Использовать ключевое слово class перед объявлением функции.

<q>Что такое спецификатор noexcept в C++?
<va>Это спецификатор, указывающий, что функция не будет выбрасывать исключения.
<v>Это спецификатор, указывающий, что функция не принимает аргументов.
<v>Это спецификатор, указывающий, что функция не возвращает значения.
<v>Это спецификатор, указывающий, что функция не может быть перегружена.

<q>Как объявить константный метод класса, который не изменяет члены класса?
<va>Добавить const после списка параметров метода.
<v>Добавить const перед именем метода.
<v>Добавить const внутри тела метода.
<v>Добавить const перед типом возвращаемого значения.

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
int add(int a, int b) {
    return a + b;
}
int main() {
    cout << add(5, 3) << endl;
    return 0;
}
<va>8
<v>53
<v>5
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
void greet() {
    cout << "Hello, World!" << endl;
}
int main() {
    greet();
    return 0;
}
<va>Hello, World!
<v>greet
<v>Ничего не выведет
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
void increment(int &n) {
    n++;
}
int main() {
    int value = 10;
    increment(value);
    cout << value << endl;
    return 0;
}
<va>11
<v>10
<v>1
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
int factorial(int n) {
    if (n <= 1) return 1;
    else return n * factorial(n - 1);
}
int main() {
    cout << factorial(4) << endl;
    return 0;
}
<va>24
<v>4
<v>12
<v>16

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
int max(int a, int b) {
    return (a > b) ? a : b;
}
int main() {
    cout << max(7, 10) << endl;
    return 0;
}
<va>10
<v>7
<v>17
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
int sum(int a, int b = 5) {
    return a + b;
}
int main() {
    cout << sum(3) << endl;
    cout << sum(3, 7) << endl;
    return 0;
}
<va>8\n10
<v>3\n7
<v>5\n10
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
inline int square(int x) {
    return x * x;
}
int main() {
    cout << square(5) << endl;
    return 0;
}
<va>25
<v>5
<v>10
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
void printMessage(string message) {
    cout << message << endl;
}
int main() {
    printMessage("Hello, C++!");
    return 0;
}
<va>Hello, C++!
<v>Hello, World!
<v>message
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
int multiply(int a, int b) {
    return a * b;
}
double multiply(double a, double b) {
    return a * b;
}
int main() {
    cout << multiply(3, 4) << endl;
    cout << multiply(2.5, 4.0) << endl;
    return 0;
}
<va>12\n10
<v>7\n10
<v>12\n8
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
void swap(int &a, int &b) {
    int temp = a;
    a = b;
    b = temp;
}
int main() {
    int x = 1, y = 2;
    swap(x, y);
    cout << "x: " << x << ", y: " << y << endl;
    return 0;
}
<va>x: 2, y: 1
<v>x: 1, y: 2
<v>x: 1, y: 1
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
int add(int a, int b, int c = 0) {
    return a + b + c;
}
int main() {
    cout << add(2, 3) << endl;
    cout << add(2, 3, 4) << endl;
    return 0;
}
<va>5\n9
<v>5\n7
<v>2\n3
<v>Ошибка компиляции
