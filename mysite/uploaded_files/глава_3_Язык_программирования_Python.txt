<q>Что такое переменная в программировании?
<va>Величина, которая может принимать разные значения в процессе выполнения кода
<v>Инструмент для выполнения математических операций
<v>Функция, выполняющая определенные задачи в коде
<v>Файл, содержащий данные программы

<q>Какие правила именования переменных существуют в Python?
<va>Переменные должны начинаться с буквы или символа нижнего подчеркивания
<v>Переменные должны начинаться только с буквы
<v>Переменные должны начинаться с цифры
<v>Нет специальных правил для именования переменных

<q>Что означает переменная, начинающаяся с нижнего подчеркивания в Python?
<va>Используется внутри локального модуля
<v>Является глобальной переменной
<v>Представляет специальное ключевое слово
<v>Обозначает стандартную библиотеку

<q>Как называются переменные, начинающиеся и заканчивающиеся двумя нижними подчеркиваниями в Python?
<va>Переменные с особым смыслом, например, для перегрузки операторов
<v>Глобальные переменные
<v>Локальные переменные
<v>Переменные, хранящие текст программы

<q>Какие виды пространств имен переменных существуют в Python?
<va>Глобальные, локальные и встраиваемые
<v>Публичные, приватные и защищенные
<v>Статические, динамические и константные
<v>Временные, постоянные и виртуальные

<q>Что представляют собой локальные переменные в Python?
<va>Переменные, видимые только в функции, где они определены
<v>Переменные, доступные во всей программе
<v>Переменные, хранящие временные значения
<v>Переменные, используемые для ввода данных

<q>Как называется процесс присваивания переменной различных значений в процессе выполнения кода?
<va>Изменение значения переменной
<v>Инициализация переменной
<v>Декларирование переменной
<v>Удаление переменной

<q>Чему соответствует переменная, названная как "employee" в контексте программирования?
<va>Переменная для описания сотрудника
<v>Функция для управления данными сотрудника
<v>Класс, включающий всех сотрудников
<v>Модуль для работы с информацией о сотрудниках

<q>Какую функцию следует использовать для просмотра списка ключевых слов в Python?
<va>kwlist
<v>keylist
<v>keywords
<v>listkeys

<q>Из какого модуля нужно импортировать функцию для получения списка ключевых слов?
<va>keyword
<v>key
<v>keywords
<v>wordkey

<q>Какая функция используется для получения полного списка встроенных идентификаторов в Python?
<va>dir()
<v>list()
<v>help()
<v>vars()

<q>Из какого модуля импортируются встроенные идентификаторы для получения их списка?
<va>builtins
<v>internals
<v>builtin
<v>buildins

<q>Какой оператор используется в Python для присваивания значения переменной?
<va>=
<v>==
<v>:=
<v><-

<q>Можно ли использовать ключевые слова Python в качестве имен переменных?
<va>Нет
<v>Да
<v>Только некоторые
<v>Да, если использовать заглавные буквы

<q>Что выведет следующий код Python: print('P', 'y', 't', 'h', 'o', 'n', sep='')?
<va>Python
<v>P y t h o n
<v>'P' 'y' 't' 'h' 'o' 'n'
<v>P,y,t,h,o,n

<q>Какой результат выполнения этого кода: print([i**2 for i in range(1, 6)])?
<va>[1, 4, 9, 16, 25]
<v>[1, 2, 3, 4, 5]
<v>[2, 4, 6, 8, 10]
<v>[1, 8, 27, 64, 125]

<q>Какое ключевое слово используется для объявления переменных в языках, производных от Pascal?
<va>var
<v>let
<v>def
<v>const

<q>Какая технология реализована в языке программирования Python, позволяющая переменным изменять свой тип?
<va>Динамическая типизация
<v>Статическая типизация
<v>Строгая типизация
<v>Автоматическая типизация

<q>Что произойдет в языках с строгой типизацией, таких как C++, при использовании переменных разных типов в одном выражении?
<va>Ошибка типа
<v>Преобразование типов
<v>Предупреждение компилятора
<v>Автоматическая типизация

<q>Что отличает Python от многих других языков программирования?
<va>Не требуется заранее объявлять тип переменных
<v>Требуется строгое объявление типов
<v>Используется только статическая типизация
<v>Поддерживает только целочисленные типы данных

<q>Как в Python определяется тип переменной?
<va>Тип определяется "движком" языка
<v>Тип определяется на этапе компиляции
<v>Тип должен быть явно указан программистом
<v>Тип всегда остается неизменным

<q>Какие типы данных Python поддерживает среди приведенных в упражнении?
<va>Словарь, кортеж, множество
<v>Только числовые типы
<v>Только строковые типы
<v>Только булевы типы

<q>Как изменяется тип объекта в Python при изменении ссылки, на которую он указывает?
<va>Изменяет свой тип
<v>Остается неизменным
<v>Удаляется
<v>Преобразуется в другой объект

<q>Что происходит, когда Python-объекту присваивается новая ссылка?
<va>Счетчик ссылок этого объекта увеличивается на единицу
<v>Счетчик ссылок этого объекта уменьшается на единицу
<v>Создается новый объект
<v>Происходит удаление старого объекта

<q>Как называется механизм в Python, который очищает память от неиспользуемых объектов?
<va>Сборка мусора (garbage collection)
<v>Деструкция
<v>Рефакторинг
<v>Перераспределение памяти

<q>Как изменится счетчик ссылок объекта, если на него перестанут ссылаться?
<va>Уменьшится на единицу
<v>Увеличится на единицу
<v>Обнулится
<v>Удвоится

<q>Какое значение имеет счетчик ссылок на объект Python, когда объект считается неиспользуемым?
<va>0
<v>1
<v>-1
<v>Неопределено

<q>Что происходит с объектом Python, когда его счетчик ссылок становится равным нулю?
<va>Объект удаляется и освобождается память
<v>Объект сохраняется в памяти
<v>Объект копируется
<v>Счетчик автоматически увеличивается

<q>Каков результат выполнения кода "а = '1'; b = a; a = 1;" в контексте счетчиков ссылок в Python?
<va>Счетчик '1' равен 1, счетчик 1 равен 1
<v>Счетчик '1' равен 2
<v>Счетчик 1 равен 2
<v>Счетчик '1' равен 0

<q>Какое поле структуры объекта в Python содержит информацию о типе данных?
<va>Первое поле
<v>Второе поле
<v>Третье поле
<v>Четвертое поле

<q>Что происходит с памятью, выделенной для объекта Python, когда его счетчик ссылок уменьшается до нуля?
<va>Память освобождается
<v>Память перераспределяется
<v>Память сохраняется
<v>Память утечки возникает

<q>Какая функция в Python используется для проверки соответствия переменной определенному типу данных?
<va>isinstance
<v>type
<v>print
<v>int

<q>Какая функция в Python преобразует строку в целое число?
<va>int()
<v>str()
<v>float()
<v>bool()

<q>Что делает функция type() в сочетании с инструкцией print()?
<va>Выводит тип переменной на экран
<v>Преобразует тип переменной
<v>Создает новую переменную
<v>Удаляет переменную

<q>Какой результат выдаст следующий код: isinstance(a, list), если a = [1,2,3]?
<va>True
<v>False
<v>Ошибка
<v>None

<q>Что делает функция print(isinstance(a, int)), если a = 1?
<va>Выводит True
<v>Выводит False
<v>Выводит None
<v>Выводит 1

<q>Какой результат выдаст следующий код: isinstance(a, int), если a = '1'?
<va>False
<v>True
<v>Ошибка
<v>None

<q>Какое действие выполняет следующий код: a = str(a)?
<va>Преобразует переменную a в строку
<v>Преобразует строку в переменную a
<v>Удаляет переменную a
<v>Печатает тип переменной a

<q>Какой результат выдаст следующий код: print(type(a)), если a = input(question)?
<va><class 'str'>
<v><class 'int'>
<v><class 'float'>
<v><class 'list'>

<q>Какой тип данных будет у переменной a после выполнения операции a=tuple(a)?
<va>tuple
<v>list
<v>set
<v>dict

<q>Какой метод позволяет преобразовать строку в список байтов?
<va>bytes()
<v>bytearray()
<v>str()
<v>list()

<q>Какой метод используется для преобразования целого числа в соответствующий символ?
<va>chr()
<v>ord()
<v>str()
<v>int()

<q>Какой тип данных возвращается функцией type() при вызове type(a), если a = set(a)?
<va>set
<v>list
<v>tuple
<v>dict

<q>Какая функция возвращает числовое значение байта соответствующего символу?
<va>ord()
<v>chr()
<v>hex()
<v>bin()

<q>Какой оператор используется для удаления переменной в Python?
<va>del
<v>remove
<v>delete
<v>clear

<q>Какой тип данных имеет переменная al после выполнения al=float(input('Первое число: '))?
<va>float
<v>int
<v>str
<v>list

<q>Что делает метод bytearray()?
<va>Создаёт массив байтов
<v>Преобразует строку в список
<v>Конвертирует число в байты
<v>Создаёт пустой массив

<q>Какую ошибку выдаст интерпретатор Python при попытке использовать переменные `a`, `dl` и `d2` после их удаления?
<va>NameError: name 'a' is not defined
<v>SyntaxError: invalid syntax
<v>TypeError: 'NoneType' object is not callable
<v>IndexError: list index out of range

<q>Какой метод используется в Python для преобразования строки в список?
<va>split()
<v>join()
<v>convert()
<v>list()

<q>Какой тип данных получится, если преобразовать список в Python сначала в кортеж, а затем в множество?
<va>Множество (set)
<v>Список (list)
<v>Словарь (dict)
<v>Кортеж (tuple)

<q>Что получится, если пользователь введет целое число в командной строке, а программа прибавит к этому числу 3 и выведет результат?
<va>Сумма введенного числа и 3
<v>Произведение введенного числа и 3
<v>Частное введенного числа и 3
<v>Разность введенного числа и 3

<q>Если пользователь введет вещественное число, а программа разделит его на 3 и выведет результат, какой тип данных будет у полученного значения?
<va>Вещественное число (float)
<v>Целое число (int)
<v>Строка (str)
<v>Кортеж (tuple)

<q>Как называется процесс передачи программы, написанной на Python, интерпретатору через файл с расширением *.py?
<va>Файловый ввод
<v>Интерактивное исполнение
<v>Стандартный ввод
<v>Компиляция

<q>Какую команду обычно используют в IDLE Python для запуска программы из файла?
<va>F5
<v>F1
<v>Ctrl + R
<v>Shift + Enter

<q>Что особенно важно в структуре программы на Python?
<va>Комментарии, блоки и правила оформления отступов
<v>Скорость выполнения и эффективность использования памяти
<v>Использование сложных алгоритмов
<v>Минимализм в коде

<q>Какой из перечисленных способов используется для непосредственного ввода кода в интерпретатор Python?
<va>Непосредственный ввод кода в интерпретатор
<v>Использование функций eval() и input()
<v>Написание кода в текстовом редакторе с последующим сохранением файла с расширением .py
<v>Создание программы в интерактивном режиме

<q>Какие функции используются для ввода выражений в интерактивном режиме Python?
<va>eval() и input()
<v>input() и print()
<v>eval() и exec()
<v>exec() и print()

<q>Что является основой структуры программы в Python?
<va>Объекты
<v>Функции
<v>Модули
<v>Классы

<q>Как называется минимальный элемент программы на Python в соответствии с принятым алфавитом?
<va>Символ
<v>Слово
<v>Строка
<v>Байт

<q>Из чего формируется физическая строка в Python?
<va>Совокупность символов
<v>Несколько логических строк
<v>Группа функций
<v>Набор инструкций

<q>Что составляет логическую строку в Python?
<va>Несколько физических строк
<v>Набор символов
<v>Коллекция модулей
<v>Группа переменных

<q>Как называется оператор в Python, используемый для переноса части кода на другую физическую строку?
<va>«\»
<v>«:»
<v>«//»
<v>«#»

<q>Какое условие должна выполнять программа Python, написанная в текстовом редакторе?
<va>Файл должен иметь расширение *.py
<v>Программа должна начинаться с комментария
<v>Каждая строка должна заканчиваться специальным символом
<v>Программа должна содержать не менее одной функции

<q>Какой символ используется в Python для переноса строки?
<va>\n
<v>\t
<v>\\
<v>\r

<q>Для чего в Python используются комментарии?
<va>Для лучшего понимания кода программы
<v>Для добавления новых строк
<v>Для умножения значений
<v>Для соединения строк

<q>Что произойдет после выполнения кода del a в Python?
<va>Удалится переменная a
<v>Удалится значение переменной a
<v>Создастся переменная a
<v>Переименуется переменная a

<q>Чему будет равно значение переменной a после выполнения кода a = 3.5?
<va>3.5
<v>3
<v>0
<v>Ошибка выполнения

<q>Что делает символ # в Python?
<va>Обозначает начало комментария
<v>Обозначает начало строки
<v>Обозначает конец строки
<v>Обозначает начало блока кода

<q>Какой результат работы программы, если пользователь введет число 2?
<va>Выводит число 2 на экран
<v>Удаляет число 2
<v>Выводит сообщение об ошибке
<v>Сохраняет число 2 в переменной

<q>Что означает del d1, d2 в Python?
<va>Удаляет переменные d1 и d2
<v>Объявляет переменные d1 и d2
<v>Сохраняет значения в переменных d1 и d2
<v>Складывает значения переменных d1 и d2

<q>Как в Python обозначается логическая строка?
<va>Текст в кавычках
<v>Текст в скобках
<v>Текст после символа #
<v>Текст с отступами

<q>Что символизирует двоеточие (:) в Python?
<va>Начало блока команд
<v>Конец строки
<v>Разделение параметров функции
<v>Оператор сравнения

<q>Что является блоком в Python?
<va>Функции, условные операторы, циклы
<v>Переменные
<v>Строки кода без отступов
<v>Комментарии

<q>Какой элемент является обязательным перед блоком команд в Python?
<va>«:»
<v>«;»
<v>«()»
<v>«{}»

<q>Как называется блок в других языках программирования, который в Python может выражаться через функции, условные операторы и циклы?
<va>Подпрограмма
<v>Процедура
<v>Класс
<v>Метод

<q>Для чего используются отступы в Python?
<va>Для организации блоков
<v>Для украшения кода
<v>Для разделения команд в строке
<v>Для указания на тип данных

<q>Что делает условный оператор if в Python?
<va>Определяет выполнение определенного блока кода в зависимости от условия
<v>Циклически выполняет блок кода
<v>Определяет функцию
<v>Запрашивает ввод данных от пользователя

<q>Какой результат будет выведен после ввода чисел 1 и 2 в приведенном примере кода?
<va>1.0 2.0
<v>2.0 1.0
<v>Ничего не будет выведено
<v>Ошибка выполнения

<q>Как изменится вывод программы, если сначала ввести число 2, а затем число 1?
<va>1.0 2.0
<v>2.0 1.0
<v>Вывод останется таким же, как при первом запуске
<v>Ошибка выполнения

<q>Какой отступ считается стандартным при написании кода на Python?
<va>Четыре пробела
<v>Восемь пробелов
<v>Два пробела
<v>Табуляция

<q>Что произойдет, если отступы в коде Python не будут соответствовать принятому стандарту?
<va>Интерпретатор выдаст сообщение об ошибке
<v>Код выполнится без предупреждений
<v>Отступы будут автоматически исправлены
<v>Код будет выполнен, но с предупреждением

<q>Чем отличается организация блоков кода в Python от таковой в Delphi?
<va>Использованием отступов вместо ключевых слов begin...end
<v>Использованием фигурных скобок
<v>Использованием ключевых слов If...End If
<v>Отсутствием необходимости в организации блоков

<q>Как в Python обозначается блок кода, принадлежащий определенной структуре управления?
<va>Отступами
<v>Ключевыми словами begin...end
<v>Фигурными скобками
<v>Ключевыми словами If...End If

<q>Какой инструмент рекомендуется использовать для создания правильных отступов в Python?
<va>IDLE Python
<v>Любой текстовый редактор
<v>Специальные плагины для браузеров
<v>Редакторы кода с функцией автодополнения

<q>Что из перечисленного не является преимуществом использования отступов в Python?
<va>Автоматическое исправление синтаксических ошибок
<v>Сокращение кода
<v>Наглядность представления
<v>Упрощение восприятия программы

<q>Какие средства используются в других языках программирования для организации блоков кода, в отличие от Python?
<va>Ключевые слова и фигурные скобки
<v>Только отступы
<v>Только фигурные скобки
<v>Только ключевые слова

<q>Какое из утверждений лучше всего описывает роль отступов в Python?
<va>Объединяют части текста программы в единый блок
<v>Используются только для улучшения визуального восприятия кода
<v>Не имеют синтаксической роли, только для красоты
<v>Служат для разделения команд в разных строках

<q>Какой оператор используется в Python для присваивания значения переменной?
<va>=
<v>==
<v>:=
<v>+=

<q>Что произойдет, если попытаться обновить переменную в Python до её инициализации?
<va>Интерпретатор выведет сообщение об ошибке
<v>Переменная будет автоматически инициализирована нулём
<v>Произойдет автоматическое присваивание пустой строки
<v>Ничего, код выполнится без ошибок

<q>Что такое инструкция присваивания в языках программирования?
<va>Команда, создающая ссылку на объект или обновляющая уже существующую переменную
<v>Операция, сравнивающая две переменные
<v>Метод, удаляющий переменную из памяти
<v>Команда, выполняющая арифметическую операцию

<q>Как называется процесс создания переменной с присвоением ей начального значения?
<va>Инициализация
<v>Объявление
<v>Присваивание
<v>Определение

<q>Какая инструкция в Python позволяет присвоить одинаковое или разное значение нескольким переменным одновременно?
<va>Групповое присваивание
<v>Множественное объявление
<v>Параллельное присваивание
<v>Комбинированное присваивание

<q>Какой результат выполнения следующего кода на Python: a='1'; a=int(a) + 2; print(a)?
<va>3
<v>1
<v>'12'
<v>Ошибка выполнения

<q>Что делает комбинированное присваивание в Python?
<va>Сочетает групповое присваивание и обновление значений переменных
<v>Позволяет присваивать значение переменной во время её объявления
<v>Присваивает одно значение нескольким переменным
<v>Создаёт новую переменную и присваивает ей значение другой переменной

<q>Какой тип инструкции в Python затрагивается при обсуждении присваивания, ввода и вывода данных, а также арифметических операций?
<va>Основные инструкции
<v>Управляющие инструкции
<v>Функциональные инструкции
<v>Модульные инструкции

<q>Какая конструкция используется для присваивания значения переменной в Python?
<va>a=b=число (строка)
<v>a==b==число (строка)
<v>a<=b<=число (строка)
<v>a!=b!=число (строка)

<q>Какой результат будет на экране после выполнения кода: a=2; print(a, ' ', b)?
<va>2 2
<v>2 b
<v>Ошибка выполнения
<v>2 ' ' b

<q>Какая строка будет выведена последней при выполнении данного блока кода: a, b, c=1,2,'Иванов'; print(a, ' ', b, c)?
<va>1 2 Иванов
<v>1 ' ' 2 ' ' Иванов
<v>Иванов
<v>a b Иванов

<q>Какое слово будет напечатано перед "Студент" при выполнении кода: c='Студент'; print(c, ' ', d)?
<va>Аспирант
<v>Слово "Студент"
<v>c
<v>d

<q>Какой оператор используется для присваивания значения в Python?
<va>=
<v>==
<v>=<
<v>=!

<q>Что делает оператор += в Python?
<va>Складывает значение левого и правого операнда
<v>Умножает левый операнд на правый
<v>Вычитает правый операнд из левого
<v>Делит левый операнд на правый

<q>Какой оператор выполняет целочисленное деление?
<va>//
<v>/
<v>%
<v>*

<q>Какой оператор в Python используется для возведения в степень?
<va>**
<v>^
<v>**
<v>*~

<q>Какая функция в Python используется для ввода данных от пользователя?
<va>input()
<v>print()
<v>scanf()
<v>echo()

<q>Что происходит после нажатия клавиши Enter при использовании функции input() в Python?
<va>Интерпретатор обрабатывает полученные данные
<v>Программа завершает работу
<v>Данные удаляются
<v>Ничего не происходит

<q>Как в Python присваивается значение, введенное пользователем, переменной?
<va>Значение, введенное пользователем, присваивается переменной после использования input()
<v>Значение автоматически сохраняется без использования переменных
<v>Используется функция assign()
<v>Значение вводится непосредственно в коде программы

<q>Для чего в Python используется функция print()?
<va>Для вывода данных на экран
<v>Для ввода данных от пользователя
<v>Для вычисления арифметических операций
<v>Для сохранения данных в файл

<q>Какой синтаксис правильно описывает использование функции input() для запроса ввода текста "Введите число"?
<va>input('Введите число')
<v>print('Введите число')
<v>input(Введите число)
<v>echo('Введите число')

<q>Как в Python можно преобразовать строку, введенную пользователем, в целое число?
<va>Использование выражения int(input())
<v>Просто input()
<v>Использование выражения str(input())
<v>Использование выражения float(input())

<q>Что будет результатом выполнения кода n=input('Введите текст'); print('Вы ввели:', n) если пользователь введет "Python"?
<va>Вы ввели: Python
<v>Введите текст: Python
<v>Python
<v>Вы ввели:

<q>Какую программу предлагается составить в упражнении 3.8?
<va>Программу, вычисляющую средний балл из оценок по трем дисциплинам
<v>Программу для ввода текста пользователем
<v>Программу, выводящую текст "Введите число"
<v>Программу, преобразующую текст в число

<q>Для чего используется функция print() в Python?
<va>Для вывода данных на экран или в файл
<v>Для ввода данных от пользователя
<v>Для обработки и преобразования данных
<v>Для сохранения данных в базе данных

<q>Какой параметр в функции print() определяет, чем будут разделены элементы вывода?
<va>sep
<v>end
<v>file
<v>format

<q>Что означает параметр 'end' в функции print()?
<va>Определяет, чем будет заканчиваться строка вывода
<v>Указывает на конец файла
<v>Определяет конечное значение цикла
<v>Закрывает поток вывода

<q>Какое значение по умолчанию у параметра 'sep' в функции print()?
<va>Пробел
<v>Запятая
<v>Точка с запятой
<v>Нет значения по умолчанию

<q>Что произойдет, если в функции print() установить параметр 'end' как '!\\n'?
<va>Порядок вывода не будет важен
<v>Строка будет заканчиваться восклицательным знаком
<v>Вывод будет без переноса на новую строку
<v>Вывод будет перенаправлен в файл

<q>Какой параметр функции print() определяет поток вывода?
<va>file
<v>sep
<v>end
<v>stream

<q>Какое значение по умолчанию у параметра 'end' в функции print()?
<va>'\\n' - перевод каретки на новую строку
<v>' ' - пробел
<v>'\\t' - табуляция
<v>';' - точка с запятой

<q>К чему относится модуль sys, используемый в функции print() для определения потока вывода?
<va>Стандартный модуль Python
<v>Внешний модуль, подключаемый отдельно
<v>Модуль для работы с операционной системой
<v>Модуль для обработки текстовых данных

<q>Какой оператор сравнения в Python означает "точно равно"?
<va>==
<v>=
<v>===
<v><>

<q>Какой оператор сравнения используется для проверки "меньше чем"?
<va><
<v><=
<v><>
<v>!=

<q>Что означает оператор сравнения "!=" в Python?
<va>Не равно
<v>Равно
<v>Меньше или равно
<v>Больше или равно

<q>Какой оператор сравнения означает "больше или равно"?
<va>>=
<v>>
<v><=
<v>==

<q>Что означает оператор ">" в Python?
<va>Больше чем
<v>Больше или равно
<v>Меньше чем
<v>Меньше или равно

<q>Как называется оператор "and" в русской документации Python?
<va>И
<v>Ор
<v>Но
<v>Также

<q>Какой логический оператор Python обозначает логическое "ИЛИ"?
<va>or
<v>and
<v>not
<v>xor

<q>Какой логический оператор используется для отрицания в Python?
<va>not
<v>nand
<v>nor
<v>none

<q>Что будет выведено после выполнения кода: print(c>3, end=' ')?
<va>True
<v>False
<v>Ошибка выполнения
<v>Ничего

<q>Какое значение имеет переменная c после выполнения кода: print(a==3 and b>=4, end=' ')?
<va>True
<v>False
<v>Ошибка выполнения
<v>4

<q>Что будет результатом выполнения выражения: print(a==3 or b>=4, end=' ')?
<va>True
<v>False
<v>Ошибка выполнения
<v>Ничего

<q>Какой результат будет выведен в конце кода: print(a==3 and not b>=4, end=' ')?
<va>False
<v>True
<v>Ошибка выполнения
<v>None

<q>Что будет выведено на экран после выполнения данного кода: print(a['Преподаватель прав']); print(a['Преподаватель неправ'])?
<va>Истина Ложь
<v>Ложь Истина
<v>True False
<v>Ошибка выполнения

<q>Что будет выведено на экран после выполнения следующих команд: print(a.items()); print(a.keys())?
<va>dict_items([('Преподаватель прав', 'Истина'), ('Преподаватель неправ', 'Ложь')]) dict_keys(['Преподаватель прав', 'Преподаватель неправ'])
<v>dict_items(['Преподаватель прав', 'Истина', 'Преподаватель неправ', 'Ложь']) dict_keys(['Преподаватель прав', 'Истина', 'Преподаватель неправ', 'Ложь'])
<v>Список значений Список ключей
<v>Ошибка выполнения

<q>Каким будет результат выполнения выражения: print(a['Преподаватель прав'] == 'Истина' and a['Преподаватель неправ'] == 'Ложь')?
<va>True
<v>False
<v>Ошибка выполнения
<v>Ничего не будет выведено

<q>Какой синтаксис правильный для создания блока условия if...elif в Python?
<va>if условие: инструкция 1 elif условие: инструкция n
<v>if условие then инструкция 1 elseif условие then инструкция n
<v>if условие do инструкция 1 elif условие do инструкция n
<v>if (условие) { инструкция 1 } else if (условие) { инструкция n }

<q>Какое значение будет присвоено переменной a после выполнения данного фрагмента кода?
<va>2
<v>3
<v>4
<v>5

<q>Какой текст будет выведен в результате выполнения этого кода?
<va>"a снова2"
<v>"a2"
<v>"a"
<v>"a is not more than 2"

<q>Сколько раз в коде встречается ключевое слово "else"?
<va>2
<v>1
<v>3
<v>0

<q>Какое значение будет присвоено переменной b, если первое условие if не выполнится?
<va>4
<v>2
<v>3
<v>1

<q>Какое ключевое слово используется для множественного выбора в данном коде?
<va>elif
<v>else
<v>then
<v>case

<q>Что будет выведено, если в первом условии переменная a будет равна 1?
<va>"a is not more than 2"
<v>"a снова2"
<v>"a2"
<v>"a"

<q>В каком случае в консоль будет выведено "b=4"?
<va>Если переменная b изначально не равна 4 и первое условие if не выполнено.
<v>Если переменная a равна 3.
<v>Если первое условие if выполнено.
<v>Если переменная a больше 2.

<q>Как называется цикл в Python, который выполняется до тех пор, пока заданное условие истинно?
<va>Цикл while
<v>Цикл for
<v>Цикл do-while
<v>Цикл if

<q>Какое минимальное число больше 200 и делится без остатка на 17?
<va>204
<v>217
<v>221
<v>238

<q>Какое количество инвестиций по 100 рублей необходимо для получения чистой прибыли в 1000 рублей, если одна инвестиция приносит 10 рублей прибыли?
<va>100
<v>10
<v>1000
<v>110

<q>Что произойдет, если пользователь введет сумму инвестиции меньше 10 или больше 100 рублей согласно заданию Упражнения 3.21?
<va>Выведется сообщение о том, что сумма не принята
<v>Программа завершится с ошибкой
<v>Сумма будет принята
<v>Программа запросит ввод другой суммы

<q>Как называется цикл в Python, используемый для выполнения определенного количества итераций?
<va>Цикл for
<v>Цикл while
<v>Цикл do-while
<v>Цикл if

<q>Какой результат даст код for i in range(1, 6, 2): print(i, end=' ')?
<va>1 3 5
<v>1 2 3 4 5
<v>2 4 6
<v>1 4

<q>Что будет результатом выполнения кода for i in '1 2 3': print(i*2, end='')?
<va>112233
<v>123123
<v>246
<v>123

<q>Что делает функция range в цикле for в Python?
<va>Задает последовательность чисел для итераций цикла
<v>Считает количество выполненных итераций
<v>Определяет тип данных для переменных в цикле
<v>Задает условие окончания цикла

<q>Какая функция используется для немедленного прерывания текущего цикла в Python?
<va>break
<v>continue
<v>exit
<v>stop

<q>Какова цель использования цикла while True в Python?
<va>Создать бесконечный цикл, который будет прерван только при выполнении определенного условия
<v>Выполнить цикл определенное количество раз
<v>Выполнить цикл, пока переменная не достигнет определенного значения
<v>Создать цикл, который никогда не завершится

<q>Какую инструкцию использует Python для формирования логики программы без выполнения каких-либо действий?
<va>pass
<v>continue
<v>break
<v>yield

<q>Что должна вывести программа в случае отрицательного дискриминанта квадратного уравнения?
<va>Сообщение «Корней нет»
<v>Нулевые корни
<v>Мнимые корни
<v>Абсолютные значения корней

<q>Какой результат должен быть выведен, если объект проходит сквозь квадратное отверстие?
<va>«Пройдет»
<v>«Не пройдет»
<v>«Слишком большой»
<v>«Слишком маленький»

<q>Какое действие выполняет программа, возвращающая в квадрат введенные пользователем числа до тех пор, пока не будет введено слово "Выход"?
<va>Возведение в квадрат
<v>Возведение в куб
<v>Извлечение квадратного корня
<v>Деление на два

<q>Как называется функция в Python для вычисления биномиального коэффициента?
<va>factorial
<v>binom
<v>combinations
<v>permute

<q>Каким образом программа определяет, что вводимые числа являются последовательными числами 1\*2\*...*\n?
<va>Пользователь вводит каждое число
<v>Числа генерируются программой автоматически
<v>Числа вводятся через пробел
<v>Числа вводятся в случайном порядке

<q>Какой код программы вычисляет для игрового автомата удвоенную ставку и выдает ее при сериях из 10, 100 и 1000 игр?
<va>Код, который умножает введенную сумму на 450% и проверяет серии
<v>Код, который делит введенную сумму на 2 и проверяет серии
<v>Код, который умножает введенную сумму на 200% и проверяет серии
<v>Код, который умножает введенную сумму на 100% и проверяет серии

<q>С помощью какой функции можно генерировать случайные числа в Python?
<va>randint
<v>random
<v>randrange
<v>shuffle

<q>Что возвращают чистые функции в Python?
<va>Однозначный результат по известным входным параметрам
<v>Результат работы встроенных функций Python
<v>Пользовательские данные
<v>Различные типы ошибок

<q>Что такое встроенные функции Python?
<va>Стандартные функции, возвращающие результат
<v>Функции, созданные пользователем
<v>Функции без возвращаемого результата
<v>Функции, работающие только с числами

<q>Какой пример в тексте демонстрирует использование встроенной функции Python?
<va>Импорт модуля math и использование функции min()
<v>Создание пользовательской функции spis()
<v>Определение чистых функций
<v>Использование инструкции return

<q>Какие функции создаются разработчиком программы в соответствии с поставленными задачами?
<va>Пользовательские функции
<v>Чистые функции
<v>Встроенные функции
<v>Функции без возвращаемого результата

<q>Какая инструкция используется для создания функции в Python?
<va>def
<v>return
<v>import
<v>set

<q>Что может передавать функция в Python?
<va>Числа, строки, списки и другие функции
<v>Только числа
<v>Только списки
<v>Только строки

<q>Что показывает пример с функцией spis() в тексте?
<va>Как создать пользовательскую функцию, которая печатает список
<v>Как использовать встроенные функции Python
<v>Определение чистой функции
<v>Использование инструкции def без return

<q>Какой элемент является необязательным при создании функции в Python?
<va>return возвращаемый результат
<v>def
<v>имя_функции
<v>тело функции

<q>Какой результат будет выведен на экран при вызове функции funl(3, 4)?
<va>12
<v>7
<v>3
<v>4

<q>Какое значение будет присвоено переменной z в функции funl, если а = 4 и b = 3?
<va>12
<v>7
<v>1
<v>0

<q>Какой тип данных будет у возвращаемого значения функции spis?
<va>Кортеж (tuple)
<v>Список (list)
<v>Строка (string)
<v>Число (int)

<q>Что делает функция spis?
<va>Печатает список и возвращает кортеж
<v>Печатает кортеж и возвращает список
<v>Возвращает список и кортеж
<v>Печатает и возвращает список

<q>Какой результат будет выведен на экран в конце выполнения кода с функцией spis?
<va>('K', 'o', 'p', 'T', 'e', 'ж')
<v>['c', 'n', 'и', 'c', 'o', 'к']
<v>('c', 'n', 'и', 'c', 'o', 'к')
<v>['K', 'o', 'p', 'T', 'e', 'ж']

<q>Что необходимо сделать, если функция возвращает значение?
<va>Передать это значение переменной
<v>Напечатать это значение
<v>Изменить это значение
<v>Удалить это значение

<q>Для чего используется команда return в функции?
<va>Для возврата значения из функции
<v>Для вывода значения на экран
<v>Для прерывания выполнения функции
<v>Для перехода к следующей строке кода

<q>Что произойдет, если вызвать функцию, которая не возвращает значение, и не передать ее вывод ни одной переменной?
<va>Функция выполнится, но ее значение не будет сохранено
<v>Функция не выполнится
<v>Произойдет ошибка в коде
<v>Значение функции автоматически сохранится в переменной

<q>Что делает функция print в Python?
<va>Выводит заданные значения на экран.
<v>Удаляет значения.
<v>Сохраняет значения в файл.
<v>Читает значения из файла.

<q>Какое ключевое слово используется для указания глобальной переменной в Python?
<va>global
<v>public
<v>nonlocal
<v>private

<q>Что произойдет после вызова функции gl_glob()?
<va>Значение переменной f станет [12, 13, 14, 15, 16].
<v>Значение переменной f станет [1, 2, 3, 4, 5].
<v>Функция вернет ошибку.
<v>Значение переменной f не изменится.

<q>Какие элементы включает тип «список» в упражнении 3.32?
<va>ФИО, Направление подготовки, Уровень, Курс.
<v>Имя, Группа, Класс.
<v>Номер зачетки, Факультет, Специализация.
<v>Год рождения, Город, Институт.

<q>Как изменится значение переменной Студент после обработки функции?
<va>Увеличится на 1, если это возможно согласно условиям.
<v>Уменьшится на 1.
<v>Удвоится.
<v>Изменится на произвольное число.

<q>Какой запрос необходимо выполнить для перевода студента в магистратуру согласно упражнению 3.32?
<va>«Перевести студента в магистратуру (Да/Нет)?»
<v>«Перевести студента на следующий курс?»
<v>«Удалить студента из списка?»
<v>«Добавить студента в список?»

<q>Какое максимальное значение может иметь переменная Студент для уровня бакалавра?
<va>4
<v>5
<v>3
<v>6

<q>Что представляют собой анонимные функции в Python?
<va>Функции, которые могут содержать только одно выражение и часто используются для создания лямбда-функций.
<v>Функции без имени, которые автоматически вызываются при запуске программы.
<v>Функции, вызываемые без указания их имени.
<v>Функции, которые нельзя вызвать напрямую.

<q>Какое ключевое слово используется для создания генератора в приведенном коде?
<va>yield
<v>return
<v>generate
<v>yielding

<q>Какая функция позволяет получить следующий элемент генератора?
<va>next
<v>__next__
<v>getNext
<v>iterator

<q>С какими начальными значениями инициализируются переменные x1 и x2 в функции fib()?
<va>x1=0, x2=1
<v>x1=1, x2=1
<v>x1=0, x2=0
<v>x1=1, x2=2

<q>Какой результат работы функции будет, если ввести число 5?
<va>1 1 2 3 5
<v>1 2 3 5 8
<v>2 3 5 8 13
<v>0 1 1 2 3

<q>Как называется метод, который обновляет состояние итератора при получении новых значений?
<va>__next__
<v>__iter__
<v>__yield__
<v>__update__

<q>Что будет выведено на экран, если в функцию fib() будет передано число 0?
<va>Ничего не будет выведено
<v>0
<v>1
<v>Ошибка выполнения

<q>Какой тип данных в Python представлен переменной fib1 после выполнения кода fib1=fib()?
<va>generator
<v>list
<v>int
<v>str

<q>Как называется функция, которая рассчитывается в примере?
<va>fib
<v>Функция Фибоначчи
<v>fibonacci_sequence
<v>generate_fib

<q>Для чего предназначена функция-счетчик посещений, упомянутая в упражнении 3.34?
<va>Для подсчета общего количества входов (посещений) на сайт
<v>Для уменьшения количества входов на сайт
<v>Для отслеживания неправильных попыток входа
<v>Для блокировки доступа к сайту после определенного количества входов

<q>Какой результат работы программы будет, если пользователь введет фамилию "Иванов"?
<va>Иванов фамилия Иванов успешно зарегистрирована
<v>Иванов успешно зарегистрирована фамилия Иванов
<v>фамилия Иванов успешно зарегистрирована Иванов
<v>Программа выведет ошибку

<q>Какую роль играет функция def в Python?
<va>Определение новой функции
<v>Вызов функции
<v>Вывод значения функции
<v>Удаление функции

<q>Как называется функция, которую "оборачивает" декоратор?
<va>Обернутая (декорируемая) функция
<v>Декорирующая функция
<v>Внутренняя функция
<v>Глобальная функция

<q>Каким будет вывод программы, если в функцию dec передать функцию, возвращающую строку "Иванов"?
<va>фамилия Иванов успешно зарегистрирована
<v>фамилия успешно зарегистрирована Иванов
<v>успешно зарегистрирована фамилия Иванов
<v>Иванов фамилия успешно зарегистрирована

<q>Что произойдет, если вместо def использовать ключевое слово del для определения функции?
<va>Произойдет синтаксическая ошибка
<v>Функция будет удалена
<v>Функция будет определена без ошибок
<v>Произойдет ошибка времени выполнения

<q>Какая функция в Python используется для запроса ввода данных у пользователя?
<va>input()
<v>print()
<v>def()
<v>del()

<q>Какое ключевое слово используется для определения глобальной переменной внутри функции?
<va>global
<v>nonlocal
<v>public
<v>extern

<q>Что произойдет, если при вызове функции `a=int(input(...))` будет введено число 0?
<va>Будет запрошена фамилия
<v>Будет запрошено имя
<v>Будет запрошено отчество
<v>Ничего не произойдет

<q>Какое слово будет добавлено в вывод функции `fam()`, если перед этим было выбрано "отчество"?
<va>"зарегистрировано"
<v>"успешно"
<v>"фамилия:"
<v>"имя:"

<q>Что означает декоратор `@dec` в данном коде?
<va>Обозначение декоратора для функции
<v>Ошибка синтаксиса
<v>Комментарий
<v>Специальная команда для печати

<q>Какой тип данных должен быть введен при запросе "Введите сумму: "?
<va>Число с плавающей точкой
<v>Целое число
<v>Текстовая строка
<v>Любой тип данных

<q>Какой результат вернет функция `def1(z)` при введении значения '1'?
<va>Умножит введенную сумму на 0.17
<v>Вернет введенную сумму без изменений
<v>Вернет 0
<v>Напечатает "Вы не выбрали банковскую услугу"

<q>Какая строка кода отвечает за ввод типа банковской услуги?
<va>`z=input('Выберите банковскую услугу: \n Кредит – 1, Вклад – 2, Депозит – 3: ')`
<v>`x=float(input('Введите сумму: '))`
<v>`k=def1(z)`
<v>`print('Ожидаемая сумма – ', '{:10.2f}'.format(k(x)), ' рублей')`

<q>Что делает функция `act(x)` внутри функции `def1(z)`?
<va>Вычисляет конечную сумму с учетом выбранной услуги
<v>Принимает решение о выводе сообщения об ошибке
<v>Возвращает значение, введенное пользователем
<v>Печатает ожидаемую сумму

<q>Как называется функция, которая возвращает саму себя?
<va>Рекурсивная функция
<v>Циклическая функция
<v>Линейная функция
<v>Нестатическая функция

<q>Что такое модули в Python?
<va>Программы, содержащие объекты, функции, методы, классы для повторного использования
<v>Набор инструкций для управления циклами
<v>Способ управления памятью в Python
<v>Инструмент для создания пользовательских интерфейсов

<q>Какой синтаксис используется для полного подключения модуля в Python?
<va>import модуль
<v>include модуль
<v>module модуль
<v>use модуль

<q>Что произойдет, если в Python использовать синтаксис "import math as m"?
<va>Модулю math будет присвоен псевдоним m
<v>Будет создан новый модуль с именем m
<v>Модуль math будет удален из программы
<v>Будет проверено наличие модуля math

<q>Какой синтаксис в Python используется для импорта конкретных атрибутов модуля?
<va>from модуль import атрибут
<v>include модуль:атрибут
<v>use модуль -> атрибут
<v>import атрибут from модуль

<q>Что означает синтаксис "from модуль import *" в Python?
<va>Импортируются все атрибуты модуля
<v>Импортируется только основная функция модуля
<v>Модуль импортируется, но без атрибутов
<v>Импортируется только первый атрибут модуля

<q>Какой результат даст следующий код в Python: l=2*math.pi*r, если r=5?
<va>Длина окружности при радиусе 5
<v>Площадь круга при радиусе 5
<v>Объем шара при радиусе 5
<v>Диаметр окружности при радиусе 5

<q>Что произойдет при импорте модуля с использованием его полного имени, если в основной программе уже есть переменные с такими же именами?
<va>Могут возникнуть конфликты из-за перезаписи переменных
<v>Переменные в основной программе будут удалены
<v>Модуль не будет импортирован
<v>Переменные в модуле будут переименованы

<q>Для чего используется присваивание псевдонима при импорте модуля в Python?
<va>Для упрощения обращения к атрибутам модуля
<v>Для увеличения скорости выполнения программы
<v>Для защиты модуля от изменений
<v>Для обозначения, что модуль является частным

<q>Что будет результатом работы функции fun1(x, y) при x=3 и y=5?
<va>12
<v>15
<v>8
<v>20

<q>Какое значение примет переменная s после выполнения функции fun2(x, y) при x=1 и y=3?
<va>6
<v>12
<v>24
<v>10

<q>Что делает функция fun1(x, y)?
<va>Вычисляет сумму чисел от x до y
<v>Вычисляет произведение чисел от x до y
<v>Возводит число x в степень y
<v>Вычисляет разность чисел x и y

<q>Для чего нужно использовать ключевое слово return в функции?
<va>Чтобы вернуть значение из функции
<v>Чтобы прекратить выполнение функции
<v>Чтобы присвоить значение переменной
<v>Чтобы проверить выполнение условия

<q>Что будет выведено на экран при выполнении следующего кода: print('Площадь окружности равна: ', '{:10.4f}'.format(s)) если s=28.2743?
<va>Площадь окружности равна:    28.2743
<v>Площадь окружности равна: 28.2743
<v>Площадь окружности равна: 0028.2743
<v>Площадь окружности равна: 28.274

<q>Каким будет результат выражения 1+2*math.pi*3 если использовать from math import pi?
<va>Будет ошибка, так как надо убрать math.
<v>Результат будет 19.8496
<v>Результат будет 28.2743
<v>Будет ошибка, так как нельзя использовать pi.

<q>Какой синтаксис Python используется для создания собственного модуля?
<va>Создать обычный файл с функциями и импортировать его
<v>Использовать специальную команду create module
<v>Объявить класс с названием модуля
<v>Использовать директиву #module

<q>Каким образом в коде используется переменная x после строки x=int(input('Введите первое число: '))?
<va>Как аргумент в функции fun1 и fun2
<v>Как глобальная переменная
<v>Для вывода результата
<v>Как счётчик цикла for

<q>Какой модуль в Python предоставляет атрибуты для работы с операционной системой?
<va>os
<v>sys
<v>shutil
<v>glob

<q>Что делает команда os.getcwd()?
<va>выводит путь к текущему каталогу
<v>выводит список текстовых файлов
<v>меняет текущий каталог
<v>выводит список всех атрибутов модуля

<q>Для чего используется команда os.system('dir *.txt')?
<va>выполнить указанную команду ОС
<v>вывести путь к текущему каталогу
<v>менять текущий каталог
<v>вывести список всех атрибутов модуля

<q>Что происходит при выполнении команды os.chdir('d:/python/nosobie')?
<va>меняется текущий каталог
<v>выводится путь к текущему каталогу
<v>выводится список текстовых файлов
<v>выводится список всех атрибутов модуля

<q>Какая команда выводит список всех атрибутов модуля?
<va>dir(os)
<v>help(os)
<v>os.getcwd()
<v>os.system('dir *.txt')

<q>Для чего предназначена функция help() в контексте модулей Python?
<va>выводит руководство по модулю
<v>меняет текущий каталог
<v>выводит список текстовых файлов
<v>выполняет указанную команду ОС

<q>Что позволяют делать команды shutil.copyfile() и shutil.move()?
<va>копировать файлы и перемещать каталоги
<v>выводить список текстовых файлов
<v>менять текущий каталог
<v>выводить список всех атрибутов модуля

<q>Какой модуль выводит список файлов на основе заданного шаблона?
<va>glob
<v>os
<v>sys
<v>shutil

<q>Что делает модуль sys.stderr.write в Python?
<va>Заменяет стандартное сообщение Python на пользовательское.
<v>Отправляет данные на стандартный вывод ошибок.
<v>Считывает данные из стандартного ввода.
<v>Останавливает выполнение программы с ошибкой.

<q>Для работы с какими протоколами и сервисами Интернет чаще всего используются модули urllib.request и smtplib в Python?
<va>Для работы с получаемыми данными по URL и для работы с сообщениями.
<v>Для парсинга HTML и CSS.
<v>Для создания графического интерфейса пользователя.
<v>Для обработки дат и времени.

<q>Какой модуль в Python предназначен для тестирования кода программ, записанного в документации?
<va>doctest.
<v>unittest.
<v>pytest.
<v>coverage.

<q>Какой из модулей предназначен для сжатия данных в Python?
<va>zlib.
<v>compress.
<v>archive.
<v>pack.

<q>Какие модули в Python подробно рассмотрены в параграфе 2.7?
<va>datetime, time, timeit, date.
<v>sys, os, json, http.
<v>math, random, statistics, fractions.
<v>threading, multiprocessing, asyncio, queue.

<q>Какой модуль позволяет работать с регулярными выражениями в Python?
<va>re.
<v>regex.
<v>string.
<v>pattern.

<q>Для чего используется функция server.quit() в примере кода на странице?
<va>Для завершения сеанса SMTP соединения.
<v>Для остановки выполнения сервера.
<v>Для очистки памяти от объектов сервера.
<v>Для выхода из интерактивного сеанса Python.

<q>Что демонстрируется на рисунке 3.11?
<va>Пример работы с модулем doctest.
<v>Пример работы с модулем datetime.
<v>Пример работы с интернет-протоколами.
<v>Пример графического интерфейса Python.

<q>Что делает модуль unittest в Python?
<va>Проверяет набор тестов
<v>Обрабатывает XML-файлы
<v>Отправляет почтовые сообщения
<v>Хранит данные в базах данных

<q>Для чего используются модули xmlrpc.client и xmlrpc.server?
<va>Для работы с XML-файлами на стороне клиента и сервера
<v>Для тестирования программ
<v>Для передачи почтовых сообщений
<v>Для интернационализации данных

<q>Какие функциональности объединяет модуль email в Python?
<va>Прием и отправка почтовых сообщений
<v>Чтение и запись в файлы
<v>Тестирование кода
<v>Работа с базами данных

<q>Для чего предназначены модули locale, gettext и codec?
<va>Для интернационализации данных
<v>Для работы с текстовыми файлами
<v>Для тестирования программ
<v>Для работы с XML-файлами

<q>Что позволяет сделать использование отдельных файлов для хранения данных в информационных системах?
<va>Хранение информации в файлах и их обработка программой
<v>Автоматическое тестирование программ
<v>Передача почтовых сообщений
<v>Работа с XML-файлами

<q>Какие методы используются для работы с текстовыми файлами?
<va>Запись, редактирование, удаление и чтение данных
<v>Тестирование программ
<v>Передача почтовых сообщений
<v>Обмен данными в формате XML

<q>Что делает функция open() в Python?
<va>Открывает файл с заданными правами доступа
<v>Отправляет почтовое сообщение
<v>Производит тестирование кода
<v>Обрабатывает XML-файлы

<q>Что обозначает последний аргумент в функции open('имя файла', 'режим', [encoding]) в Python?
<va>Кодировку данных файла
<v>Путь к файлу
<v>Режим работы с файлом
<v>Размер файла

<q>Какой режим открытия файла задан по умолчанию?
<va>r
<v>w
<v>x
<v>a

<q>Для чего используется режим "w" при открытии файла?
<va>Для записи, при этом содержимое удаляется, а при отсутствии файла создается новый
<v>Только для чтения
<v>Для записи в конец файла
<v>Для чтения и записи без удаления содержимого

<q>Что произойдет, если попытаться открыть файл в режиме "x" и файл существует?
<va>Интерпретатор выдаст ошибку
<v>Файл откроется для чтения
<v>Файл откроется для записи и удалит содержимое
<v>Файл откроется в двоичном режиме

<q>Что делает режим "a" при открытии файла?
<va>Открывает файл для записи и добавляет данные в конец файла
<v>Открывает файл только для чтения
<v>Открывает файл для записи и удаляет содержимое
<v>Открывает файл в двоичном режиме

<q>Какой режим открытия файла позволяет одновременно читать и записывать?
<va>+
<v>r
<v>w
<v>x

<q>Что обозначает режим "t" при открытии файла?
<va>Файл открывается в текстовом режиме
<v>Файл открывается только для чтения
<v>Файл открывается только для записи
<v>Файл открывается в двоичном режиме

<q>Какая комбинация режимов открытия файла обозначает чтение и запись в текстовом режиме?
<va>rt
<v>w+
<v>rb
<v>xt

<q>Какая функция необходима для закрытия файла и освобождения ресурсов?
<va>close()
<v>open()
<v>read()
<v>write()

<q>Что такое исключения в Python?
<va>Особый тип данных, создающийся на события, приводящие к остановке выполнения программы
<v>Функции для обработки ошибок в коде
<v>Синтаксические ошибки в программе
<v>Переменные, хранящие текст ошибок

<q>Какое исключение возникает при делении на ноль в Python?
<va>Zero Division Error
<v>Value Error
<v>Type Error
<v>Index Error

<q>Какое исключение возникает, если обратиться к несуществующему атрибуту объекта?
<va>Attribute Error
<v>Import Error
<v>Key Error
<v>Name Error

<q>Как называется базовое исключение в Python, на котором строятся все остальные?
<va>Exception
<v>BaseError
<v>RootException
<v>CoreException

<q>Какая ошибка возникает, когда операция или функция применяется к объекту несоответствующего типа?
<va>Type Error
<v>Value Error
<v>Syntax Error
<v>Import Error

<q>Какое исключение возникает при попытке доступа к элементу последовательности, индекс которого выходит за пределы допустимых значений?
<va>Index Error
<v>Key Error
<v>Range Error
<v>Boundary Error

<q>Какое исключение возникает при попытке обратиться к переменной, которая не была определена?
<va>Name Error
<v>UndefinedVariable Error
<v>Declaration Error
<v>NonExistent Error

<q>Какая ошибка произойдет, если попытаться импортировать несуществующий модуль?
<va>Import Error
<v>ModuleNotFound Error
<v>Package Error
<v>Importation Error

<q>Что позволяет сделать обработка исключений в программировании?
<va>Заменить стандартный вывод ошибки своим сообщением
<v>Полностью избежать ошибок в программе
<v>Увеличить скорость выполнения программы
<v>Автоматически исправлять все ошибки в коде

<q>Какая инструкция используется для обработки исключений в Python?
<va>try...except
<v>if...else
<v>while...else
<v>for...in

<q>Что делает блок finally в конструкции try...except?
<va>Выполняется в любом случае, независимо от наличия исключения
<v>Выполняется только если не было никаких исключений
<v>Определяет дополнительные исключения
<v>Игнорирует все исключения, позволяя программе продолжить работу

<q>Как указать в обработке исключений, что необходимо перехватить любое исключение?
<va>Использовать Exception после except
<v>Использовать Error после except
<v>Использовать Any после except
<v>Использовать All после except

<q>Что произойдет, если в блоке try произойдет исключение, для которого нет соответствующего блока except?
<va>Программа выведет стандартное сообщение об ошибке
<v>Блок finally будет пропущен
<v>Программа завершит выполнение без сообщений об ошибках
<v>Исключение будет автоматически обработано как предупреждение

<q>Может ли конструкция try...except содержать несколько блоков except?
<va>Да, для обработки разных типов исключений
<v>Нет, разрешен только один блок except
<v>Да, но только если они обрабатывают один и тот же тип исключения
<v>Нет, дополнительные исключения должны обрабатываться в блоке finally

<q>Какой блок кода будет выполнен, если в конструкции try...except произойдет исключение, но его тип не соответствует указанному в блоке except?
<va>Блок except с Exception, если он присутствует, или стандартный вывод ошибки
<v>Блок else
<v>Блок finally, минуя все блоки except
<v>Ни один блок кода не будет выполнен, программа немедленно завершится

<q>Что произойдет при выполнении кода, где попытка вычислить синус от строки обернута в обработчик исключений с блоками try, except TypeError и finally?
<va>Будет выведено сообщение об ошибке типа и сообщение из блока finally
<v>Программа завершится с ошибкой, не выведя ничего
<v>Будет попытка исправить ошибку и повторить операцию
<v>Будет выведено только сообщение из блока finally

<q>Что произойдет, если в первом упражнении ввести текст вместо числа?
<va>Программа выведет исключение, связанное с неверным преобразованием типа.
<v>Программа нормально выполнится, выводя результат.
<v>Программа завершит выполнение без сообщений об ошибке.
<v>Программа выведет сообщение о том, что введено число меньше 0.

<q>Какое исключение будет сгенерировано, если в первом упражнении ввести 0?
<va>Исключение, связанное с делением на ноль.
<v>Исключение, связанное с вводом некорректного типа данных.
<v>Исключение, связанное с вводом отрицательного числа.
<v>Никакое исключение сгенерировано не будет.

<q>Какой метод используется для создания собственного исключения?
<va>raise
<v>throw
<v>try
<v>except

<q>Какая ошибка будет выведена, если во втором упражнении ввести число меньше 0?
<va>Вы ввели число меньше 0.
<v>Вы ввели не число.
<v>Ошибка деления на ноль.
<v>Никакая ошибка не будет выведена.

<q>Что требуется для создания собственного исключения?
<va>Создать класс исключений.
<v>Использовать готовые классы исключений.
<v>Написать функцию для обработки исключений.
<v>Применить оператор return в блоке try.

<q>Как обрабатывается исключение в Python?
<va>Используя блоки try и except.
<v>Используя блоки if и else.
<v>Используя функцию handleError.
<v>Используя оператор switch.

<q>Что произойдет, если во втором упражнении вместо числа ввести текст?
<va>Программа выведет сообщение "Вы ввели не число".
<v>Программа успешно выполнится без ошибок.
<v>Программа выведет сообщение о делении на ноль.
<v>Программа выведет сообщение о вводе числа меньше 0.

<q>Как называется оператор, который позволяет Python выдавать информацию об исключении в блоке except?
<va>as
<v>is
<v>in
<v>for
