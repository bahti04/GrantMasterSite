<q>Что такое структура данных?
<va>Это способ организации и хранения данных, чтобы они могли быть эффективно использованы.
<v>Это алгоритм для сортировки данных.
<v>Это язык программирования.
<v>Это метод отладки программ.

<q>Какая структура данных использует принцип "первым вошел, первым вышел" (FIFO)?
<va>Очередь
<v>Стек
<v>Дерево
<v>Граф

<q>Какая структура данных использует принцип "последним вошел, первым вышел" (LIFO)?
<va>Стек
<v>Очередь
<v>Массив
<v>Хеш-таблица

<q>Какой метод используется для добавления элемента в стек?
<va>push
<v>enqueue
<v>insert
<v>add

<q>Какой метод используется для удаления элемента из стека?
<va>pop
<v>dequeue
<v>remove
<v>delete

<q>Какой метод используется для добавления элемента в очередь?
<va>enqueue
<v>push
<v>insert
<v>add

<q>Какой метод используется для удаления элемента из очереди?
<va>dequeue
<v>pop
<v>remove
<v>delete

<q>Как называется структура данных, в которой каждый элемент имеет указатель на следующий элемент?
<va>Связанный список
<v>Массив
<v>Стек
<v>Очередь

<q>Какой тип связанного списка имеет указатели как на следующий, так и на предыдущий элементы?
<va>Двусвязный список
<v>Односвязный список
<v>Кольцевой список
<v>Хеш-список

<q>Что такое хеш-таблица?
<va>Это структура данных, которая реализует ассоциативный массив, используя хеш-функции.
<v>Это структура данных, которая хранит элементы в отсортированном порядке.
<v>Это структура данных, которая использует указатели для связывания элементов.
<v>Это структура данных, которая организует элементы в виде дерева.

<q>Как называется операция, используемая для нахождения позиции элемента в хеш-таблице?
<va>Хеширование
<v>Сортировка
<v>Поиск
<v>Инверсия

<q>Что такое коллизия в хеш-таблице?
<va>Это ситуация, когда два разных ключа имеют одинаковый хеш-значение.
<v>Это ситуация, когда элемент не найден в хеш-таблице.
<v>Это процесс удаления элемента из хеш-таблицы.
<v>Это метод разрешения конфликта при вставке элемента.

<q>Какой метод разрешения коллизий в хеш-таблице использует дополнительные списки для хранения элементов?
<va>Метод цепочек (chaining)
<v>Открытая адресация
<v>Метод линейного пробирования
<v>Двойное хеширование

<q>Что такое дерево в контексте структур данных?
<va>Это иерархическая структура данных, состоящая из узлов, каждый из которых имеет ноль или более дочерних узлов.
<v>Это структура данных, в которой элементы хранятся в отсортированном порядке.
<v>Это структура данных, в которой элементы добавляются и удаляются по принципу LIFO.
<v>Это структура данных, реализующая ассоциативный массив.

<q>Что такое двоичное дерево?
<va>Это дерево, в котором каждый узел имеет не более двух дочерних узлов.
<v>Это дерево, в котором каждый узел имеет не более трех дочерних узлов.
<v>Это дерево, в котором элементы хранятся в отсортированном порядке.
<v>Это дерево, в котором элементы добавляются и удаляются по принципу FIFO.

<q>Как называется двоичное дерево, в котором значения левого потомка меньше значения родительского узла, а значения правого потомка больше значения родительского узла?
<va>Двоичное дерево поиска
<v>Двоичное дерево
<v>AVL-дерево
<v>Красно-черное дерево

<q>Что такое сбалансированное дерево?
<va>Это дерево, в котором высота поддеревьев любого узла отличается не более чем на единицу.
<v>Это дерево, в котором все листья находятся на одном уровне.
<v>Это дерево, в котором каждый узел имеет два потомка.
<v>Это дерево, в котором все элементы хранятся в отсортированном порядке.

<q>Как называется метод обхода дерева, при котором сначала посещается корень, затем левое поддерево, затем правое поддерево?
<va>Прямой обход (preorder)
<v>Центрированный обход (inorder)
<v>Обратный обход (postorder)
<v>Обход в ширину (breadth-first)

<q>Как называется метод обхода дерева, при котором сначала посещается левое поддерево, затем корень, затем правое поддерево?
<va>Центрированный обход (inorder)
<v>Прямой обход (preorder)
<v>Обратный обход (postorder)
<v>Обход в ширину (breadth-first)

<q>Что такое граф в контексте структур данных?
<va>Это структура данных, состоящая из узлов (вершин) и ребер, соединяющих пары узлов.
<v>Это структура данных, состоящая из узлов и указателей на следующий элемент.
<v>Это структура данных, состоящая из узлов и их значений.
<v>Это структура данных, состоящая из элементов, хранящихся в отсортированном порядке.

<q>Как называется граф, в котором нет циклов?
<va>Ациклический граф
<v>Циклический граф
<v>Направленный граф
<v>Ненаправленный граф

<q>Что выведет следующий код?
#include <iostream>
#include <stack>
using namespace std
int main() {
    stack<int> s;
    s.push(1);
    s.push(2);
    s.push(3);
    cout << s.top() << endl;
    s.pop();
    cout << s.top() << endl;
    return 0;
}
<va>3\n2
<v>2\n1
<v>1\n2
<v>3\n1

<q>Что выведет следующий код?
#include <iostream>
#include <queue>
using namespace std;
int main() {
    queue<int> q;
    q.push(1);
    q.push(2);
    q.push(3);
    cout << q.front() << endl;
    q.pop();
    cout << q.front() << endl;
    return 0;
}
<va>1\n2
<v>3\n2
<v>2\n1
<v>1\n3

<q>Что выведет следующий код?
#include <iostream>
#include <list>
using namespace std;
int main() {
    list<int> lst = {1, 2, 3, 4, 5};
    lst.reverse();
    for (auto it = lst.begin(); it != lst.end(); ++it) {
        cout << *it << " ";
    }
    return 0;
}
<va>5 4 3 2 1
<v>1 2 3 4 5
<v>2 1 4 3 5
<v>5 3 1 4 2

<q>Что выведет следующий код?
#include <iostream>
#include <map>
using namespace std;
int main() {
    map<int, string> m;
    m[1] = "one";
    m[2] = "two";
    m[3] = "three";
    cout << m[2] << endl;
    return 0;
}
<va>two
<v>one
<v>three
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
#include <set>
using namespace std;
int main() {
    set<int> s = {1, 2, 3, 4, 5};
    auto it = s.find(3);
    if (it != s.end()) {
        cout << "Element found: " << *it << endl;
    } else {
        cout << "Element not found" << endl;
    }
    return 0;
}
<va>Element found: 3
<v>Element found: 5
<v>Element not found
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int main() {
    vector<int> v = {3, 1, 4, 1, 5, 9};
    sort(v.begin(), v.end());
    for (int n : v) {
        cout << n << " ";
    }
    return 0;
}
<va>1 1 3 4 5 9
<v>3 1 4 1 5 9
<v>9 5 4 3 1 1
<v>1 3 1 4 5 9

<q>Что выведет следующий код?
#include <iostream>
#include <stack>
using namespace std;
int main() {
    stack<int> s;
    s.push(10);
    s.push(20);
    s.pop();
    s.push(30);
    cout << s.top() << endl;
    return 0;
}
<va>30
<v>10
<v>20
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
#include <queue>
using namespace std;
int main() {
    queue<string> q;
    q.push("first");
    q.push("second");
    q.pop();
    q.push("third");
    cout << q.front() << endl;
    return 0;
}
<va>second
<v>first
<v>third
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
#include <deque>
using namespace std;
int main() {
    deque<int> d = {1, 2, 3, 4, 5};
    d.push_front(0);
    d.push_back(6);
    for (int n : d) {
        cout << n << " ";
    }
    return 0;
}
<va>0 1 2 3 4 5 6
<v>1 2 3 4 5 0 6
<v>1 2 3 4 5 6
<v>0 1 2 3 4 6

<q>Что выведет следующий код?
#include <iostream>
#include <map>
using namespace std;
int main() {
    map<string, int> m;
    m["apple"] = 5;
    m["banana"] = 3;
    m["cherry"] = 7;
    cout << m["banana"] << endl;
    return 0;
}
<va>3
<v>5
<v>7
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
#include <unordered_set>
using namespace std;
int main() {
    unordered_set<int> us = {10, 20, 30, 40, 50};
    us.insert(60);
    for (int n : us) {
        cout << n << " ";
    }
    return 0;
}
<va>Порядок элементов не гарантирован, но все элементы будут напечатаны, включая 60
<v>10 20 30 40 50 60
<v>60 50 40 30 20 10
<v>Ошибка компиляции
