<q>Что такое функция в C++?
<va>Это блок кода, который выполняет определенную задачу и может быть вызван из других частей программы.
<v>Это переменная, которая хранит значение.
<v>Это оператор для выполнения циклов.
<v>Это ключевое слово для объявления массива.

<q>Какое ключевое слово используется для определения функции в C++?
<va>void
<v>def
<v>func
<v>declare

<q>Какой тип данных используется для функции, которая не возвращает значение?
<va>void
<v>int
<v>float
<v>char

<q>Что такое параметр функции?
<va>Это переменная, которая передается функции при ее вызове.
<v>Это значение, возвращаемое функцией.
<v>Это имя функции.
<v>Это тело функции.

<q>Как передать аргумент по значению в функцию?
<va>Указать тип параметра и его имя в списке параметров функции.
<v>Использовать ключевое слово pass.
<v>Добавить символ & перед именем параметра.
<v>Добавить символ * перед именем параметра.

<q>Как передать аргумент по ссылке в функцию?
<va>Добавить символ & перед именем параметра в списке параметров функции.
<v>Указать тип параметра и его имя в списке параметров функции.
<v>Добавить символ * перед именем параметра в списке параметров функции.
<v>Использовать ключевое слово ref.

<q>Что такое возвращаемое значение функции?
<va>Это значение, которое функция возвращает после завершения своей работы.
<v>Это значение, которое передается в функцию при ее вызове.
<v>Это имя функции.
<v>Это параметр функции.

<q>Какую команду нужно использовать для возвращения значения из функции?
<va>return
<v>yield
<v>exit
<v>break

<q>Можно ли в одной функции использовать несколько операторов return?
<va>Да, но только один оператор return будет выполнен в зависимости от условий.
<v>Нет, можно использовать только один оператор return.
<v>Да, все операторы return будут выполнены последовательно.
<v>Нет, return можно использовать только в конце функции.

<q>Что произойдет, если функция, возвращающая значение, не использует оператор return?
<va>Будет вызвано неопределенное поведение или ошибка.
<v>Функция завершится без возврата значения.
<v>Функция вернет значение по умолчанию.
<v>Функция завершит выполнение и вернет 0.

<q>Как называется функция, которая вызывает саму себя?
<va>Рекурсивная функция
<v>Лямбда-функция
<v>Глобальная функция
<v>Локальная функция

<q>Что такое перегрузка функции?
<va>Это возможность определения нескольких функций с одинаковым именем, но с разными параметрами.
<v>Это возможность вызова функции несколько раз подряд.
<v>Это возможность определения функции внутри другой функции.
<v>Это возможность определения функции без параметров.

<q>Можно ли в C++ перегружать операторы?
<va>Да, с помощью функций-членов или дружественных функций.
<v>Нет, операторы не могут быть перегружены.
<v>Да, но только арифметические операторы.
<v>Нет, перегружать можно только методы классов.

<q>Как называется функция, определенная внутри класса?
<va>Метод
<v>Параметр
<v>Переменная
<v>Константа

<q>Что такое inline функция?
<va>Это функция, тело которой подставляется вместо вызова функции для повышения производительности.
<v>Это функция, определенная внутри другой функции.
<v>Это функция, которая не имеет параметров.
<v>Это функция, вызываемая из другого файла.

<q>Как объявить функцию, определенную в другом файле?
<va>Использовать ключевое слово extern перед объявлением функции.
<v>Использовать ключевое слово inline перед объявлением функции.
<v>Использовать ключевое слово static перед объявлением функции.
<v>Использовать ключевое слово global перед объявлением функции.

<q>Что такое прототип функции?
<va>Это объявление функции, которое сообщает компилятору о ее существовании до ее определения.
<v>Это определение функции, которое содержит только ее имя.
<v>Это вызов функции, который передает ей параметры.
<v>Это описание параметров функции.

<q>Как называется функция, не имеющая тела?
<va>Чисто виртуальная функция
<v>Рекурсивная функция
<v>Лямбда-функция
<v>Инлайн-функция

<q>Что такое дружественная функция?
<va>Это функция, которая имеет доступ к закрытым и защищенным членам класса.
<v>Это функция, определенная внутри другого класса.
<v>Это функция, которая вызывает другую функцию.
<v>Это функция, которая не возвращает значения.

<q>Как называется функция, вызываемая автоматически при создании объекта класса?
<va>Конструктор
<v>Деструктор
<v>Инициализатор
<v>Инстанциатор

<q>Как называется функция, вызываемая автоматически при уничтожении объекта класса?
<va>Деструктор
<v>Конструктор
<v>Инициализатор
<v>Инстанциатор

<q>Что такое лямбда-функция в C++?
<va>Это анонимная функция, которая может быть определена в месте ее вызова.
<v>Это функция, определенная внутри другого класса.
<v>Это функция, вызываемая автоматически при создании объекта класса.
<v>Это функция, которая не возвращает значения.

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
void printHello() {
    cout << "Hello, World!" << endl;
}

int main() {
    printHello();
    return 0;
}
<va>Hello, World!
<v>Ничего не выведет
<v>Ошибка компиляции
<v>Программа зависнет

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
int add(int a, int b) {
    return a + b;
}
int main() {
    cout << add(3, 4) << endl;
    return 0;
}
<va>7
<v>3
<v>4
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
void printNumbers(int n) {
    for (int i = 0; i < n; i++) {
        cout << i << " ";
    }
    cout << endl;
}
int main() {
    printNumbers(5);
    return 0;
}
<va>0 1 2 3 4
<v>1 2 3 4 5
<v>0 1 2 3 4 5
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
int factorial(int n) {
    if (n <= 1) return 1;
    return n * factorial(n - 1);
}
int main() {
    cout << factorial(5) << endl;
    return 0;
}
<va>120
<v>24
<v>5
<v>1

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
void swap(int &a, int &b) {
    int temp = a;
    a = b;
    b = temp;
}
int main() {
    int x = 10, y = 20;
    swap(x, y);
    cout << "x: " << x << ", y: " << y << endl;
    return 0;
}
<va>x: 20, y: 10
<v>x: 10, y: 20
<v>x: 10, y: 10
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
int square(int x) {
    return x * x;
}
int main() {
    cout << square(5) << endl;
    return 0;
}
<va>25
<v>5
<v>10
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
int sum(int a, int b = 5) {
    return a + b;
}
int main() {
    cout << sum(10) << endl;
    cout << sum(10, 20) << endl;
    return 0;
}
<va>15\n30
<v>10\n30
<v>15\n25
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
int add(int a, int b) {
    return a + b;
}
double add(double a, double b) {
    return a + b;
}
int main() {
    cout << add(3, 4) << endl;
    cout << add(3.5, 4.5) << endl;
    return 0;
}
<va>7\n8
<v>7\n7
<v>7.5\n8
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
int multiply(int a, int b) {
    return a * b;
}
int main() {
    int x = 5, y = 4;
    cout << multiply(x, y) << endl;
    return 0;
}
<va>20
<v>9
<v>10
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}
int main() {
    int arr[] = {1, 2, 3, 4, 5};
    printArray(arr, 5);
    return 0;
}
<va>1 2 3 4 5
<v>0 1 2 3 4
<v>1 2 3 4
<v>Ошибка компиляции

<q>Что выведет следующий код?
#include <iostream>
using namespace std;
void printMessage(string message) {
    cout << message << endl;
}
int main() {
    printMessage("Hello, Functions!");
    return 0;
}
<va>Hello, Functions!
<v>Hello, World!
<v>Functions!
<v>Ошибка компиляции
